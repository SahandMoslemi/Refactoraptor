[
 {
  "id": 1,
  "input": "public class People {\n    private String firstName;\n    private String surname;\n    private Type type;\n    private int salary;\n\n    public People(String firstName, String lastName, Type type, int salary) {\n        this.firstName = firstName;\n        this.surname = lastName;\n        this.type = type;\n        this.salary = salary;\n    }\n\n    public String getFirstName() {\n        return firstName;\n    }\n\n    public void setFirstName(String firstName) {\n        this.firstName = firstName;\n    }\n\n    public String getSurname() {\n        return surname;\n    }\n\n    public void setSurname(String surname) {\n        this.surname = surname;\n    }\n\n    public Type getType() {\n        return type;\n    }\n\n    public int getSalary() {\n        return salary;\n    }\n\n    public void setSalary(int salary) {\n        this.salary = salary;\n    }\n\n    public void setType(Type type) {\n        this.type = type;\n    }\n\n    public double calculateSalaryWithBonus() {\n        if (this.type == Type.Boss) {\n            return this.salary * 2;\n        } else if (this.type == Type.Director) {\n            return this.salary * 1.5;\n        } else if (this.type == Type.Employee) {\n            return this.salary * 1.0;\n        }\n        return this.salary;\n    }\n}",
  "output": "public abstract class People {\n    private String firstName;\n    private String surname;\n    private int salary;\n\n    public People(String firstName, String lastName, int salary) {\n        this.firstName = firstName;\n        this.surname = lastName;\n        this.salary = salary;\n    }\n\n    public String getFirstName() {\n        return firstName;\n    }\n\n    public void setFirstName(String firstName) {\n        this.firstName = firstName;\n    }\n\n    public String getSurname() {\n        return surname;\n    }\n\n    public void setSurname(String surname) {\n        this.surname = surname;\n    }\n\n    public int getSalary() {\n        return salary;\n    }\n\n    public void setSalary(int salary) {\n        this.salary = salary;\n    }\n    \n    public abstract double calculateSalaryWithBonus();\n}\n\n\nclass Boss extends People {\n    public Boss(String firstName, String lastName, int salary) {\n        super(firstName, lastName, salary);\n    }\n\n    @Override\n    public double calculateSalaryWithBonus() {\n        return getSalary() * 2;  // Bonus for Boss\n    }\n}\n\n\nclass Director extends People {\n    public Director(String firstName, String lastName, int salary) {\n        super(firstName, lastName, salary);\n    }\n\n    @Override\n    public double calculateSalaryWithBonus() {\n        return getSalary() * 1.5;  // Bonus for Director\n    }\n}\n\n\nclass Employee extends People {\n    public Employee(String firstName, String lastName, int salary) {\n        super(firstName, lastName, salary);\n    }\n\n    @Override\n    public double calculateSalaryWithBonus() {\n        return getSalary() * 1.0; \n    }",
  "language": "Java",
  "violation": "OCP",
   "level": "easy"
 },
  {
    "id": 2,
    "input": "abstract class Employee {\n    protected String firstName;\n    protected String surname;\n    protected int baseSalary;\n\n    public Employee(String firstName, String surname, int baseSalary) {\n        this.firstName = firstName;\n        this.surname = surname;\n        this.baseSalary = baseSalary;\n    }\n\n    public abstract int getTotalSalary();\n}\n\nclass PayrollCalculator {\n\n\n    private final int bossBonus = 1000;\n    private final int directorBonus = 500;\n    private final int workerBonus = 0;\n\n    public PayrollCalculator() {\n    }\n\n    public int calculateTotalSalary(Employee employee) {\n        return employee.baseSalary + getBonusForType(employee);\n    }\n\n    private int getBonusForType(Employee employee) {\n\n        return getBossBonus(employee) + getDirectorBonus(employee) + getWorkerBonus(employee);\n    }\n\n\n    private int getBossBonus(Employee employee) {\n\n\n        try {\n            Boss casted = (Boss) employee;\n            return bossBonus;\n        } catch (ClassCastException e) {\n            return 0;\n        }\n    }\n\n    private int getDirectorBonus(Employee employee) {\n\n        try {\n            Director casted = (Director) employee;\n            return directorBonus;\n        } catch (ClassCastException e) {\n            return 0;\n        }\n    }\n\n    private int getWorkerBonus(Employee employee) {\n\n        try {\n            Worker casted = (Worker) employee;\n            return workerBonus;\n        } catch (ClassCastException e) {\n            return 0;\n        }\n    }\n}\n\nclass Boss extends Employee {\n    public Boss(String firstName, String surname, int baseSalary) {\n        super(firstName, surname, baseSalary);\n    }\n\n    @Override\n    public int getTotalSalary() {\n        return baseSalary;\n    }\n}\n\n\nclass Director extends Employee {\n    public Director(String firstName, String surname, int baseSalary) {\n        super(firstName, surname, baseSalary);\n    }\n\n    @Override\n    public int getTotalSalary() {\n        return baseSalary;\n    }\n}\n\nclass Worker extends Employee {\n    public Worker(String firstName, String surname, int baseSalary) {\n        super(firstName, surname, baseSalary);\n    }\n\n    @Override\n    public int getTotalSalary() {\n        return baseSalary;\n    }\n}",
    "output": "abstract class Employee {\n    protected String firstName;\n    protected String surname;\n    protected int baseSalary;\n\n    public Employee(String firstName, String surname, int baseSalary) {\n        this.firstName = firstName;\n        this.surname = surname;\n        this.baseSalary = baseSalary;\n    }\n\n    public abstract int getTotalSalary();\n    public abstract int getBonus();\n}\n\nclass PayrollCalculator {\n    public int calculateTotalSalary(Employee employee) {\n        return employee.baseSalary + employee.getBonus();\n    }\n}\n\nclass Boss extends Employee {\n    public Boss(String firstName, String surname, int baseSalary) {\n        super(firstName, surname, baseSalary);\n    }\n\n    @Override\n    public int getTotalSalary() {\n        return baseSalary + getBonus();\n    }\n\n    @Override\n    public int getBonus() {\n        return 1000;\n    }\n}\n\nclass Director extends Employee {\n    public Director(String firstName, String surname, int baseSalary) {\n        super(firstName, surname, baseSalary);\n    }\n\n    @Override\n    public int getTotalSalary() {\n        return baseSalary + getBonus();\n    }\n\n    @Override\n    public int getBonus() {\n        return 500;\n    }\n}\n\nclass Worker extends Employee {\n    public Worker(String firstName, String surname, int baseSalary) {\n        super(firstName, surname, baseSalary);\n    }\n\n    @Override\n    public int getTotalSalary() {\n        return baseSalary + getBonus();\n    }\n\n    @Override\n    public int getBonus() {\n        return 0;\n    }\n}",
    "language": "Java",
    "violation": "OCP",
    "level": "medium"
  }
]