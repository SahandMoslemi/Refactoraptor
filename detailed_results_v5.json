{
  "isp--gpt-4o-mini--example": {
    "example": {
      "model": "isp--gpt-4o-mini--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "isp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 255,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 237,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 211,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 202,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 253,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 267,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 342,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 242,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 254,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 313,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 285,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 311,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 282,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 213,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 217,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 183,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 258,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 253,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 315,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 241,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 252,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 306,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 333,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 215,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 274,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 221,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 263,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 193,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 215,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 258,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 377,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 269,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 256,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 452,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 331,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 250,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 279,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 217,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 212,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 211,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 269,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 264,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 214,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 271,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 204,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 376,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 181,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 267,
              "model": "gpt-4o-mini",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 38,
            "fail": 10,
            "error": 0,
            "accuracy": 0.7916666666666666
          }
        }
      },
      "overall_stats": {
        "total_pass": 38,
        "total_fail": 10,
        "total_error": 0,
        "languages": {
          "CSHARP": 12,
          "JAVA": 12,
          "KOTLIN": 12,
          "PYTHON": 12
        }
      }
    }
  },
  "isp--codellama70b-temp0-latest--example": {
    "example": {
      "model": "isp--codellama70b-temp0-latest--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "isp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 911,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 844,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1012,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 531,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 917,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1382,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4625,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1100,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 527,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1148,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1072,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 860,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1255,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 900,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 826,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 568,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 473,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1800,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 905,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1014,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2716,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1194,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1059,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 937,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 990,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 711,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 985,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 500,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1059,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2907,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1049,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1493,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 910,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 125,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 872,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 125,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2403,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2819,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 867,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1382,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4448,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2029,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 168,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1614,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 279,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1262,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 733,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 168,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 0,
            "fail": 48,
            "error": 0,
            "accuracy": 0.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 0,
        "total_fail": 48,
        "total_error": 0,
        "languages": {
          "CSHARP": 12,
          "JAVA": 12,
          "KOTLIN": 12,
          "PYTHON": 12
        }
      }
    }
  },
  "isp--codellama70b-temp0-latest--smell": {
    "smell": {
      "model": "isp--codellama70b-temp0-latest--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "isp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1015,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 847,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 443,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 469,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2519,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1342,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 866,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1987,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 566,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1433,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1009,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 935,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1266,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1739,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1113,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 742,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 515,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1800,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 381,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 641,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 904,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1402,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1272,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1068,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 671,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1360,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 629,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1041,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1245,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 25,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 548,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1284,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 740,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 822,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 585,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 927,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 653,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 497,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 553,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 604,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1378,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1050,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 168,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1272,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1829,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1462,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 126,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 459,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 1,
            "fail": 47,
            "error": 0,
            "accuracy": 0.020833333333333332
          }
        }
      },
      "overall_stats": {
        "total_pass": 1,
        "total_fail": 47,
        "total_error": 0,
        "languages": {
          "CSHARP": 12,
          "JAVA": 12,
          "KOTLIN": 12,
          "PYTHON": 12
        }
      }
    }
  },
  "isp--codellama70b-temp0-latest--ensemble": {
    "ensemble": {
      "model": "isp--codellama70b-temp0-latest--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "isp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1442,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3325,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1875,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2381,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1610,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1446,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1554,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1389,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1296,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1790,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2358,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1508,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1547,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2322,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1835,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1778,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1595,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1253,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1268,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1826,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1000,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1686,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1956,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1734,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1521,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1807,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2418,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1720,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1589,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2097,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1153,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1743,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1835,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1616,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1509,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1409,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1726,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1555,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2297,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1875,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1401,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2353,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1077,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 643,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1628,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2110,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1313,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1449,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 0,
            "fail": 48,
            "error": 0,
            "accuracy": 0.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 0,
        "total_fail": 48,
        "total_error": 0,
        "languages": {
          "CSHARP": 12,
          "JAVA": 12,
          "KOTLIN": 12,
          "PYTHON": 12
        }
      }
    }
  },
  "isp--qwen2.5-coder32b-temp0-latest--smell": {
    "smell": {
      "model": "isp--qwen2.5-coder32b-temp0-latest--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "isp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 206,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 367,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 383,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 230,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 6186,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4106,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3839,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3036,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 596,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 329,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 301,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 316,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 409,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 447,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1122,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1075,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3363,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 7343,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4481,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 5990,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 395,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 373,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1152,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 323,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 445,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 487,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 833,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 579,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 6342,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 8389,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3317,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 323,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 527,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 373,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1532,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 323,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 255,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class FileManager:\n    def read_file(self, file_path):\n        with open(file_path, 'r') as file:\n            return file.read()\n\n    def write_file(self, file_path, content):\n        with open(file_path, 'w') as file:\n            file.write(content)\n\n    def delete_file(self, file_path):\n        import os\n        os.remove(file_path)\n\n    def compress_file(self, file_path):\n        import zipfile\n        with zipfile.ZipFile(file_path + '.zip', 'w') as zipf:\n            zipf.write(file_path)\n\n    def decompress_file(self, file_path):\n        import zipfile\n        with zipfile.ZipFile(file_path, 'r') as zipf:\n            zipf.extractall()\n\n    def encrypt_file(self, file_path):\n        from cryptography.fernet import Fernet\n        key = Fernet.generate_key()\n        cipher_suite = Fernet(key)\n        with open(file_path, 'rb') as file:\n            file_data = file.read()\n        encrypted_data = cipher_suite.encrypt(file_data)\n        with open(file_path + '.enc', 'wb') as file:\n            file.write(encrypted_data)\n\n    def decrypt_file(self, file_path):\n        from cryptography.fernet import Fernet\n        key = Fernet.generate_key()  # In practice, you should use the same key used for encryption\n        cipher_suite = Fernet(key)\n        with open(file_path, 'rb') as file:\n            encrypted_data = file.read()\n        decrypted_data = cipher_suite.decrypt(encrypted_data)\n        with open(file_path[:-4], 'wb') as file:\n            file.write(decrypted_data)\n\n    def send_file(self, file_path, recipient):\n        import smtplib\n        from email.mime.text import MIMEText\n        from email.mime.multipart import MIMEMultipart\n        from email.mime.base import MIMEBase\n        from email import encoders\n\n        sender = \"your_email@example.com\"\n        password = \"your_password\"\n\n        message = MIMEMultipart()\n        message['From'] = sender\n        message['To'] = recipient\n        message['Subject'] = 'File'\n\n        body = \"Please find the attached file.\"\n        message.attach(MIMEText(body, 'plain'))\n\n        with open(file_path, \"rb\") as attachment:\n            part = MIMEBase('application', 'octet-stream')\n            part.set_payload(attachment.read())\n            encoders.encode_base64(part)\n            part.add_header(\n                'Content-Disposition',\n                f\"attachment; filename= {file_path}\",\n            )\n\n        message.attach(part)\n\n        server = smtplib.SMTP('smtp.example.com', 587)\n        server.starttls()\n        server.login(sender, password)\n        text = message.as_string()\n        server.sendmail(sender, recipient, text)\n        server.quit()\n\n    def receive_file(self):\n        import imaplib\n        import email\n\n        mail = imaplib.IMAP4_SSL('imap.example.com')\n        mail.login(\"your_email@example.com\", \"your_password\")\n        mail.select('inbox')\n\n        result, data = mail.search(None, 'ALL')\n        ids = data[0]\n        id_list = ids.split()\n\n        latest_email_id = id_list[-1]\n\n        result, data = mail.fetch(latest_email_id, '(RFC822)')\n        raw_email = data[0][1]\n        email_message = email.message_from_bytes(raw_email)\n\n        for part in email_message.walk():\n            if part.get_content_maintype() == 'multipart':\n                continue\n            if part.get('Content-Disposition') is None:\n                continue\n\n            filename = part.get_filename()\n            if bool(filename):\n                filepath = os.path.join('/path/to/save', filename)\n                with open(filepath, 'wb') as f:\n                    f.write(part.get_payload(decode=True))"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "FileManager"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class FileManager:\n    def read_file(self, file_path):\n        with open(file_path, 'r') as file:\n            return file.read()\n\n    def write_file(self, file_path, content):\n        with open(file_path, 'w') as file:\n            file.write(content)\n\n    def delete_file(self, file_path):\n        import os\n        os.remove(file_path)\n\n    def compress_file(self, file_path):\n        import zipfile\n        with zipfile.ZipFile(file_path + '.zip', 'w') as zipf:\n            zipf.write(file_path)\n\n    def decompress_file(self, file_path):\n        import zipfile\n        with zipfile.ZipFile(file_path, 'r') as zipf:\n            zipf.extractall()\n\n    def encrypt_file(self, file_path):\n        from cryptography.fernet import Fernet\n        key = Fernet.generate_key()\n        cipher_suite = Fernet(key)\n        with open(file_path, 'rb') as file:\n            file_data = file.read()\n        encrypted_data = cipher_suite.encrypt(file_data)\n        with open(file_path + '.enc', 'wb') as file:\n            file.write(encrypted_data)\n\n    def decrypt_file(self, file_path):\n        from cryptography.fernet import Fernet\n        key = Fernet.generate_key()  # In practice, you should use the same key used for encryption\n        cipher_suite = Fernet(key)\n        with open(file_path, 'rb') as file:\n            encrypted_data = file.read()\n        decrypted_data = cipher_suite.decrypt(encrypted_data)\n        with open(file_path[:-4], 'wb') as file:\n            file.write(decrypted_data)\n\n    def send_file(self, file_path, recipient):\n        import smtplib\n        from email.mime.text import MIMEText\n        from email.mime.multipart import MIMEMultipart\n        from email.mime.base import MIMEBase\n        from email import encoders\n\n        sender = \"your_email@example.com\"\n        password = \"your_password\"\n\n        message = MIMEMultipart()\n        message['From'] = sender\n        message['To'] = recipient\n        message['Subject'] = 'File'\n\n        body = \"Please find the attached file.\"\n        message.attach(MIMEText(body, 'plain'))\n\n        with open(file_path, \"rb\") as attachment:\n            part = MIMEBase('application', 'octet-stream')\n            part.set_payload(attachment.read())\n            encoders.encode_base64(part)\n            part.add_header(\n                'Content-Disposition',\n                f\"attachment; filename= {file_path}\",\n            )\n\n        message.attach(part)\n\n        server = smtplib.SMTP('smtp.example.com', 587)\n        server.starttls()\n        server.login(sender, password)\n        text = message.as_string()\n        server.sendmail(sender, recipient, text)\n        server.quit()\n\n    def receive_file(self):\n        import imaplib\n        import email\n\n        mail = imaplib.IMAP4_SSL('imap.example.com')\n        mail.login(\"your_email@example.com\", \"your_password\")\n        mail.select('inbox')\n\n        result, data = mail.search(None, 'ALL')\n        ids = data[0]\n        id_list = ids.split()\n\n        latest_email_id = id_list[-1]\n\n        result, data = mail.fetch(latest_email_id, '(RFC822)')\n        raw_email = data[0][1]\n        email_message = email.message_from_bytes(raw_email)\n\n        for part in email_message.walk():\n            if part.get_content_maintype() == 'multipart':\n                continue\n            if part.get('Content-Disposition') is None:\n                continue\n\n            filename = part.get_filename()\n            if bool(filename):\n                filepath = os.path.join('/path/to/save', filename)\n                with open(filepath, 'wb') as f:\n                    f.write(part.get_payload(decode=True))"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def read_file(self, file_path)",
                        "def write_file(self, file_path, content)",
                        "def delete_file(self, file_path)",
                        "def compress_file(self, file_path)",
                        "def decompress_file(self, file_path)",
                        "def encrypt_file(self, file_path)",
                        "def decrypt_file(self, file_path)",
                        "def send_file(self, file_path, recipient)",
                        "def receive_file(self)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class FileManager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 3852,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class OrderProcessor:\n    def process_order(self, order):\n        self.validate_order(order)\n        self.calculate_total(order)\n        self.save_order_to_database(order)\n        self.send_confirmation_email(order)\n\n    def validate_order(self, order):\n        # Validation logic here\n        pass\n\n    def calculate_total(self, order):\n        # Calculation logic here\n        pass\n\n    def save_order_to_database(self, order):\n        # Database saving logic here\n        pass\n\n    def send_confirmation_email(self, order):\n        # Email sending logic here\n        pass"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "OrderProcessor"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class OrderProcessor:\n    def process_order(self, order):\n        self.validate_order(order)\n        self.calculate_total(order)\n        self.save_order_to_database(order)\n        self.send_confirmation_email(order)\n\n    def validate_order(self, order):\n        # Validation logic here\n        pass\n\n    def calculate_total(self, order):\n        # Calculation logic here\n        pass\n\n    def save_order_to_database(self, order):\n        # Database saving logic here\n        pass\n\n    def send_confirmation_email(self, order):\n        # Email sending logic here\n        pass"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def process_order(self, order)",
                        "def validate_order(self, order)",
                        "def calculate_total(self, order)",
                        "def save_order_to_database(self, order)",
                        "def send_confirmation_email(self, order)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 802,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 425,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3048,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2778,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4289,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 460,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 602,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 380,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 577,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 444,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 18,
            "fail": 30,
            "error": 0,
            "accuracy": 0.375
          }
        }
      },
      "overall_stats": {
        "total_pass": 18,
        "total_fail": 30,
        "total_error": 0,
        "languages": {
          "CSHARP": 12,
          "JAVA": 12,
          "KOTLIN": 12,
          "PYTHON": 12
        }
      }
    }
  },
  "isp--deepseek33b-temp0-latest--default": {
    "default": {
      "model": "isp--deepseek33b-temp0-latest--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "isp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 533,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 885,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 324,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 444,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1595,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2629,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1381,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1411,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1361,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 882,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "interface IRestaurantWorker\n{\n    void ServeCustomers();\n}\n\ninterface IChef : IRestaurantWorker\n{\n    void CookFood();\n    void CleanTables();\n    void ManageStaff();\n}\n\ninterface IMachineWorker\n{\n    void SelfDiagnose();\n}\n\ninterface IDishwasher : IMachineWorker\n{\n    void WashDishes();\n    void VacuumFloor();\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [
                    "RestaurantWorker",
                    "Chef",
                    "MachineWorker",
                    "Dishwasher"
                  ],
                  "classes": [],
                  "has_dependency_injection": false,
                  "language_quality_score": 2
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface IRestaurantWorker\n{\n    void ServeCustomers();\n}",
                        "interface IMachineWorker\n{\n    void SelfDiagnose();\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface IRestaurantWorker\n{\n    void ServeCustomers();\n}",
                        "interface IMachineWorker\n{\n    void SelfDiagnose();\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 983,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 384,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 653,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 442,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 398,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 403,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 821,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class Amplifier:\n    def __init__(self):\n        self.power = False\n        self.volume = 0\n\n    def power_on(self):\n        self.power = True\n        print(\"Amplifier is on.\")\n\n    def power_off(self):\n        self.power = False\n        print(\"Amplifier is off.\")\n\n    def set_volume(self, volume):\n        if 0 <= volume <= 100:\n            self.volume = volume\n            print(f\"Volume set to {self.volume}\")\n        else:\n            print(\"Invalid volume level. Please enter a number between 0 and 100.\")\n\nclass BluetoothSpeaker:\n    def __init__(self):\n        self.power = False\n        self.connected_device = None\n\n    def power_on(self):\n        self.power = True\n        print(\"Bluetooth speaker is on.\")\n\n    def power_off(self):\n        self.power = False\n        print(\"Bluetooth speaker is off.\")\n\n    def connect_device(self, device):\n        self.connected_device = device\n        print(f\"Connected to {self.connected_device}\")\n\nclass BluetoothHeadset:\n    def __init__(self):\n        self.power = False\n        self.connected_device = None\n        self.mic_enabled = False\n\n    def power_on(self):\n        self.power = True\n        print(\"Bluetooth headset is on.\")\n\n    def power_off(self):\n        self.power = False\n        print(\"Bluetooth headset is off.\")\n\n    def connect_device(self, device):\n        self.connected_device = device\n        print(f\"Connected to {self.connected_device}\")\n\n    def enable_mic(self):\n        self.mic_enabled = True\n        print(\"Microphone is enabled.\")\n\n    def disable_mic(self):\n        self.mic_enabled = False\n        print(\"Microphone is disabled.\")",
                  "amp = Amplifier()\namp.power_on()\namp.set_volume(50)\n\nspeaker = BluetoothSpeaker()\nspeaker.power_on()\nspeaker.connect_device(\"Phone\")\n\nheadset = BluetoothHeadset()\nheadset.power_on()\nheadset.enable_mic()"
                ]
              },
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2409,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1398,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1216,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2129,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3258,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 332,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1761,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 454,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 435,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 546,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 454,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1657,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2451,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1414,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1650,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1197,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2109,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 568,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 356,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 679,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 499,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 576,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "from abc import ABC, abstractmethod\n\nclass Vehicle(ABC):\n    @abstractmethod\n    def start(self):\n        pass\n    \n    @abstractmethod\n    def stop(self):\n        pass\n\nclass Car(Vehicle):\n    def start(self):\n        print(\"Car engine started\")\n    \n    def stop(self):\n        print(\"Car stopped\")\n\nclass Plane(Vehicle):\n    def start(self):\n        print(\"Plane engines started\")\n    \n    def stop(self):\n        print(\"Plane stopped\")\n    \n    def fly(self):\n        print(\"Plane is flying\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Vehicle",
                    "Car",
                    "Plane"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 1153,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2016,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1647,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1975,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1495,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 411,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1398,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2390,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 569,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 12,
            "fail": 36,
            "error": 0,
            "accuracy": 0.25
          }
        }
      },
      "overall_stats": {
        "total_pass": 12,
        "total_fail": 36,
        "total_error": 0,
        "languages": {
          "CSHARP": 12,
          "JAVA": 12,
          "KOTLIN": 12,
          "PYTHON": 12
        }
      }
    }
  },
  "isp--deepseek33b-temp0-latest--example": {
    "example": {
      "model": "isp--deepseek33b-temp0-latest--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "isp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 804,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 375,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 390,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 374,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1595,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2629,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1381,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1411,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 981,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 894,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 793,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 675,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 980,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 416,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 441,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 490,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 821,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2409,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1398,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1216,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1194,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3258,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 758,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 992,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 634,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 665,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 644,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "interface Vehicle {\n    fun start()\n    fun stop()\n}\n\nclass Car : Vehicle {\n    override fun start() {\n        println(\"Car engine started\")\n    }\n    \n    override fun stop() {\n        println(\"Car stopped\")\n    }\n}\n\ninterface FlyableVehicle : Vehicle {\n    fun fly()\n}\n\nclass Plane : FlyableVehicle {\n    override fun start() {\n        println(\"Plane engines started\")\n    }\n    \n    override fun stop() {\n        println(\"Plane stopped\")\n    }\n    \n    override fun fly() {\n        println(\"Plane is flying\")\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "Vehicle",
                    "FlyableVehicle"
                  ],
                  "classes": [
                    [
                      "Car",
                      "Vehicle"
                    ],
                    [
                      "Plane",
                      "FlyableVehicle"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Car : Vehicle {\n    override fun start() {\n        println(\"Car engine started\")\n    }\n    \n    override fun stop() {\n        println(\"Car stopped\")\n    }\n}\n\ninterface FlyableVehicle : Vehicle {\n    fun fly()\n}\n\n",
                        "class Plane : FlyableVehicle {\n    override fun start() {\n        println(\"Plane engines started\")\n    }\n    \n    override fun stop() {\n        println(\"Plane stopped\")\n    }\n    \n    override fun fly() {\n        println(\"Plane is flying\")\n    }\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1127,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1657,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2451,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1414,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1650,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 478,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1361,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 804,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 700,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 674,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 621,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "from abc import ABC, abstractmethod\n\nclass Cooker(ABC):\n    @abstractmethod\n    def cook_food(self):\n        pass\n\nclass Server(ABC):\n    @abstractmethod\n    def serve_customers(self):\n        pass\n\nclass Cleaner(ABC):\n    @abstractmethod\n    def clean_tables(self):\n        pass\n\nclass Chef(Cooker):\n    def cook_food(self):\n        print(\"Chef is cooking food.\")\n\nclass Waiter(Server):\n    def serve_customers(self):\n        print(\"Waiter is serving customers.\")\n\nclass RestaurantCleaner(Cleaner):\n    def clean_tables(self):\n        print(\"Restaurant cleaner is cleaning tables.\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Cooker",
                    "Server",
                    "Cleaner",
                    "Chef",
                    "Waiter",
                    "RestaurantCleaner"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Cooker(ABC):\n    @abstractmethod\n    def cook_food(self):\n        pass\n\n",
                        "class Server(ABC):\n    @abstractmethod\n    def serve_customers(self):\n        pass\n\n",
                        "class Cleaner(ABC):\n    @abstractmethod\n    def clean_tables(self):\n        pass\n\n",
                        "class Chef(Cooker):\n    def cook_food(self):\n        print(\"Chef is cooking food.\")\n\n",
                        "class Waiter(Server):\n    def serve_customers(self):\n        print(\"Waiter is serving customers.\")\n\n",
                        "class RestaurantCleaner(Cleaner):\n    def clean_tables(self):\n        print(\"Restaurant cleaner is cleaning tables.\")"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def cook_food(self)",
                        "def serve_customers(self)",
                        "def clean_tables(self)",
                        "def cook_food(self)",
                        "def serve_customers(self)",
                        "def clean_tables(self)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1257,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "from abc import ABC, abstractmethod\n\nclass Vehicle(ABC):\n    @abstractmethod\n    def start(self):\n        pass\n    \n    @abstractmethod\n    def stop(self):\n        pass\n\nclass Car(Vehicle):\n    def start(self):\n        print(\"Car engine started\")\n    \n    def stop(self):\n        print(\"Car stopped\")\n\nclass Plane(Vehicle):\n    def start(self):\n        print(\"Plane engines started\")\n    \n    def stop(self):\n        print(\"Plane stopped\")\n    \n    def fly(self):\n        print(\"Plane is flying\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Vehicle",
                    "Car",
                    "Plane"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 1148,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2016,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1647,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1975,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1495,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1309,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 630,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 784,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "from abc import ABC, abstractmethod\n\nclass Operator(ABC):\n    @abstractmethod\n    def steer(self):\n        pass\n    \n    def navigate_air(self):\n        raise NotImplementedError(\"This operator cannot navigate air\")\n    \n    def navigate_water(self):\n        raise NotImplementedError(\"This operator cannot navigate water\")",
                  "class Pilot(Operator):\n    # ... other methods ...\n    \n    def navigate_air(self):\n        print(\"Pilot navigating air\")\n        \n    def navigate_water(self):\n        raise NotImplementedError(\"This operator cannot navigate water\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Operator"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 1714,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 1,
            "fail": 47,
            "error": 0,
            "accuracy": 0.020833333333333332
          }
        }
      },
      "overall_stats": {
        "total_pass": 1,
        "total_fail": 47,
        "total_error": 0,
        "languages": {
          "CSHARP": 12,
          "JAVA": 12,
          "KOTLIN": 12,
          "PYTHON": 12
        }
      }
    }
  },
  "isp--codellama70b-temp0-latest--default": {
    "default": {
      "model": "isp--codellama70b-temp0-latest--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "isp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 987,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1225,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 641,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 338,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 22415,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1139,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 25,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 858,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 593,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 543,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 389,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1062,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 749,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 654,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 397,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 464,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 812,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 958,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1009,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 859,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 283,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 253,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 241,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1217,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 598,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 325,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 798,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1038,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1318,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 5742,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 960,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1838,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 557,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 280,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 926,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 292,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 546,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1913,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1694,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 752,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3030,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1838,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 168,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3468,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 504,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 833,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 106,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1874,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 6,
            "fail": 42,
            "error": 0,
            "accuracy": 0.125
          }
        }
      },
      "overall_stats": {
        "total_pass": 6,
        "total_fail": 42,
        "total_error": 0,
        "languages": {
          "CSHARP": 12,
          "JAVA": 12,
          "KOTLIN": 12,
          "PYTHON": 12
        }
      }
    }
  },
  "isp--gpt-4o-mini--smell": {
    "smell": {
      "model": "isp--gpt-4o-mini--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "isp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 606,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 588,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 628,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 510,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1136,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1143,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1041,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1094,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1545,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1090,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 698,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1037,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 614,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 512,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 221,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 270,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1628,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 518,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1572,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 499,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1512,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 538,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1495,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1604,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 501,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1658,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1197,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 200,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1579,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1136,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1522,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1048,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 893,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 995,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1469,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1449,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 859,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1389,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 475,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1248,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1662,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 534,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1220,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1118,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 486,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 981,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 677,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 956,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 3,
            "fail": 45,
            "error": 0,
            "accuracy": 0.0625
          }
        }
      },
      "overall_stats": {
        "total_pass": 3,
        "total_fail": 45,
        "total_error": 0,
        "languages": {
          "CSHARP": 12,
          "JAVA": 12,
          "KOTLIN": 12,
          "PYTHON": 12
        }
      }
    }
  },
  "isp--gpt-4o-mini--ensemble": {
    "ensemble": {
      "model": "isp--gpt-4o-mini--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "isp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1501,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1628,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1737,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1363,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1682,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1764,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1867,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1583,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1770,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1842,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1624,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1810,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1711,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2036,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2108,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1784,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1618,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1915,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1959,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1825,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2152,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1831,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1688,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1807,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1520,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1803,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1858,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1280,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2094,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1814,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2167,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1447,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1683,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1810,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1482,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1686,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1919,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1862,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1620,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1711,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1749,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2124,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1997,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1598,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1504,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1971,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2231,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1751,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 9,
            "fail": 39,
            "error": 0,
            "accuracy": 0.1875
          }
        }
      },
      "overall_stats": {
        "total_pass": 9,
        "total_fail": 39,
        "total_error": 0,
        "languages": {
          "CSHARP": 12,
          "JAVA": 12,
          "KOTLIN": 12,
          "PYTHON": 12
        }
      }
    }
  },
  "isp--gpt-4o-mini--default": {
    "default": {
      "model": "isp--gpt-4o-mini--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "isp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1042,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1140,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1169,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 799,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1532,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1188,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 975,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1435,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1164,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1136,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1332,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1374,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1115,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 768,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 930,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 826,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1713,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1145,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1038,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1349,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1167,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1417,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1267,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1507,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 973,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1260,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1149,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 914,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1549,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1410,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1251,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1483,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1196,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1220,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1357,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1057,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 992,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 953,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1124,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 872,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1277,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1651,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1136,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1082,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1293,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1542,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1421,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1176,
              "model": "gpt-4o-mini",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 42,
            "fail": 6,
            "error": 0,
            "accuracy": 0.875
          }
        }
      },
      "overall_stats": {
        "total_pass": 42,
        "total_fail": 6,
        "total_error": 0,
        "languages": {
          "CSHARP": 12,
          "JAVA": 12,
          "KOTLIN": 12,
          "PYTHON": 12
        }
      }
    }
  },
  "isp--qwen2.5-coder32b-temp0-latest--example": {
    "example": {
      "model": "isp--qwen2.5-coder32b-temp0-latest--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "isp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 417,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 475,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 366,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 357,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 6186,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4106,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3839,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3036,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 874,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 464,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 377,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 447,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "interface MeleeAttacker {\n    void meleeAttack();\n}\n\ninterface SpellCaster {\n    void castSpell();\n}\n\ninterface Flyable {\n    void fly();\n}\n\ninterface Defender {\n    void defend();\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "MeleeAttacker",
                    "SpellCaster",
                    "Flyable",
                    "Defender"
                  ],
                  "classes": [],
                  "has_dependency_injection": false,
                  "language_quality_score": 2
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface MeleeAttacker {\n    void meleeAttack();\n}",
                        "interface SpellCaster {\n    void castSpell();\n}",
                        "interface Flyable {\n    void fly();\n}",
                        "interface Defender {\n    void defend();\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface MeleeAttacker {\n    void meleeAttack();\n}",
                        "interface SpellCaster {\n    void castSpell();\n}",
                        "interface Flyable {\n    void fly();\n}",
                        "interface Defender {\n    void defend();\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 756,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 421,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "interface Cook {\n    void cookFood();\n}\n\ninterface Server {\n    void serveCustomers();\n}\n\ninterface Cleaner {\n    void cleanTables();\n}\n\nclass Chef implements Cook {\n    public void cookFood() {\n        System.out.println(\"Chef is cooking food.\");\n    }\n}\n\nclass Waiter implements Server, Cleaner {\n    public void serveCustomers() {\n        System.out.println(\"Waiter is serving customers.\");\n    }\n\n    public void cleanTables() {\n        System.out.println(\"Waiter is cleaning tables.\");\n    }\n}\n\nclass Cleaner implements Cleaner {\n    public void cleanTables() {\n        System.out.println(\"Cleaner is cleaning tables.\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "Cook",
                    "Server",
                    "Cleaner"
                  ],
                  "classes": [
                    [
                      "Chef",
                      "Cook"
                    ],
                    [
                      "Waiter",
                      "Server"
                    ],
                    [
                      "Cleaner",
                      "Cleaner"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface Cook {\n    void cookFood();\n}",
                        "interface Server {\n    void serveCustomers();\n}",
                        "interface Cleaner {\n    void cleanTables();\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface Cook {\n    void cookFood();\n}",
                        "interface Server {\n    void serveCustomers();\n}",
                        "interface Cleaner {\n    void cleanTables();\n}"
                      ]
                    },
                    {
                      "pattern": "multiple_interfaces",
                      "matches": [
                        "class Waiter implements Server, Cleaner"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1011,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 432,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3363,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 7343,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4481,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 6472,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 615,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 458,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "interface Cook {\n    void cookFood();\n}\n\ninterface Server {\n    void serveCustomers();\n}\n\ninterface Cleaner {\n    void cleanTables();\n}\n\ninterface Managerial {\n    void manageStaff();\n}\n\ninterface DishwasherWorker {\n    void washDishes();\n}\n\ninterface FloorCleaner {\n    void vacuumFloor();\n}\n\ninterface SelfDiagnosable {\n    void selfDiagnose();\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "Cook",
                    "Server",
                    "Cleaner",
                    "Managerial",
                    "DishwasherWorker",
                    "FloorCleaner",
                    "SelfDiagnosable"
                  ],
                  "classes": [],
                  "has_dependency_injection": false,
                  "language_quality_score": 2
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface Cook {\n    void cookFood();\n}",
                        "interface Server {\n    void serveCustomers();\n}",
                        "interface Cleaner {\n    void cleanTables();\n}",
                        "interface Managerial {\n    void manageStaff();\n}",
                        "interface DishwasherWorker {\n    void washDishes();\n}",
                        "interface FloorCleaner {\n    void vacuumFloor();\n}",
                        "interface SelfDiagnosable {\n    void selfDiagnose();\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface Cook {\n    void cookFood();\n}",
                        "interface Server {\n    void serveCustomers();\n}",
                        "interface Cleaner {\n    void cleanTables();\n}",
                        "interface Managerial {\n    void manageStaff();\n}",
                        "interface DishwasherWorker {\n    void washDishes();\n}",
                        "interface FloorCleaner {\n    void vacuumFloor();\n}",
                        "interface SelfDiagnosable {\n    void selfDiagnose();\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 921,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 582,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 587,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 405,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 345,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 434,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 5713,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 8389,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3317,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 391,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 667,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "interface Playable {\n    fun play()\n    fun pause()\n    fun stop()\n}\n\ninterface TrackControl {\n    fun skipTrack()\n}\n\ninterface MediaEjectable {\n    fun eject()\n}\n\ninterface VolumeAdjustable {\n    fun setVolume(volume: Int)\n}\n\ninterface EqualizerAdjustable {\n    fun setEqualizer(preset: String)\n}\n\ninterface TrackInfoDisplayable {\n    fun displayTrackInfo()\n}\n\ninterface PlaybackModeControl {\n    fun shuffle()\n    fun repeat()\n}\n\nclass CDPlayer : Playable, TrackControl, MediaEjectable, VolumeAdjustable, EqualizerAdjustable, TrackInfoDisplayable, PlaybackModeControl {\n    // Implementations...\n}\n\nclass VinylPlayer : Playable, MediaEjectable, VolumeAdjustable, TrackInfoDisplayable {\n    // Implementations...\n}\n\nclass Amplifier : VolumeAdjustable, EqualizerAdjustable {\n    // Implementations...\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "Playable",
                    "TrackControl",
                    "MediaEjectable",
                    "VolumeAdjustable",
                    "EqualizerAdjustable",
                    "TrackInfoDisplayable",
                    "PlaybackModeControl"
                  ],
                  "classes": [
                    [
                      "CDPlayer",
                      "Playable"
                    ],
                    [
                      "VinylPlayer",
                      "Playable"
                    ],
                    [
                      "Amplifier",
                      "VolumeAdjustable"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface Playable {\n    fun play()\n    fun pause()\n    fun stop()\n}",
                        "interface TrackControl {\n    fun skipTrack()\n}",
                        "interface MediaEjectable {\n    fun eject()\n}",
                        "interface VolumeAdjustable {\n    fun setVolume(volume: Int)\n}",
                        "interface EqualizerAdjustable {\n    fun setEqualizer(preset: String)\n}",
                        "interface TrackInfoDisplayable {\n    fun displayTrackInfo()\n}",
                        "interface PlaybackModeControl {\n    fun shuffle()\n    fun repeat()\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface Playable {\n    fun play()\n    fun pause()\n    fun stop()\n}",
                        "interface TrackControl {\n    fun skipTrack()\n}",
                        "interface MediaEjectable {\n    fun eject()\n}",
                        "interface VolumeAdjustable {\n    fun setVolume(volume: Int)\n}",
                        "interface EqualizerAdjustable {\n    fun setEqualizer(preset: String)\n}",
                        "interface TrackInfoDisplayable {\n    fun displayTrackInfo()\n}",
                        "interface PlaybackModeControl {\n    fun shuffle()\n    fun repeat()\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1239,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "interface Cook {\n    fun cookFood()\n}\n\ninterface Serve {\n    fun serveCustomers()\n}\n\ninterface Clean {\n    fun cleanTables()\n}\n\ninterface Manage {\n    fun manageStaff()\n}\n\ninterface WashDishes {\n    fun washDishes()\n}\n\ninterface VacuumFloor {\n    fun vacuumFloor()\n}\n\ninterface SelfDiagnose {\n    fun selfDiagnose()\n}\n\nclass Chef : Cook {\n    override fun cookFood() {\n        println(\"Chef is cooking meals.\")\n    }\n}\n\nclass Waiter : Serve, Clean {\n    override fun serveCustomers() {\n        println(\"Waiter is serving customers.\")\n    }\n\n    override fun cleanTables() {\n        println(\"Waiter is cleaning tables.\")\n    }\n}\n\nclass Manager : Manage {\n    private val conflict = true\n\n    override fun manageStaff() {\n        if (conflict) {\n            println(\"Manager is resolving a team conflict.\")\n        } else {\n            println(\"Manager is approving staff schedules.\")\n        }\n    }\n}\n\nclass Dishwasher : WashDishes, SelfDiagnose {\n    private val dirtyItems = 15\n\n    override fun washDishes() {\n        if (dirtyItems > 0) {\n            println(\"Dishwasher is cleaning $dirtyItems plates.\")\n        } else {\n            println(\"No dishes to clean.\")\n        }\n    }\n\n    override fun selfDiagnose() {\n        println(\"Dishwasher performing self-diagnosis.\")\n    }\n}\n\nclass VacuumCleaner : VacuumFloor, SelfDiagnose {\n    private val isCharged = false\n\n    override fun vacuumFloor() {\n        if (isCharged) {\n            println(\"Vacuum cleaner is cleaning the floor.\")\n        } else {\n            println(\"Vacuum cleaner battery is low.\")\n        }\n    }\n\n    override fun selfDiagnose() {\n        println(\"Vacuum cleaner running diagnostics.\")\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "Cook",
                    "Serve",
                    "Clean",
                    "Manage",
                    "WashDishes",
                    "VacuumFloor",
                    "SelfDiagnose"
                  ],
                  "classes": [
                    [
                      "Chef",
                      "Cook"
                    ],
                    [
                      "Waiter",
                      "Serve"
                    ],
                    [
                      "Manager",
                      "Manage"
                    ],
                    [
                      "Dishwasher",
                      "WashDishes"
                    ],
                    [
                      "VacuumCleaner",
                      "VacuumFloor"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface Cook {\n    fun cookFood()\n}",
                        "interface Serve {\n    fun serveCustomers()\n}",
                        "interface Clean {\n    fun cleanTables()\n}",
                        "interface Manage {\n    fun manageStaff()\n}",
                        "interface WashDishes {\n    fun washDishes()\n}",
                        "interface VacuumFloor {\n    fun vacuumFloor()\n}",
                        "interface SelfDiagnose {\n    fun selfDiagnose()\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface Cook {\n    fun cookFood()\n}",
                        "interface Serve {\n    fun serveCustomers()\n}",
                        "interface Clean {\n    fun cleanTables()\n}",
                        "interface Manage {\n    fun manageStaff()\n}",
                        "interface WashDishes {\n    fun washDishes()\n}",
                        "interface VacuumFloor {\n    fun vacuumFloor()\n}",
                        "interface SelfDiagnose {\n    fun selfDiagnose()\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 2142,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 562,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 621,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 511,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 395,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 303,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3048,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2778,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4289,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 5975,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 535,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "class Playable(ABC):\n    @abstractmethod\n    def play(self):\n        pass\n    \n    @abstractmethod\n    def pause(self):\n        pass\n    \n    @abstractmethod\n    def stop(self):\n        pass\n\nclass TrackControl(ABC):\n    @abstractmethod\n    def skip_track(self):\n        pass\n    \n    @abstractmethod\n    def shuffle(self):\n        pass\n    \n    @abstractmethod\n    def repeat(self):\n        pass\n\nclass MediaHandling(ABC):\n    @abstractmethod\n    def eject(self):\n        pass\n\nclass VolumeAdjustable(ABC):\n    @abstractmethod\n    def set_volume(self, volume):\n        pass\n\nclass EqualizerControl(ABC):\n    @abstractmethod\n    def set_equalizer(self, preset):\n        pass\n\nclass TrackInfoDisplay(ABC):\n    @abstractmethod\n    def display_track_info(self):\n        pass"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Playable",
                    "TrackControl",
                    "MediaHandling",
                    "VolumeAdjustable",
                    "EqualizerControl",
                    "TrackInfoDisplay"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 1343,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 501,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 427,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 23,
            "fail": 25,
            "error": 0,
            "accuracy": 0.4791666666666667
          }
        }
      },
      "overall_stats": {
        "total_pass": 23,
        "total_fail": 25,
        "total_error": 0,
        "languages": {
          "CSHARP": 12,
          "JAVA": 12,
          "KOTLIN": 12,
          "PYTHON": 12
        }
      }
    }
  },
  "isp--qwen2.5-coder32b-temp0-latest--ensemble": {
    "ensemble": {
      "model": "isp--qwen2.5-coder32b-temp0-latest--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "isp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2091,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2087,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1602,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1440,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2228,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2086,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1852,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2144,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1976,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1799,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "interface ICook\n{\n    void CookFood();\n}\n\ninterface IServe\n{\n    void ServeCustomers();\n}\n\ninterface ICleanTables\n{\n    void CleanTables();\n}\n\ninterface IManageStaff\n{\n    void ManageStaff();\n}",
                  "class Chef : ICook\n{\n    public void CookFood()\n    {\n        Console.WriteLine(\"Chef is cooking meals.\");\n    }\n}\n\nclass Waiter : IServe, ICleanTables\n{\n    public void ServeCustomers()\n    {\n        Console.WriteLine(\"Waiter is serving customers.\");\n    }\n\n    public void CleanTables()\n    {\n        Console.WriteLine(\"Waiter is cleaning tables.\");\n    }\n}\n\nclass Manager : IManageStaff\n{\n    private bool conflict = true;\n\n    public void ManageStaff()\n    {\n        if (conflict)\n        {\n            Console.WriteLine(\"Manager is resolving a team conflict.\");\n        }\n        else\n        {\n            Console.WriteLine(\"Manager is approving staff schedules.\");\n        }\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [
                    "Cook",
                    "Serve",
                    "CleanTables",
                    "ManageStaff"
                  ],
                  "classes": [],
                  "has_dependency_injection": false,
                  "language_quality_score": 2
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface ICook\n{\n    void CookFood();\n}",
                        "interface IServe\n{\n    void ServeCustomers();\n}",
                        "interface ICleanTables\n{\n    void CleanTables();\n}",
                        "interface IManageStaff\n{\n    void ManageStaff();\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface ICook\n{\n    void CookFood();\n}",
                        "interface IServe\n{\n    void ServeCustomers();\n}",
                        "interface ICleanTables\n{\n    void CleanTables();\n}",
                        "interface IManageStaff\n{\n    void ManageStaff();\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 3155,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1865,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2189,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1932,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1889,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "interface Vehicle {\n    void start();\n    void stop();\n}\n\ninterface FlyableVehicle extends Vehicle {\n    void fly();\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "Vehicle",
                    "FlyableVehicle"
                  ],
                  "classes": [],
                  "has_dependency_injection": false,
                  "language_quality_score": 2
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface Vehicle {\n    void start();\n    void stop();\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface Vehicle {\n    void start();\n    void stop();\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1702,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2083,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2407,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1792,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2464,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2284,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1881,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1937,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2001,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1849,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1889,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2090,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1403,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1828,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1642,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1661,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3047,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1644,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1940,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1607,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "interface LandOperator {\n    fun steer()\n}\n\ninterface AirOperator {\n    fun navigateAir()\n    fun communicateWithTower()\n}\n\ninterface WaterOperator {\n    fun navigateWater()\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "LandOperator",
                    "AirOperator",
                    "WaterOperator"
                  ],
                  "classes": [],
                  "has_dependency_injection": false,
                  "language_quality_score": 2
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface LandOperator {\n    fun steer()\n}",
                        "interface AirOperator {\n    fun navigateAir()\n    fun communicateWithTower()\n}",
                        "interface WaterOperator {\n    fun navigateWater()\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface LandOperator {\n    fun steer()\n}",
                        "interface AirOperator {\n    fun navigateAir()\n    fun communicateWithTower()\n}",
                        "interface WaterOperator {\n    fun navigateWater()\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 2263,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1886,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1647,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2056,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1314,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1956,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2391,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2184,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2008,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1803,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1709,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1858,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2012,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 31,
            "fail": 17,
            "error": 0,
            "accuracy": 0.6458333333333334
          }
        }
      },
      "overall_stats": {
        "total_pass": 31,
        "total_fail": 17,
        "total_error": 0,
        "languages": {
          "CSHARP": 12,
          "JAVA": 12,
          "KOTLIN": 12,
          "PYTHON": 12
        }
      }
    }
  },
  "isp--deepseek33b-temp0-latest--smell": {
    "smell": {
      "model": "isp--deepseek33b-temp0-latest--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "isp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 627,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 401,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 734,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 336,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1595,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2629,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1381,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1411,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 659,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 507,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 416,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 373,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1905,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 409,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 369,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 331,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 821,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2409,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1398,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1216,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1008,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3258,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 377,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 373,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 292,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 400,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 239,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 261,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1657,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2451,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1414,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1650,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 423,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1991,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 350,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 494,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 384,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 417,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 296,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 319,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2016,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1647,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1975,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1495,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1777,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 602,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 461,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 355,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 2,
            "fail": 46,
            "error": 0,
            "accuracy": 0.041666666666666664
          }
        }
      },
      "overall_stats": {
        "total_pass": 2,
        "total_fail": 46,
        "total_error": 0,
        "languages": {
          "CSHARP": 12,
          "JAVA": 12,
          "KOTLIN": 12,
          "PYTHON": 12
        }
      }
    }
  },
  "isp--deepseek33b-temp0-latest--ensemble": {
    "ensemble": {
      "model": "isp--deepseek33b-temp0-latest--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "isp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1757,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1859,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1467,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1470,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1591,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1204,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1234,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1273,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1466,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1169,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1752,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1966,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1433,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1790,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1882,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1620,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1753,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1385,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1470,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1300,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1225,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1215,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1618,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1968,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1885,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1274,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2030,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1538,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1582,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1252,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1527,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1388,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1650,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1191,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2010,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1687,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1017,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1346,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1939,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1296,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1337,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1137,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1468,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1307,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1438,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1050,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1836,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1966,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 4,
            "fail": 44,
            "error": 0,
            "accuracy": 0.08333333333333333
          }
        }
      },
      "overall_stats": {
        "total_pass": 4,
        "total_fail": 44,
        "total_error": 0,
        "languages": {
          "CSHARP": 12,
          "JAVA": 12,
          "KOTLIN": 12,
          "PYTHON": 12
        }
      }
    }
  },
  "isp--qwen2.5-coder32b-temp0-latest--default": {
    "default": {
      "model": "isp--qwen2.5-coder32b-temp0-latest--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "isp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "interface IMeleeAttacker\n{\n    void MeleeAttack();\n}\n\ninterface ISpellCaster\n{\n    void CastSpell();\n}\n\ninterface IFlyer\n{\n    void Fly();\n}\n\ninterface IDefender\n{\n    void Defend();\n}",
                  "class Mage : ISpellCaster, IFlyer, IDefender\n{\n    // Implementation...\n}\n\nclass Fighter : IMeleeAttacker, IDefender\n{\n    // Implementation...\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [
                    "MeleeAttacker",
                    "SpellCaster",
                    "Flyer",
                    "Defender"
                  ],
                  "classes": [],
                  "has_dependency_injection": false,
                  "language_quality_score": 2
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface IMeleeAttacker\n{\n    void MeleeAttack();\n}",
                        "interface ISpellCaster\n{\n    void CastSpell();\n}",
                        "interface IFlyer\n{\n    void Fly();\n}",
                        "interface IDefender\n{\n    void Defend();\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface IMeleeAttacker\n{\n    void MeleeAttack();\n}",
                        "interface ISpellCaster\n{\n    void CastSpell();\n}",
                        "interface IFlyer\n{\n    void Fly();\n}",
                        "interface IDefender\n{\n    void Defend();\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1369,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1849,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "using System;\n\ninterface ICook\n{\n    void CookFood();\n}\n\ninterface IServe\n{\n    void ServeCustomers();\n}\n\ninterface IClean\n{\n    void CleanTables();\n}\n\nclass Chef : ICook\n{\n    public void CookFood()\n    {\n        Console.WriteLine(\"Chef is cooking food.\");\n    }\n}\n\nclass Waiter : IServe, IClean\n{\n    public void ServeCustomers()\n    {\n        Console.WriteLine(\"Waiter is serving customers.\");\n    }\n\n    public void CleanTables()\n    {\n        Console.WriteLine(\"Waiter is cleaning tables.\");\n    }\n}\n\nclass Cleaner : IClean\n{\n    public void CleanTables()\n    {\n        Console.WriteLine(\"Cleaner is cleaning tables.\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [
                    "Cook",
                    "Serve",
                    "Clean"
                  ],
                  "classes": [
                    [
                      "Chef",
                      "Cook"
                    ],
                    [
                      "Waiter",
                      "Serve"
                    ],
                    [
                      "Cleaner",
                      "Clean"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface ICook\n{\n    void CookFood();\n}",
                        "interface IServe\n{\n    void ServeCustomers();\n}",
                        "interface IClean\n{\n    void CleanTables();\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface ICook\n{\n    void CookFood();\n}",
                        "interface IServe\n{\n    void ServeCustomers();\n}",
                        "interface IClean\n{\n    void CleanTables();\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1408,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "using System;\n\ninterface IVehicle\n{\n    void Start();\n    void Stop();\n}\n\ninterface IFlyingVehicle : IVehicle\n{\n    void Fly();\n}\n\nclass Car : IVehicle\n{\n    public void Start()\n    {\n        Console.WriteLine(\"Car engine started\");\n    }\n    \n    public void Stop()\n    {\n        Console.WriteLine(\"Car stopped\");\n    }\n}\n\nclass Plane : IFlyingVehicle\n{\n    public void Start()\n    {\n        Console.WriteLine(\"Plane engines started\");\n    }\n    \n    public void Stop()\n    {\n        Console.WriteLine(\"Plane stopped\");\n    }\n    \n    public void Fly()\n    {\n        Console.WriteLine(\"Plane is flying\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [
                    "Vehicle",
                    "FlyingVehicle"
                  ],
                  "classes": [
                    [
                      "Car",
                      "Vehicle"
                    ],
                    [
                      "Plane",
                      "FlyingVehicle"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface IVehicle\n{\n    void Start();\n    void Stop();\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface IVehicle\n{\n    void Start();\n    void Stop();\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1286,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 6186,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4106,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3839,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3036,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "using System;\n\ninterface IMeleeAttacker\n{\n    void MeleeAttack();\n}\n\ninterface ISpellCaster\n{\n    void CastSpell();\n}\n\ninterface IFlyer\n{\n    void Fly();\n}\n\ninterface IDefender\n{\n    void Defend();\n}\n\nclass Mage : ISpellCaster, IFlyer, IDefender\n{\n    private string name;\n    private int mana;\n    private int level;\n\n    public Mage(string name, int level)\n    {\n        this.name = name;\n        this.mana = 100;\n        this.level = level;\n    }\n\n    public void CastSpell()\n    {\n        if (mana < 10)\n        {\n            Console.WriteLine(name + \" is out of mana!\");\n            return;\n        }\n\n        if (level >= 5 && mana >= 30)\n        {\n            Console.WriteLine(name + \" casts a powerful lightning storm!\");\n            mana -= 30;\n        }\n        else if (level >= 3 && mana >= 20)\n        {\n            Console.WriteLine(name + \" casts a fireball spell!\");\n            mana -= 20;\n        }\n        else if (mana >= 10)\n        {\n            Console.WriteLine(name + \" casts a basic magic missile!\");\n            mana -= 10;\n        }\n    }\n\n    public void Fly()\n    {\n        if (level >= 2)\n        {\n            Console.WriteLine(name + \" soars through the air with magic!\");\n        }\n        else\n        {\n            Console.WriteLine(name + \" is too inexperienced to fly!\");\n        }\n    }\n\n    public void Defend()\n    {\n        if (mana >= 15)\n        {\n            Console.WriteLine(name + \" creates a protective shield!\");\n            mana -= 15;\n        }\n        else\n        {\n            Console.WriteLine(name + \" tries to defend but lacks mana!\");\n        }\n    }\n}\n\nclass Fighter : IMeleeAttacker, IDefender\n{\n    private string name;\n\n    public Fighter(string name)\n    {\n        this.name = name;\n    }\n\n    public void MeleeAttack()\n    {\n        Console.WriteLine(name + \" swings a sword at the enemy!\");\n    }\n\n    public void Defend()\n    {\n        Console.WriteLine(name + \" raises a shield to block incoming attacks!\");\n    }\n}\n\ninterface ISlasher\n{\n    void Slash();\n}\n\ninterface IShooter\n{\n    void Shoot();\n}\n\ninterface IEnchantable\n{\n    void Enchant();\n}\n\ninterface IRepairable\n{\n    void Repair();\n}\n\nclass Sword : ISlasher, IEnchantable, IRepairable\n{\n    private int sharpness;\n\n    public Sword(int sharpness)\n    {\n        this.sharpness = sharpness;\n    }\n\n    public void Slash()\n    {\n        Console.WriteLine(\"The sword slashes through the air!\");\n    }\n\n    public void Enchant()\n    {\n        sharpness += 10;\n        Console.WriteLine(\"The sword glows with magical power!\");\n    }\n\n    public void Repair()\n    {\n        sharpness = Math.Min(100, sharpness + 25);\n        Console.WriteLine(\"The sword has been sharpened and repaired!\");\n    }\n}\n\nclass Bow : IShooter, IRepairable\n{\n    private int arrows;\n    private int range;\n\n    public Bow(int arrows, int range)\n    {\n        this.arrows = arrows;\n        this.range = range;\n    }\n\n    public void Shoot()\n    {\n        if (arrows <= 0)\n        {\n            Console.WriteLine(\"No arrows left to shoot!\");\n            return;\n        }\n\n        if (range > 80)\n        {\n            Console.WriteLine(\"Long-range shot hits the distant target!\");\n        }\n        else if (range > 50)\n        {\n            Console.WriteLine(\"Medium-range shot finds its mark!\");\n        }\n        else\n        {\n            Console.WriteLine(\"Short-range shot barely reaches the target!\");\n        }\n        arrows--;\n    }\n\n    public void Repair()\n    {\n        range = Math.Min(100, range + 15);\n        Console.WriteLine(\"Bow string tightened and wood polished!\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [
                    "MeleeAttacker",
                    "SpellCaster",
                    "Flyer",
                    "Defender",
                    "Slasher",
                    "Shooter",
                    "Enchantable",
                    "Repairable"
                  ],
                  "classes": [
                    [
                      "Mage",
                      "SpellCaster"
                    ],
                    [
                      "Fighter",
                      "MeleeAttacker"
                    ],
                    [
                      "Sword",
                      "Slasher"
                    ],
                    [
                      "Bow",
                      "Shooter"
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 6
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface IMeleeAttacker\n{\n    void MeleeAttack();\n}",
                        "interface ISpellCaster\n{\n    void CastSpell();\n}",
                        "interface IFlyer\n{\n    void Fly();\n}",
                        "interface IDefender\n{\n    void Defend();\n}",
                        "interface ISlasher\n{\n    void Slash();\n}",
                        "interface IShooter\n{\n    void Shoot();\n}",
                        "interface IEnchantable\n{\n    void Enchant();\n}",
                        "interface IRepairable\n{\n    void Repair();\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface IMeleeAttacker\n{\n    void MeleeAttack();\n}",
                        "interface ISpellCaster\n{\n    void CastSpell();\n}",
                        "interface IFlyer\n{\n    void Fly();\n}",
                        "interface IDefender\n{\n    void Defend();\n}",
                        "interface ISlasher\n{\n    void Slash();\n}",
                        "interface IShooter\n{\n    void Shoot();\n}",
                        "interface IEnchantable\n{\n    void Enchant();\n}",
                        "interface IRepairable\n{\n    void Repair();\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 5060,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "interface IPlayable\n{\n    void Play();\n    void Pause();\n    void Stop();\n}\n\ninterface IMediaControl\n{\n    void SkipTrack();\n    void Eject();\n}\n\ninterface IVolumeControl\n{\n    void SetVolume(int volume);\n}\n\ninterface IEqualizerControl\n{\n    void SetEqualizer(string preset);\n}\n\ninterface ITrackInfoDisplay\n{\n    void DisplayTrackInfo();\n}\n\ninterface IPlaybackModeControl\n{\n    void Shuffle();\n    void Repeat();\n}",
                  "class CDPlayer : IPlayable, IMediaControl, IVolumeControl, IEqualizerControl, ITrackInfoDisplay, IPlaybackModeControl\n{\n    // Implement all relevant methods here.\n}\n\nclass VinylPlayer : IPlayable, IVolumeControl, ITrackInfoDisplay\n{\n    // Implement only the relevant methods here.\n}\n\nclass Amplifier : IVolumeControl, IEqualizerControl\n{\n    // Implement only the relevant methods here.\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [
                    "Playable",
                    "MediaControl",
                    "VolumeControl",
                    "EqualizerControl",
                    "TrackInfoDisplay",
                    "PlaybackModeControl"
                  ],
                  "classes": [],
                  "has_dependency_injection": false,
                  "language_quality_score": 2
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface IPlayable\n{\n    void Play();\n    void Pause();\n    void Stop();\n}",
                        "interface IMediaControl\n{\n    void SkipTrack();\n    void Eject();\n}",
                        "interface IVolumeControl\n{\n    void SetVolume(int volume);\n}",
                        "interface IEqualizerControl\n{\n    void SetEqualizer(string preset);\n}",
                        "interface ITrackInfoDisplay\n{\n    void DisplayTrackInfo();\n}",
                        "interface IPlaybackModeControl\n{\n    void Shuffle();\n    void Repeat();\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface IPlayable\n{\n    void Play();\n    void Pause();\n    void Stop();\n}",
                        "interface IMediaControl\n{\n    void SkipTrack();\n    void Eject();\n}",
                        "interface IVolumeControl\n{\n    void SetVolume(int volume);\n}",
                        "interface IEqualizerControl\n{\n    void SetEqualizer(string preset);\n}",
                        "interface ITrackInfoDisplay\n{\n    void DisplayTrackInfo();\n}",
                        "interface IPlaybackModeControl\n{\n    void Shuffle();\n    void Repeat();\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1803,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "interface ICook\n{\n    void CookFood();\n}\n\ninterface IServe\n{\n    void ServeCustomers();\n}\n\ninterface ICleanTables\n{\n    void CleanTables();\n}\n\ninterface IManageStaff\n{\n    void ManageStaff();\n}\n\ninterface IWashDishes\n{\n    void WashDishes();\n}\n\ninterface IVacuumFloor\n{\n    void VacuumFloor();\n}\n\ninterface ISelfDiagnose\n{\n    void SelfDiagnose();\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [
                    "Cook",
                    "Serve",
                    "CleanTables",
                    "ManageStaff",
                    "WashDishes",
                    "VacuumFloor",
                    "SelfDiagnose"
                  ],
                  "classes": [],
                  "has_dependency_injection": false,
                  "language_quality_score": 2
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface ICook\n{\n    void CookFood();\n}",
                        "interface IServe\n{\n    void ServeCustomers();\n}",
                        "interface ICleanTables\n{\n    void CleanTables();\n}",
                        "interface IManageStaff\n{\n    void ManageStaff();\n}",
                        "interface IWashDishes\n{\n    void WashDishes();\n}",
                        "interface IVacuumFloor\n{\n    void VacuumFloor();\n}",
                        "interface ISelfDiagnose\n{\n    void SelfDiagnose();\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface ICook\n{\n    void CookFood();\n}",
                        "interface IServe\n{\n    void ServeCustomers();\n}",
                        "interface ICleanTables\n{\n    void CleanTables();\n}",
                        "interface IManageStaff\n{\n    void ManageStaff();\n}",
                        "interface IWashDishes\n{\n    void WashDishes();\n}",
                        "interface IVacuumFloor\n{\n    void VacuumFloor();\n}",
                        "interface ISelfDiagnose\n{\n    void SelfDiagnose();\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1886,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "interface IVehicle\n{\n    void Start();\n    void Stop();\n}\n\ninterface IFlyingVehicle : IVehicle\n{\n    void Fly();\n}\n\ninterface IDivingVehicle : IVehicle\n{\n    void Dive();\n}",
                  "class Car : IVehicle\n{\n    private Driver driver;\n    \n    public Car(Driver driver)\n    {\n        this.driver = driver;\n    }\n    \n    public void Start()\n    {\n        if (driver != null)\n        {\n            Console.WriteLine(\"Car started by \" + driver.GetName());\n        }\n        else\n        {\n            Console.WriteLine(\"Car started\");\n        }\n    }\n    \n    public void Stop()\n    {\n        Console.WriteLine(\"Car stopped\");\n    }\n}\n\nclass Plane : IFlyingVehicle\n{\n    private Pilot pilot;\n    \n    public Plane(Pilot pilot)\n    {\n        this.pilot = pilot;\n    }\n    \n    public void Start()\n    {\n        Console.WriteLine(\"Plane engines started by \" + pilot.GetName());\n    }\n    \n    public void Stop()\n    {\n        Console.WriteLine(\"Plane stopped\");\n    }\n    \n    public void Fly()\n    {\n        if (pilot.GetName().Contains(\"Captain\"))\n        {\n            Console.WriteLine(\"Plane flying at cruising altitude\");\n        }\n        else\n        {\n            Console.WriteLine(\"Plane flying\");\n        }\n    }\n}\n\nclass Submarine : IDivingVehicle\n{\n    private Captain captain;\n    private int depth;\n    \n    public Submarine(Captain captain)\n    {\n        this.captain = captain;\n        this.depth = 0;\n    }\n    \n    public void Start()\n    {\n        Console.WriteLine(\"Submarine engines started by \" + captain.GetName());\n    }\n    \n    public void Stop()\n    {\n        Console.WriteLine(\"Submarine stopped\");\n    }\n    \n    public void Dive()\n    {\n        if (captain != null && captain.GetName().StartsWith(\"Captain\"))\n        {\n            if (depth < 100)\n            {\n                depth += 50;\n                Console.WriteLine(\"Submarine diving to depth: \" + depth + \" meters\");\n            }\n            else if (depth < 200)\n            {\n                depth += 30;\n                Console.WriteLine(\"Deep diving to: \" + depth + \" meters\");\n            }\n            else\n            {\n                Console.WriteLine(\"Maximum depth reached\");\n            }\n        }\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [
                    "Vehicle",
                    "FlyingVehicle",
                    "DivingVehicle"
                  ],
                  "classes": [],
                  "has_dependency_injection": false,
                  "language_quality_score": 2
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface IVehicle\n{\n    void Start();\n    void Stop();\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface IVehicle\n{\n    void Start();\n    void Stop();\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 3500,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1010,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "interface Playable {\n    void play();\n    void pause();\n    void stop();\n}\n\ninterface TrackSkippable {\n    void skipTrack();\n}\n\ninterface Ejectable {\n    void eject();\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "Playable",
                    "TrackSkippable",
                    "Ejectable"
                  ],
                  "classes": [],
                  "has_dependency_injection": false,
                  "language_quality_score": 2
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface Playable {\n    void play();\n    void pause();\n    void stop();\n}",
                        "interface TrackSkippable {\n    void skipTrack();\n}",
                        "interface Ejectable {\n    void eject();\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface Playable {\n    void play();\n    void pause();\n    void stop();\n}",
                        "interface TrackSkippable {\n    void skipTrack();\n}",
                        "interface Ejectable {\n    void eject();\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 994,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "interface Cook {\n    void cookFood();\n}\n\ninterface Server {\n    void serveCustomers();\n}\n\ninterface Cleaner {\n    void cleanTables();\n}\n\nclass Chef implements Cook {\n    public void cookFood() {\n        System.out.println(\"Chef is cooking food.\");\n    }\n}\n\nclass Waiter implements Server, Cleaner {\n    public void serveCustomers() {\n        System.out.println(\"Waiter is serving customers.\");\n    }\n\n    public void cleanTables() {\n        System.out.println(\"Waiter is cleaning tables.\");\n    }\n}\n\nclass Cleaner implements Cleaner {\n    public void cleanTables() {\n        System.out.println(\"Cleaner is cleaning tables.\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "Cook",
                    "Server",
                    "Cleaner"
                  ],
                  "classes": [
                    [
                      "Chef",
                      "Cook"
                    ],
                    [
                      "Waiter",
                      "Server"
                    ],
                    [
                      "Cleaner",
                      "Cleaner"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Chef implements Cook {\n    public void cookFood() {\n        System.out.println(\"Chef is cooking food.\");\n    }\n}\n\n",
                        "class Waiter implements Server, Cleaner {\n    public void serveCustomers() {\n        System.out.println(\"Waiter is serving customers.\");\n    }\n\n    public void cleanTables() {\n        System.out.println(\"Waiter is cleaning tables.\");\n    }\n}\n\n",
                        "class Cleaner implements Cleaner {\n    public void cleanTables() {\n        System.out.println(\"Cleaner is cleaning tables.\");\n    }\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1979,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "interface Vehicle {\n    void start();\n    void stop();\n}\n\ninterface Flyable extends Vehicle {\n    void fly();\n}\n\nclass Car implements Vehicle {\n    public void start() {\n        System.out.println(\"Car engine started\");\n    }\n    \n    public void stop() {\n        System.out.println(\"Car stopped\");\n    }\n}\n\nclass Plane implements Flyable {\n    public void start() {\n        System.out.println(\"Plane engines started\");\n    }\n    \n    public void stop() {\n        System.out.println(\"Plane stopped\");\n    }\n    \n    public void fly() {\n        System.out.println(\"Plane is flying\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "Vehicle",
                    "Flyable"
                  ],
                  "classes": [
                    [
                      "Car",
                      "Vehicle"
                    ],
                    [
                      "Plane",
                      "Flyable"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface Vehicle {\n    void start();\n    void stop();\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface Vehicle {\n    void start();\n    void stop();\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1340,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3363,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 7343,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4481,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4946,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "interface MeleeAttacker {\n    void meleeAttack();\n}\n\ninterface SpellCaster {\n    void castSpell();\n}\n\ninterface Flyer {\n    void fly();\n}\n\ninterface Defender {\n    void defend();\n}",
                  "class Mage implements SpellCaster, Flyer, Defender {\n    // Implementation...\n}\n\nclass Fighter implements MeleeAttacker, Defender {\n    // Implementation...\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "MeleeAttacker",
                    "SpellCaster",
                    "Flyer",
                    "Defender"
                  ],
                  "classes": [],
                  "has_dependency_injection": false,
                  "language_quality_score": 2
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface MeleeAttacker {\n    void meleeAttack();\n}",
                        "interface SpellCaster {\n    void castSpell();\n}",
                        "interface Flyer {\n    void fly();\n}",
                        "interface Defender {\n    void defend();\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface MeleeAttacker {\n    void meleeAttack();\n}",
                        "interface SpellCaster {\n    void castSpell();\n}",
                        "interface Flyer {\n    void fly();\n}",
                        "interface Defender {\n    void defend();\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1377,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "interface Playable {\n    void play();\n    void pause();\n    void stop();\n}\n\ninterface TrackControl {\n    void skipTrack();\n    void displayTrackInfo();\n}\n\ninterface MediaHandling {\n    void eject();\n}\n\ninterface EqualizerAdjustable {\n    void setEqualizer(String preset);\n}\n\ninterface PlaybackMode {\n    void shuffle();\n    void repeat();\n}\n\nclass CDPlayer implements Playable, TrackControl, MediaHandling, EqualizerAdjustable, PlaybackMode {\n    // Implementation...\n}\n\nclass VinylPlayer implements Playable, TrackControl, MediaHandling {\n    // Implementation...\n}\n\nclass Amplifier implements EqualizerAdjustable {\n    // Implementation...\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "Playable",
                    "TrackControl",
                    "MediaHandling",
                    "EqualizerAdjustable",
                    "PlaybackMode"
                  ],
                  "classes": [
                    [
                      "CDPlayer",
                      "Playable"
                    ],
                    [
                      "VinylPlayer",
                      "Playable"
                    ],
                    [
                      "Amplifier",
                      "EqualizerAdjustable"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface Playable {\n    void play();\n    void pause();\n    void stop();\n}",
                        "interface TrackControl {\n    void skipTrack();\n    void displayTrackInfo();\n}",
                        "interface MediaHandling {\n    void eject();\n}",
                        "interface EqualizerAdjustable {\n    void setEqualizer(String preset);\n}",
                        "interface PlaybackMode {\n    void shuffle();\n    void repeat();\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface Playable {\n    void play();\n    void pause();\n    void stop();\n}",
                        "interface TrackControl {\n    void skipTrack();\n    void displayTrackInfo();\n}",
                        "interface MediaHandling {\n    void eject();\n}",
                        "interface EqualizerAdjustable {\n    void setEqualizer(String preset);\n}",
                        "interface PlaybackMode {\n    void shuffle();\n    void repeat();\n}"
                      ]
                    },
                    {
                      "pattern": "multiple_interfaces",
                      "matches": [
                        "class CDPlayer implements Playable, TrackControl, MediaHandling, EqualizerAdjustable, PlaybackMode",
                        "class VinylPlayer implements Playable, TrackControl, MediaHandling"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1576,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "interface Cook {\n    void cookFood();\n}\n\ninterface Server {\n    void serveCustomers();\n}\n\ninterface Cleaner {\n    void cleanTables();\n}\n\ninterface Managerial {\n    void manageStaff();\n}\n\n// Similarly for MachineWorker responsibilities\n\ninterface DishWasher {\n    void washDishes();\n}\n\ninterface FloorVacuumer {\n    void vacuumFloor();\n}\n\ninterface SelfDiagnosable {\n    void selfDiagnose();\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "Cook",
                    "Server",
                    "Cleaner",
                    "Managerial",
                    "DishWasher",
                    "FloorVacuumer",
                    "SelfDiagnosable"
                  ],
                  "classes": [],
                  "has_dependency_injection": false,
                  "language_quality_score": 2
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 1468,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1913,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "interface MeleeAttacker {\n    fun meleeAttack()\n}\n\ninterface SpellCaster {\n    fun castSpell()\n}\n\ninterface Flyable {\n    fun fly()\n}\n\ninterface Defender {\n    fun defend()\n}\n\nclass Mage(private val name: String) : SpellCaster, Flyable, Defender {\n    private var mana: Int = 100\n    \n    override fun castSpell() {\n        if (mana >= 20) {\n            println(\"$name casts a fireball spell!\")\n            mana -= 20\n        } else {\n            println(\"$name is out of mana!\")\n        }\n    }\n    \n    override fun fly() {\n        println(\"$name soars through the air with magic!\")\n    }\n    \n    override fun defend() {\n        println(\"$name creates a magical shield!\")\n    }\n}\n\nclass Fighter(private val name: String) : MeleeAttacker, Defender {\n    private var stamina: Int = 100\n    \n    override fun meleeAttack() {\n        if (stamina >= 10) {\n            println(\"$name swings sword with great force!\")\n            stamina -= 10\n        } else {\n            println(\"$name is too tired to attack!\")\n        }\n    }\n    \n    override fun defend() {\n        println(\"$name raises shield to block incoming attacks!\")\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "MeleeAttacker",
                    "SpellCaster",
                    "Flyable",
                    "Defender"
                  ],
                  "classes": [
                    [
                      "Mage",
                      ""
                    ],
                    [
                      "Fighter",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface MeleeAttacker {\n    fun meleeAttack()\n}",
                        "interface SpellCaster {\n    fun castSpell()\n}",
                        "interface Flyable {\n    fun fly()\n}",
                        "interface Defender {\n    fun defend()\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface MeleeAttacker {\n    fun meleeAttack()\n}",
                        "interface SpellCaster {\n    fun castSpell()\n}",
                        "interface Flyable {\n    fun fly()\n}",
                        "interface Defender {\n    fun defend()\n}\n\nclass Mage(private val name: String) : SpellCaster, Flyable, Defender {\n    private var mana: Int = 100\n    \n    override fun castSpell() {\n        if (mana >= 20) {\n            println(\"$name casts a fireball spell!\")\n            mana -= 20\n        }"
                      ]
                    }
                  ]
                }
              },
              "response_length": 2067,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1894,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "interface Cook {\n    fun cookFood()\n}\n\ninterface Serve {\n    fun serveCustomers()\n}\n\ninterface Clean {\n    fun cleanTables()\n}\n\nclass Chef : Cook {\n    override fun cookFood() {\n        println(\"Chef is cooking food.\")\n    }\n}\n\nclass Waiter : Serve, Clean {\n    override fun serveCustomers() {\n        println(\"Waiter is serving customers.\")\n    }\n\n    override fun cleanTables() {\n        println(\"Waiter is cleaning tables.\")\n    }\n}\n\nclass Cleaner : Clean {\n    override fun cleanTables() {\n        println(\"Cleaner is cleaning tables.\")\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "Cook",
                    "Serve",
                    "Clean"
                  ],
                  "classes": [
                    [
                      "Chef",
                      "Cook"
                    ],
                    [
                      "Waiter",
                      "Serve"
                    ],
                    [
                      "Cleaner",
                      "Clean"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Chef : Cook {\n    override fun cookFood() {\n        println(\"Chef is cooking food.\")\n    }\n}\n\n",
                        "class Waiter : Serve, Clean {\n    override fun serveCustomers() {\n        println(\"Waiter is serving customers.\")\n    }\n\n    override fun cleanTables() {\n        println(\"Waiter is cleaning tables.\")\n    }\n}\n\n",
                        "class Cleaner : Clean {\n    override fun cleanTables() {\n        println(\"Cleaner is cleaning tables.\")\n    }\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1625,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "interface Vehicle {\n    fun start()\n    fun stop()\n}\n\ninterface Flyable : Vehicle {\n    fun fly()\n}\n\nclass Car : Vehicle {\n    override fun start() {\n        println(\"Car engine started\")\n    }\n    \n    override fun stop() {\n        println(\"Car stopped\")\n    }\n}\n\nclass Plane : Flyable {\n    override fun start() {\n        println(\"Plane engines started\")\n    }\n    \n    override fun stop() {\n        println(\"Plane stopped\")\n    }\n    \n    override fun fly() {\n        println(\"Plane is flying\")\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "Vehicle",
                    "Flyable"
                  ],
                  "classes": [
                    [
                      "Car",
                      "Vehicle"
                    ],
                    [
                      "Plane",
                      "Flyable"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface Vehicle {\n    fun start()\n    fun stop()\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface Vehicle {\n    fun start()\n    fun stop()\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1253,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 559,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 8389,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3317,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2817,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "interface MeleeAttacker {\n    fun meleeAttack()\n}\n\ninterface SpellCaster {\n    fun castSpell()\n}\n\ninterface Flyable {\n    fun fly()\n}\n\ninterface Defender {\n    fun defend()\n}\n\ninterface Slashable {\n    fun slash()\n}\n\ninterface Shootable {\n    fun shoot()\n}\n\ninterface Enchantable {\n    fun enchant()\n}\n\ninterface Repairable {\n    fun repair()\n}\n\nclass Mage(private val name: String, private val level: Int) : SpellCaster, Flyable, Defender {\n    private var mana: Int = 100\n    \n    override fun castSpell() {\n        if (mana < 10) {\n            println(\"$name is out of mana!\")\n            return\n        }\n        \n        when {\n            level >= 5 && mana >= 30 -> {\n                println(\"$name casts a powerful lightning storm!\")\n                mana -= 30\n            }\n            level >= 3 && mana >= 20 -> {\n                println(\"$name casts a fireball spell!\")\n                mana -= 20\n            }\n            mana >= 10 -> {\n                println(\"$name casts a basic magic missile!\")\n                mana -= 10\n            }\n        }\n    }\n    \n    override fun fly() {\n        if (level >= 2) {\n            println(\"$name soars through the air with magic!\")\n        } else {\n            println(\"$name is too inexperienced to fly!\")\n        }\n    }\n    \n    override fun defend() {\n        if (mana >= 15) {\n            println(\"$name creates a magical barrier!\")\n            mana -= 15\n        } else {\n            println(\"$name dodges awkwardly!\")\n        }\n    }\n}\n\nclass Fighter(private val name: String, private val hasWeapon: Boolean) : MeleeAttacker, Defender {\n    private var stamina: Int = 100\n    \n    override fun meleeAttack() {\n        if (stamina < 5) {\n            println(\"$name is too exhausted to fight!\")\n            return\n        }\n        \n        if (hasWeapon) {\n            when {\n                stamina >= 20 -> {\n                    println(\"$name performs a devastating combo attack!\")\n                    stamina -= 20\n                }\n                stamina >= 10 -> {\n                    println(\"$name swings weapon with force!\")\n                    stamina -= 10\n                }\n                else -> {\n                    println(\"$name makes a weak weapon strike!\")\n                    stamina -= 5\n                }\n            }\n        } else {\n            when {\n                stamina >= 15 -> {\n                    println(\"$name throws a powerful punch!\")\n                    stamina -= 15\n                }\n                else -> {\n                    println(\"$name throws a basic punch!\")\n                    stamina -= 5\n                }\n            }\n        }\n    }\n    \n    override fun defend() {\n        when {\n            hasWeapon && stamina >= 10 -> {\n                println(\"$name blocks with weapon!\")\n                stamina -= 10\n            }\n            else -> {\n                println(\"$name dodges the attack!\")\n            }\n        }\n    }\n}\n\nclass Sword : Slashable, Enchantable, Repairable {\n    override fun slash() {\n        println(\"The sword slashes through the air!\")\n    }\n\n    override fun enchant() {\n        println(\"The sword glows with magical energy!\")\n    }\n\n    override fun repair() {\n        println(\"The sword is sharpened and polished.\")\n    }\n}\n\nclass Bow : Shootable, Repairable {\n    private var arrows: Int = 10\n\n    override fun shoot() {\n        if (arrows > 0) {\n            println(\"An arrow flies through the air!\")\n            arrows--\n        } else {\n            println(\"No arrows left!\")\n        }\n    }\n\n    override fun repair() {\n        println(\"The bow string is tightened and the wood polished.\")\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "MeleeAttacker",
                    "SpellCaster",
                    "Flyable",
                    "Defender",
                    "Slashable",
                    "Shootable",
                    "Enchantable",
                    "Repairable"
                  ],
                  "classes": [
                    [
                      "Mage",
                      ""
                    ],
                    [
                      "Fighter",
                      ""
                    ],
                    [
                      "Sword",
                      "Slashable"
                    ],
                    [
                      "Bow",
                      "Shootable"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface MeleeAttacker {\n    fun meleeAttack()\n}",
                        "interface SpellCaster {\n    fun castSpell()\n}",
                        "interface Flyable {\n    fun fly()\n}",
                        "interface Defender {\n    fun defend()\n}",
                        "interface Slashable {\n    fun slash()\n}",
                        "interface Shootable {\n    fun shoot()\n}",
                        "interface Enchantable {\n    fun enchant()\n}",
                        "interface Repairable {\n    fun repair()\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface MeleeAttacker {\n    fun meleeAttack()\n}",
                        "interface SpellCaster {\n    fun castSpell()\n}",
                        "interface Flyable {\n    fun fly()\n}",
                        "interface Defender {\n    fun defend()\n}",
                        "interface Slashable {\n    fun slash()\n}",
                        "interface Shootable {\n    fun shoot()\n}",
                        "interface Enchantable {\n    fun enchant()\n}",
                        "interface Repairable {\n    fun repair()\n}\n\nclass Mage(private val name: String, private val level: Int) : SpellCaster, Flyable, Defender {\n    private var mana: Int = 100\n    \n    override fun castSpell() {\n        if (mana < 10) {\n            println(\"$name is out of mana!\")\n            return\n        }"
                      ]
                    }
                  ]
                }
              },
              "response_length": 5147,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "interface Playable {\n    fun play()\n    fun pause()\n    fun stop()\n}\n\ninterface TrackControl {\n    fun skipTrack()\n    fun shuffle()\n    fun repeat()\n}\n\ninterface MediaHandling {\n    fun eject()\n}\n\ninterface VolumeControl {\n    fun setVolume(volume: Int)\n}\n\ninterface EqualizerControl {\n    fun setEqualizer(preset: String)\n}\n\ninterface TrackInfoDisplay {\n    fun displayTrackInfo()\n}\n\nclass CDPlayer : Playable, TrackControl, MediaHandling, VolumeControl, EqualizerControl, TrackInfoDisplay {\n    // Implement all the required methods\n}\n\nclass VinylPlayer : Playable, VolumeControl, TrackInfoDisplay {\n    override fun play() {\n        println(\"Vinyl Player: Playing\")\n    }\n\n    override fun pause() {\n        println(\"Vinyl Player: Paused (needle lifted)\")\n    }\n\n    override fun stop() {\n        println(\"Vinyl Player: Stopped\")\n    }\n\n    override fun eject() {\n        throw UnsupportedOperationException(\"Vinyl players don't eject - you must manually remove the record!\")\n    }\n\n    override fun setVolume(volume: Int) {\n        println(\"Vinyl Player: Volume set to $volume\")\n    }\n\n    override fun displayTrackInfo() {\n        println(\"Vinyl Player: Displaying track info\")\n    }\n}\n\nclass Amplifier : VolumeControl, EqualizerControl {\n    // Implement all the required methods\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "Playable",
                    "TrackControl",
                    "MediaHandling",
                    "VolumeControl",
                    "EqualizerControl",
                    "TrackInfoDisplay"
                  ],
                  "classes": [
                    [
                      "CDPlayer",
                      "Playable"
                    ],
                    [
                      "VinylPlayer",
                      "Playable"
                    ],
                    [
                      "Amplifier",
                      "VolumeControl"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface Playable {\n    fun play()\n    fun pause()\n    fun stop()\n}",
                        "interface TrackControl {\n    fun skipTrack()\n    fun shuffle()\n    fun repeat()\n}",
                        "interface MediaHandling {\n    fun eject()\n}",
                        "interface VolumeControl {\n    fun setVolume(volume: Int)\n}",
                        "interface EqualizerControl {\n    fun setEqualizer(preset: String)\n}",
                        "interface TrackInfoDisplay {\n    fun displayTrackInfo()\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface Playable {\n    fun play()\n    fun pause()\n    fun stop()\n}",
                        "interface TrackControl {\n    fun skipTrack()\n    fun shuffle()\n    fun repeat()\n}",
                        "interface MediaHandling {\n    fun eject()\n}",
                        "interface VolumeControl {\n    fun setVolume(volume: Int)\n}",
                        "interface EqualizerControl {\n    fun setEqualizer(preset: String)\n}",
                        "interface TrackInfoDisplay {\n    fun displayTrackInfo()\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 2271,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "interface Cook {\n    fun cookFood()\n}\n\ninterface Server {\n    fun serveCustomers()\n}\n\ninterface Cleaner {\n    fun cleanTables()\n}\n\ninterface Managerial {\n    fun manageStaff()\n}",
                  "class Chef : Cook {\n    override fun cookFood() {\n        println(\"Chef is cooking meals.\")\n    }\n}\n\nclass Waiter : Server, Cleaner {\n    override fun serveCustomers() {\n        println(\"Waiter is serving customers.\")\n    }\n\n    override fun cleanTables() {\n        println(\"Waiter is cleaning tables.\")\n    }\n}\n\nclass Manager : Managerial {\n    private val conflict = true\n\n    override fun manageStaff() {\n        if (conflict) {\n            println(\"Manager is resolving a team conflict.\")\n        } else {\n            println(\"Manager is approving staff schedules.\")\n        }\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "Cook",
                    "Server",
                    "Cleaner",
                    "Managerial"
                  ],
                  "classes": [],
                  "has_dependency_injection": false,
                  "language_quality_score": 2
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 2036,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "interface GroundVehicle {\n    fun start()\n    fun stop()\n}\n\ninterface AirVehicle : Vehicle {\n    override fun start()\n    override fun stop()\n    fun fly()\n}\n\ninterface WaterVehicle : Vehicle {\n    override fun start()\n    override fun stop()\n    fun dive()\n}",
                  "class Car(private val driver: Driver) : GroundVehicle {\n    override fun start() {\n        println(\"Car started by ${driver.getName()}\")\n    }\n    \n    override fun stop() {\n        println(\"Car stopped\")\n    }\n}\n\nclass Plane(private val pilot: Pilot) : AirVehicle {\n    override fun start() {\n        println(\"Plane engines started by ${pilot.getName()}\")\n    }\n    \n    override fun stop() {\n        println(\"Plane stopped\")\n    }\n    \n    override fun fly() {\n        if (pilot.getName().contains(\"Captain\")) {\n            println(\"Plane flying at cruising altitude\")\n        } else {\n            println(\"Plane flying\")\n        }\n    }\n}\n\nclass Submarine(private val captain: Captain) : WaterVehicle {\n    private var depth = 0\n    \n    override fun start() {\n        println(\"Submarine engines started by ${captain.getName()}\")\n    }\n    \n    override fun stop() {\n        println(\"Submarine stopped\")\n    }\n    \n    override fun dive() {\n        if (captain.getName().startsWith(\"Captain\")) {\n            when {\n                depth < 100 -> {\n                    depth += 50\n                    println(\"Submarine diving to depth: $depth meters\")\n                }\n                depth < 200 -> {\n                    depth += 30\n                    println(\"Deep diving to: $depth meters\")\n                }\n                else -> println(\"Maximum depth reached\")\n            }\n        }\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "GroundVehicle",
                    "AirVehicle",
                    "WaterVehicle"
                  ],
                  "classes": [],
                  "has_dependency_injection": false,
                  "language_quality_score": 2
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface GroundVehicle {\n    fun start()\n    fun stop()\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface GroundVehicle {\n    fun start()\n    fun stop()\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 3011,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "from abc import ABC, abstractmethod\n\nclass MeleeAttacker(ABC):\n    @abstractmethod\n    def melee_attack(self):\n        pass\n\nclass SpellCaster(ABC):\n    @abstractmethod\n    def cast_spell(self):\n        pass\n\nclass Flyer(ABC):\n    @abstractmethod\n    def fly(self):\n        pass\n\nclass Defender(ABC):\n    @abstractmethod\n    def defend(self):\n        pass\n\nclass Mage(SpellCaster, Flyer, Defender):\n    def __init__(self, name):\n        self.name = name\n        self.mana = 100\n    \n    def cast_spell(self):\n        if self.mana >= 20:\n            print(f\"{self.name} casts a fireball spell!\")\n            self.mana -= 20\n        else:\n            print(f\"{self.name} is out of mana!\")\n    \n    def fly(self):\n        print(f\"{self.name} soars through the air with magic!\")\n    \n    def defend(self):\n        print(f\"{self.name} creates a magical shield!\")\n\nclass Fighter(MeleeAttacker, Defender):\n    def __init__(self, name):\n        self.name = name\n        self.stamina = 100\n    \n    def melee_attack(self):\n        if self.stamina >= 10:\n            print(f\"{self.name} swings sword with great force!\")\n            self.stamina -= 10\n        else:\n            print(f\"{self.name} is too tired to attack!\")\n    \n    def defend(self):\n        print(f\"{self.name} raises shield to block incoming attacks!\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "MeleeAttacker",
                    "SpellCaster",
                    "Flyer",
                    "Defender",
                    "Mage",
                    "Fighter"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 2018,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1175,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "from abc import ABC, abstractmethod\n\nclass Cook(ABC):\n    @abstractmethod\n    def cook_food(self):\n        pass\n\nclass Server(ABC):\n    @abstractmethod\n    def serve_customers(self):\n        pass\n\nclass Cleaner(ABC):\n    @abstractmethod\n    def clean_tables(self):\n        pass\n\nclass Chef(Cook):\n    def cook_food(self):\n        print(\"Chef is cooking food.\")\n\nclass Waiter(Server, Cleaner):\n    def serve_customers(self):\n        print(\"Waiter is serving customers.\")\n    \n    def clean_tables(self):\n        print(\"Waiter is cleaning tables.\")\n\nclass CleanerRole(Cleaner):\n    def clean_tables(self):\n        print(\"Cleaner is cleaning tables.\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Cook",
                    "Server",
                    "Cleaner",
                    "Chef",
                    "Waiter",
                    "CleanerRole"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Cook(ABC):\n    @abstractmethod\n    def cook_food(self):\n        pass\n\n",
                        "class Server(ABC):\n    @abstractmethod\n    def serve_customers(self):\n        pass\n\n",
                        "class Cleaner(ABC):\n    @abstractmethod\n    def clean_tables(self):\n        pass\n\n",
                        "class Chef(Cook):\n    def cook_food(self):\n        print(\"Chef is cooking food.\")\n\n",
                        "class Waiter(Server, Cleaner):\n    def serve_customers(self):\n        print(\"Waiter is serving customers.\")\n    \n    def clean_tables(self):\n        print(\"Waiter is cleaning tables.\")\n\n",
                        "class CleanerRole(Cleaner):\n    def clean_tables(self):\n        print(\"Cleaner is cleaning tables.\")"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def cook_food(self)",
                        "def serve_customers(self)",
                        "def clean_tables(self)",
                        "def cook_food(self)",
                        "def serve_customers(self)",
                        "def clean_tables(self)",
                        "def clean_tables(self)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 2007,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "from abc import ABC, abstractmethod\n\nclass Vehicle(ABC):\n    @abstractmethod\n    def start(self):\n        pass\n    \n    @abstractmethod\n    def stop(self):\n        pass\n\nclass Flyable(Vehicle):\n    @abstractmethod\n    def fly(self):\n        pass\n\nclass Car(Vehicle):\n    def start(self):\n        print(\"Car engine started\")\n    \n    def stop(self):\n        print(\"Car stopped\")\n\nclass Plane(Flyable):\n    def start(self):\n        print(\"Plane engines started\")\n    \n    def stop(self):\n        print(\"Plane stopped\")\n    \n    def fly(self):\n        print(\"Plane is flying\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Vehicle",
                    "Flyable",
                    "Car",
                    "Plane"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 1311,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3048,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2778,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4289,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "class Flyable:\n    def fly(self):\n        pass\n\nclass Diveable:\n    def dive(self):\n        pass\n\nclass AirNavigable:\n    def navigate_air(self):\n        pass\n\nclass WaterNavigable:\n    def navigate_water(self):\n        pass\n\nclass TowerCommunicator:\n    def communicate_with_tower(self):\n        pass",
                  "class Car(Vehicle, Diveable, Chargeable):\n    # Implement methods from Vehicle and Diveable\n    pass\n\nclass Plane(Vehicle, Flyable, Refuelable):\n    # Implement methods from Vehicle and Flyable\n    pass\n\nclass Submarine(Vehicle, Diveable, NuclearFuelLoadable):\n    # Implement methods from Vehicle and Diveable\n    pass\n\nclass Driver(Operator):\n    # No need to implement any additional interfaces\n    pass\n\nclass Pilot(AirNavigable, TowerCommunicator):\n    # Implement methods from AirNavigable and TowerCommunicator\n    pass\n\nclass Captain(WaterNavigable, TowerCommunicator):\n    # Implement methods from WaterNavigable and TowerCommunicator\n    pass"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Flyable",
                    "Diveable",
                    "AirNavigable",
                    "WaterNavigable",
                    "TowerCommunicator"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 2616,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "from abc import ABC, abstractmethod\n\nclass MeleeAttacker(ABC):\n    @abstractmethod\n    def melee_attack(self):\n        pass\n\nclass SpellCaster(ABC):\n    @abstractmethod\n    def cast_spell(self):\n        pass\n\nclass Flyer(ABC):\n    @abstractmethod\n    def fly(self):\n        pass\n\nclass Defender(ABC):\n    @abstractmethod\n    def defend(self):\n        pass\n\nclass Mage(SpellCaster, Flyer, Defender):\n    # Implementation for Mage...\n\nclass Fighter(MeleeAttacker, Defender):\n    # Implementation for Fighter..."
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "MeleeAttacker",
                    "SpellCaster",
                    "Flyer",
                    "Defender",
                    "Mage",
                    "Fighter"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 1720,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1029,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "from abc import ABC, abstractmethod\n\nclass Cook(ABC):\n    @abstractmethod\n    def cook_food(self):\n        pass\n\nclass Server(ABC):\n    @abstractmethod\n    def serve_customers(self):\n        pass\n    \n    @abstractmethod\n    def clean_tables(self):\n        pass\n\nclass StaffManager(ABC):\n    @abstractmethod\n    def manage_staff(self):\n        pass\n\nclass DishWasher(ABC):\n    @abstractmethod\n    def wash_dishes(self):\n        pass\n\nclass FloorCleaner(ABC):\n    @abstractmethod\n    def vacuum_floor(self):\n        pass\n\nclass MachineSelfDiagnoser(ABC):\n    @abstractmethod\n    def self_diagnose(self):\n        pass\n\nclass Chef(Cook):\n    def cook_food(self):\n        print(\"Chef is cooking meals.\")\n\nclass Waiter(Server):\n    def serve_customers(self):\n        print(\"Waiter is serving customers.\")\n    \n    def clean_tables(self):\n        print(\"Waiter is cleaning tables.\")\n\nclass Manager(StaffManager):\n    def __init__(self):\n        self.conflict = True\n    \n    def manage_staff(self):\n        if self.conflict:\n            print(\"Manager is resolving a team conflict.\")\n        else:\n            print(\"Manager is approving staff schedules.\")\n\nclass Dishwasher(DishWasher, MachineSelfDiagnoser):\n    def __init__(self):\n        self.dirty_items = 15\n    \n    def wash_dishes(self):\n        if self.dirty_items > 0:\n            print(f\"Dishwasher is cleaning {self.dirty_items} plates.\")\n        else:\n            print(\"No dishes to clean.\")\n    \n    def self_diagnose(self):\n        print(\"Dishwasher performing self-diagnosis.\")\n\nclass VacuumCleaner(FloorCleaner, MachineSelfDiagnoser):\n    def __init__(self):\n        self.is_charged = False\n    \n    def vacuum_floor(self):\n        if self.is_charged:\n            print(\"Vacuum cleaner is cleaning the floor.\")\n        else:\n            print(\"Vacuum cleaner battery is low.\")\n    \n    def self_diagnose(self):\n        print(\"Vacuum cleaner running diagnostics.\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Cook",
                    "Server",
                    "StaffManager",
                    "DishWasher",
                    "FloorCleaner",
                    "MachineSelfDiagnoser",
                    "Chef",
                    "Waiter",
                    "Manager",
                    "Dishwasher",
                    "VacuumCleaner"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Cook(ABC):\n    @abstractmethod\n    def cook_food(self):\n        pass\n\n",
                        "class Server(ABC):\n    @abstractmethod\n    def serve_customers(self):\n        pass\n    \n    @abstractmethod\n    def clean_tables(self):\n        pass\n\n",
                        "class StaffManager(ABC):\n    @abstractmethod\n    def manage_staff(self):\n        pass\n\n",
                        "class DishWasher(ABC):\n    @abstractmethod\n    def wash_dishes(self):\n        pass\n\n",
                        "class FloorCleaner(ABC):\n    @abstractmethod\n    def vacuum_floor(self):\n        pass\n\n",
                        "class MachineSelfDiagnoser(ABC):\n    @abstractmethod\n    def self_diagnose(self):\n        pass\n\n",
                        "class Chef(Cook):\n    def cook_food(self):\n        print(\"Chef is cooking meals.\")\n\n",
                        "class Waiter(Server):\n    def serve_customers(self):\n        print(\"Waiter is serving customers.\")\n    \n    def clean_tables(self):\n        print(\"Waiter is cleaning tables.\")\n\n",
                        "class Manager(StaffManager):\n    def __init__(self):\n        self.conflict = True\n    \n    def manage_staff(self):\n        if self.conflict:\n            print(\"Manager is resolving a team conflict.\")\n        else:\n            print(\"Manager is approving staff schedules.\")\n\n",
                        "class Dishwasher(DishWasher, MachineSelfDiagnoser):\n    def __init__(self):\n        self.dirty_items = 15\n    \n    def wash_dishes(self):\n        if self.dirty_items > 0:\n            print(f\"Dishwasher is cleaning {self.dirty_items} plates.\")\n        else:\n            print(\"No dishes to clean.\")\n    \n    def self_diagnose(self):\n        print(\"Dishwasher performing self-diagnosis.\")\n\n",
                        "class VacuumCleaner(FloorCleaner, MachineSelfDiagnoser):\n    def __init__(self):\n        self.is_charged = False\n    \n    def vacuum_floor(self):\n        if self.is_charged:\n            print(\"Vacuum cleaner is cleaning the floor.\")\n        else:\n            print(\"Vacuum cleaner battery is low.\")\n    \n    def self_diagnose(self):\n        print(\"Vacuum cleaner running diagnostics.\")"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def cook_food(self)",
                        "def serve_customers(self)",
                        "def clean_tables(self)",
                        "def manage_staff(self)",
                        "def wash_dishes(self)",
                        "def vacuum_floor(self)",
                        "def self_diagnose(self)",
                        "def cook_food(self)",
                        "def serve_customers(self)",
                        "def clean_tables(self)",
                        "def __init__(self)",
                        "def manage_staff(self)",
                        "def __init__(self)",
                        "def wash_dishes(self)",
                        "def self_diagnose(self)",
                        "def __init__(self)",
                        "def vacuum_floor(self)",
                        "def self_diagnose(self)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class StaffManager",
                        "class Manager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 3342,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "ISP",
              "detected_violation": "ISP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "from abc import ABC, abstractmethod\n\nclass Steerable(ABC):\n    @abstractmethod\n    def steer(self):\n        pass\n\nclass AirNavigable(ABC):\n    @abstractmethod\n    def navigate_air(self):\n        pass\n\nclass WaterNavigable(ABC):\n    @abstractmethod\n    def navigate_water(self):\n        pass\n\nclass TowerCommunicator(ABC):\n    @abstractmethod\n    def communicate_with_tower(self):\n        pass\n\nclass Driver(Steerable):\n    def __init__(self, name):\n        self.name = name\n    \n    def steer(self):\n        if self.name and len(self.name) > 0:\n            if len(self.name) > 5:\n                print(f\"Experienced driver {self.name} steering carefully\")\n            else:\n                print(f\"Driver {self.name} steering\")\n\nclass Pilot(Steerable, AirNavigable, TowerCommunicator):\n    def __init__(self, name):\n        self.name = name\n    \n    def steer(self):\n        print(f\"Pilot {self.name} controlling aircraft\")\n    \n    def navigate_air(self):\n        if self.name:\n            if \"Captain\" in self.name:\n                print(\"Captain pilot navigating complex airspace\")\n            elif len(self.name) > 6:\n                print(\"Experienced pilot navigating airspace\")\n            else:\n                print(\"Pilot navigating\")\n    \n    def communicate_with_tower(self):\n        print(f\"Pilot {self.name} communicating with control tower\")\n\nclass Captain(Steerable, WaterNavigable):\n    def __init__(self, name):\n        self.name = name\n    \n    def steer(self):\n        print(f\"Captain {self.name} steering submarine\")\n    \n    def navigate_water(self):\n        if self.name and self.name.startswith(\"Captain\"):\n            print(\"Captain navigating deep waters\")\n        else:\n            print(\"Naval officer navigating\")\n\n# The rest of the code remains largely unchanged."
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Steerable",
                    "AirNavigable",
                    "WaterNavigable",
                    "TowerCommunicator",
                    "Driver",
                    "Pilot",
                    "Captain"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 3374,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 23,
            "fail": 25,
            "error": 0,
            "accuracy": 0.4791666666666667
          }
        }
      },
      "overall_stats": {
        "total_pass": 23,
        "total_fail": 25,
        "total_error": 0,
        "languages": {
          "CSHARP": 12,
          "JAVA": 12,
          "KOTLIN": 12,
          "PYTHON": 12
        }
      }
    }
  },
  "lsp--gpt-4o-mini--smell": {
    "smell": {
      "model": "lsp--gpt-4o-mini--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "lsp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1202,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1136,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1291,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 204,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 375,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 954,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1192,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1533,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1351,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1209,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1353,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1073,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1377,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1367,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1212,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 869,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1547,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1278,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1598,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1447,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1637,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 694,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1524,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1573,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 285,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1287,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1306,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1484,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "DIP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 583,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 762,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1762,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1344,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1280,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1499,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1438,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1292,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 957,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1341,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1152,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1209,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1450,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 736,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1436,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1318,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1360,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 438,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1175,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1531,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 1,
            "fail": 47,
            "error": 0,
            "accuracy": 0.020833333333333332
          }
        }
      },
      "overall_stats": {
        "total_pass": 1,
        "total_fail": 47,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "lsp--codellama70b-temp0-latest--default": {
    "default": {
      "model": "lsp--codellama70b-temp0-latest--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "lsp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 504,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 606,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 445,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 849,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 597,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1026,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 288,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1333,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 8829,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 575,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1145,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 854,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 571,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 526,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 673,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 291,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 370,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1107,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 305,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 323,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4801,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 169,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1470,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4873,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 538,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 530,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 308,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 257,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 315,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1180,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 356,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 559,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 25,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2195,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2816,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2997,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 699,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 287,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 214,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 417,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 541,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 702,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1578,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1636,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1338,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1785,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1262,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1052,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 7,
            "fail": 41,
            "error": 0,
            "accuracy": 0.14583333333333334
          }
        }
      },
      "overall_stats": {
        "total_pass": 7,
        "total_fail": 41,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "lsp--qwen2.5-coder32b-temp0-latest--example": {
    "example": {
      "model": "lsp--qwen2.5-coder32b-temp0-latest--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "lsp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 469,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 339,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 396,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 336,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 407,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 418,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "interface Flyable {\n    fun fly()\n    fun getFlightSpeed(): Double\n}\n\nabstract class Bird(val species: String, val wingSpan: Double) {\n    fun getSpecies(): String = species\n    fun getWingSpan(): Double = wingSpan\n}\n\nclass Eagle(wingSpan: Double) : Bird(\"Eagle\", wingSpan), Flyable {\n    override fun fly() {\n        println(\"Eagle soaring at high altitude with ${wingSpan}m wingspan\")\n    }\n    \n    override fun getFlightSpeed(): Double {\n        return 80.0 + (wingSpan * 10)\n    }\n}\n\nclass Hummingbird(wingSpan: Double) : Bird(\"Hummingbird\", wingSpan), Flyable {\n    override fun fly() {\n        println(\"Hummingbird hovering with rapid wing beats\")\n    }\n    \n    override fun getFlightSpeed(): Double {\n        return 50.0\n    }\n}\n\nclass Ostrich(wingSpan: Double, private val runningSpeed: Double) : Bird(\"Ostrich\", wingSpan) {\n    fun run() {\n        println(\"Ostrich running at $runningSpeed km/h\")\n    }\n}\n\nclass FlightSimulator {\n    fun simulateFlight(flyable: Flyable, distance: Double) {\n        println(\"Starting flight simulation for ${flyable.getSpecies()}\")\n        flyable.fly()\n        val speed = flyable.getFlightSpeed()\n        val time = if (speed > 0) distance / speed else 0.0\n        println(\"Flight time: $time hours for $distance km\")\n    }\n    \n    fun compareFlightCapabilities(flyables: Array<Flyable>, testDistance: Double) {\n        flyables.forEach { flyable ->\n            simulateFlight(flyable, testDistance)\n            println(\"---\")\n        }\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "Flyable"
                  ],
                  "classes": [
                    [
                      "Bird",
                      ""
                    ],
                    [
                      "Eagle",
                      ""
                    ],
                    [
                      "Hummingbird",
                      ""
                    ],
                    [
                      "Ostrich",
                      ""
                    ],
                    [
                      "FlightSimulator",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "override_behavior",
                      "matches": [
                        "override ",
                        "override ",
                        "override ",
                        "override "
                      ]
                    }
                  ]
                }
              },
              "response_length": 2183,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "public interface IFlyable\n{\n    void Fly();\n    double GetFlightSpeed();\n}\n\npublic abstract class Bird\n{\n    protected string species;\n    protected double wingSpan;\n\n    public Bird(string species, double wingSpan)\n    {\n        this.species = species;\n        this.wingSpan = wingSpan;\n    }\n\n    public string GetSpecies() => species;\n    public double GetWingSpan() => wingSpan;\n}\n\npublic class Eagle : Bird, IFlyable\n{\n    public Eagle(double wingSpan) : base(\"Eagle\", wingSpan) { }\n\n    public void Fly()\n    {\n        Console.WriteLine($\"Eagle soaring at high altitude with {wingSpan}m wingspan\");\n    }\n\n    public double GetFlightSpeed()\n    {\n        return 80.0 + (wingSpan * 10);\n    }\n}\n\npublic class Hummingbird : Bird, IFlyable\n{\n    public Hummingbird(double wingSpan) : base(\"Hummingbird\", wingSpan) { }\n\n    public void Fly()\n    {\n        Console.WriteLine(\"Hummingbird hovering with rapid wing beats\");\n    }\n\n    public double GetFlightSpeed()\n    {\n        return 50.0;\n    }\n}\n\npublic class Ostrich : Bird\n{\n    private double runningSpeed;\n\n    public Ostrich(double wingSpan, double runningSpeed) : base(\"Ostrich\", wingSpan)\n    {\n        this.runningSpeed = runningSpeed;\n    }\n\n    public void Run()\n    {\n        Console.WriteLine($\"Ostrich running at {runningSpeed} km/h\");\n    }\n}\n\npublic class FlightSimulator\n{\n    public void SimulateFlight(IFlyable bird, double distance)\n    {\n        Console.WriteLine($\"Starting flight simulation for {bird.GetSpecies()}\");\n        bird.Fly();\n        double speed = bird.GetFlightSpeed();\n        double time = speed > 0 ? distance / speed : 0;\n        Console.WriteLine($\"Flight time: {time} hours for {distance} km\");\n    }\n\n    public void CompareFlightCapabilities(IFlyable[] birds, double testDistance)\n    {\n        foreach (var bird in birds)\n        {\n            SimulateFlight(bird, testDistance);\n            Console.WriteLine(\"---\");\n        }\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [
                    "Flyable"
                  ],
                  "classes": [
                    [
                      "Bird",
                      ""
                    ],
                    [
                      "Eagle",
                      "Bird"
                    ],
                    [
                      "Hummingbird",
                      "Bird"
                    ],
                    [
                      "Ostrich",
                      "Bird"
                    ],
                    [
                      "FlightSimulator",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 6
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 2342,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 6016,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 7181,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 484,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 455,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 381,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 368,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 353,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 387,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 409,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 367,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 372,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 385,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 479,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 573,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 345,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2823,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "DIP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 253,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 442,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 251,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "DIP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 255,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "DIP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public class OrderProcessor {\n    private Logger logger;\n    \n    public OrderProcessor(Logger logger) {\n        this.logger = logger;\n    }\n    \n    public void processOrder(String orderId, double amount) {\n        try {\n            logger.log(\"INFO\", \"Processing order: \" + orderId + \" for amount: $\" + amount);\n            \n            validateOrder(orderId, amount);\n            \n            logger.log(\"INFO\", \"Order validation successful for: \" + orderId);\n            \n            chargePayment(amount);\n            \n            logger.log(\"INFO\", \"Payment processed successfully for order: \" + orderId);\n            \n            updateInventory(orderId);\n            \n            logger.log(\"SUCCESS\", \"Order completed: \" + orderId);\n            \n        } catch (Exception e) {\n            logger.logError(\"Order processing failed for: \" + orderId, e);\n            throw e;\n        }\n    }\n    \n    private void validateOrder(String orderId, double amount) throws Exception {\n        if (amount <= 0) {\n            throw new Exception(\"Invalid order amount\");\n        }\n        logger.log(\"DEBUG\", \"Order validation passed for: \" + orderId);\n    }\n    \n    private void chargePayment(double amount) throws Exception {\n        logger.log(\"INFO\", \"Attempting to charge payment: $\" + amount);\n        if (amount > 10000) {\n            throw new Exception(\"Payment amount exceeds limit\");\n        }\n    }\n    \n    private void updateInventory(String orderId) {\n        logger.log(\"INFO\", \"Updating inventory for order: \" + orderId);\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "OrderProcessor",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "abstraction_usage",
                      "matches": [
                        "private Logger logger;"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1950,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 281,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "interface Fuel {\n    fun refuel(vehicle: Vehicle, amount: Double)\n}\n\nclass Gasoline : Fuel {\n    override fun refuel(vehicle: Vehicle, amount: Double) {\n        if (amount < 0) throw IllegalArgumentException(\"Cannot refuel negative amount\")\n        val newLevel = min(vehicle.currentFuelLevel + amount, vehicle.fuelCapacity)\n        vehicle.currentFuelLevel = newLevel\n        println(\"Added $amount gallons of gasoline to ${vehicle.brand}\")\n    }\n}\n\nclass Electricity : Fuel {\n    override fun refuel(vehicle: Vehicle, amount: Double) {\n        if (amount < 0) throw IllegalArgumentException(\"Cannot charge negative amount\")\n        val newLevel = min(vehicle.currentFuelLevel + amount, vehicle.fuelCapacity)\n        vehicle.currentFuelLevel = newLevel\n        println(\"Charged $amount kWh to ${vehicle.brand} battery\")\n    }\n}\n\nabstract class Vehicle(protected val brand: String, protected val fuelCapacity: Double) {\n    protected var currentFuelLevel: Double = 0.0\n    private lateinit var fuel: Fuel\n\n    fun setFuel(fuel: Fuel) {\n        this.fuel = fuel\n    }\n\n    open fun refuel(amount: Double) {\n        fuel.refuel(this, amount)\n    }\n    \n    abstract fun getRemainingRange(): Double\n    \n    fun getBrand(): String = brand\n    fun getFuelCapacity(): Double = fuelCapacity\n    fun getCurrentFuelLevel(): Double = currentFuelLevel\n}\n\nclass GasCar(brand: String, tankCapacity: Double, private val milesPerGallon: Double) : \n    Vehicle(brand, tankCapacity) {\n    \n    override fun refuel(amount: Double) {\n        super.refuel(amount)\n    }\n    \n    override fun getRemainingRange(): Double {\n        return currentFuelLevel * milesPerGallon\n    }\n}\n\nclass ElectricCar(brand: String, batteryCapacity: Double, private val batteryEfficiency: Double) :\n    Vehicle(brand, batteryCapacity) {\n    \n    override fun refuel(amount: Double) {\n        super.refuel(amount)\n    }\n    \n    override fun getRemainingRange(): Double {\n        return currentFuelLevel * batteryEfficiency\n    }\n}\n\nclass HybridCar(brand: String, tankCapacity: Double, private val milesPerGallon: Double, \n                private val electricRange: Double) : Vehicle(brand, tankCapacity) {\n    \n    override fun refuel(amount: Double) {\n        super.refuel(amount)\n    }\n    \n    override fun getRemainingRange(): Double {\n        return (currentFuelLevel * milesPerGallon) + electricRange\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "Fuel"
                  ],
                  "classes": [
                    [
                      "Gasoline",
                      "Fuel"
                    ],
                    [
                      "Electricity",
                      "Fuel"
                    ],
                    [
                      "Vehicle",
                      ""
                    ],
                    [
                      "GasCar",
                      ""
                    ],
                    [
                      "ElectricCar",
                      ""
                    ],
                    [
                      "HybridCar",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "override ",
                        "override ",
                        "override ",
                        "override ",
                        "override ",
                        "override ",
                        "override ",
                        "override "
                      ]
                    },
                    {
                      "pattern": "abstract_methods",
                      "matches": [
                        "abstract class Vehicle(",
                        "abstract fun getRemainingRange("
                      ]
                    }
                  ]
                }
              },
              "response_length": 2780,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 370,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3695,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4060,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3984,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 6864,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 372,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 262,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 443,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 383,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 359,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 348,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 476,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 537,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 421,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 430,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 420,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 594,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 23,
            "fail": 25,
            "error": 0,
            "accuracy": 0.4791666666666667
          }
        }
      },
      "overall_stats": {
        "total_pass": 23,
        "total_fail": 25,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "lsp--gpt-4o-mini--ensemble": {
    "ensemble": {
      "model": "lsp--gpt-4o-mini--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "lsp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1704,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1433,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1519,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1292,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1680,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1766,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1633,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2101,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1945,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1856,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1880,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1832,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1784,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1595,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1525,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1648,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1937,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1818,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1477,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1871,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1924,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1998,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2105,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1972,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1439,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1259,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1353,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1511,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1638,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1661,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1935,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1589,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1765,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1803,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1917,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1917,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1576,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1619,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1406,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1306,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1655,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1898,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1968,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1964,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1734,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1518,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1634,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2000,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 17,
            "fail": 31,
            "error": 0,
            "accuracy": 0.3541666666666667
          }
        }
      },
      "overall_stats": {
        "total_pass": 17,
        "total_fail": 31,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "lsp--codellama70b-temp0-latest--example": {
    "example": {
      "model": "lsp--codellama70b-temp0-latest--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "lsp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1642,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 337,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 411,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 481,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 519,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2582,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2806,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "csharp": [
                  "public abstract class Bird\n{\n    protected string species;\n    protected double wingSpan;\n    \n    public Bird(string species, double wingSpan)\n    {\n        this.species = species;\n        this.wingSpan = wingSpan;\n    }\n    \n    public virtual void Fly() {}\n    public abstract double GetFlightSpeed();\n    \n    public string GetSpecies() => species;\n    public double GetWingSpan() => wingSpan;\n}\n\npublic class Eagle : Bird\n{\n    public Eagle(double wingSpan) : base(\"Eagle\", wingSpan) { }\n    \n    public override void Fly()\n    {\n        Console.WriteLine($\"Eagle soaring at high altitude with {wingSpan}m wingspan\");\n    }\n    \n    public override double GetFlightSpeed()\n    {\n        return 80.0 + (wingSpan * 10);\n    }\n}\n\npublic class Hummingbird : Bird\n{\n    public Hummingbird(double wingSpan) : base(\"Hummingbird\", wingSpan) { }\n    \n    public override void Fly()\n    {\n        Console.WriteLine(\"Hummingbird hovering with rapid wing beats\");\n    }\n    \n    public override double GetFlightSpeed()\n    {\n        return 50.0;\n    }\n}\n\npublic class Ostrich : Bird\n{\n    private double runningSpeed;\n    \n    public Ostrich(double wingSpan, double runningSpeed) : base(\"Ostrich\", wingSpan)\n    {\n        this.runningSpeed = runningSpeed;\n    }\n    \n    public override void Fly()\n    {\n        throw new NotSupportedException(\"Ostriches are flightless birds!\");\n    }\n    \n    public override double GetFlightSpeed()\n    {\n        return 0.0;\n    }\n}\n\npublic class FlightSimulator\n{\n    private readonly Bird[] _birds;\n    \n    public FlightSimulator(Bird[] birds)\n    {\n        _birds = birds;\n    }\n    \n    public void SimulateFlight(double distance)\n    {\n        foreach (var bird in _birds)\n        {\n            Console.WriteLine($\"Starting flight simulation for {bird.GetSpecies()}\");\n            bird.Fly();\n            \n            double speed = bird.GetFlightSpeed();\n            double time = speed > 0 ? distance / speed : 0;\n            Console.WriteLine($\"Flight time: {time} hours for {distance} km\");\n        }\n    }\n    \n    public void CompareFlightCapabilities(double testDistance)\n    {\n        foreach (var bird in _birds)\n        {\n            SimulateFlight(testDistance);\n            Console.WriteLine(\"---\");\n        }\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Bird",
                      ""
                    ],
                    [
                      "Eagle",
                      "Bird"
                    ],
                    [
                      "Hummingbird",
                      "Bird"
                    ],
                    [
                      "Ostrich",
                      "Bird"
                    ],
                    [
                      "FlightSimulator",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Bird\n{\n    protected string species;\n    protected double wingSpan;\n    \n    public Bird(string species, double wingSpan)\n    {\n        this.species = species;\n        this.wingSpan = wingSpan;\n    }\n    \n    public virtual void Fly() {}\n    public abstract double GetFlightSpeed();\n    \n    public string GetSpecies() => species;\n    public double GetWingSpan() => wingSpan;\n}\n\npublic ",
                        "class Eagle : Bird\n{\n    public Eagle(double wingSpan) : base(\"Eagle\", wingSpan) { }\n    \n    public override void Fly()\n    {\n        Console.WriteLine($\"Eagle soaring at high altitude with {wingSpan}m wingspan\");\n    }\n    \n    public override double GetFlightSpeed()\n    {\n        return 80.0 + (wingSpan * 10);\n    }\n}\n\npublic ",
                        "class Hummingbird : Bird\n{\n    public Hummingbird(double wingSpan) : base(\"Hummingbird\", wingSpan) { }\n    \n    public override void Fly()\n    {\n        Console.WriteLine(\"Hummingbird hovering with rapid wing beats\");\n    }\n    \n    public override double GetFlightSpeed()\n    {\n        return 50.0;\n    }\n}\n\npublic ",
                        "class Ostrich : Bird\n{\n    private double runningSpeed;\n    \n    public Ostrich(double wingSpan, double runningSpeed) : base(\"Ostrich\", wingSpan)\n    {\n        this.runningSpeed = runningSpeed;\n    }\n    \n    public override void Fly()\n    {\n        throw new NotSupportedException(\"Ostriches are flightless birds!\");\n    }\n    \n    public override double GetFlightSpeed()\n    {\n        return 0.0;\n    }\n}\n\npublic ",
                        "class FlightSimulator\n{\n    private readonly Bird[] _birds;\n    \n    public FlightSimulator(Bird[] birds)\n    {\n        _birds = birds;\n    }\n    \n    public void SimulateFlight(double distance)\n    {\n        foreach (var bird in _birds)\n        {\n            Console.WriteLine($\"Starting flight simulation for {bird.GetSpecies()}\");\n            bird.Fly();\n            \n            double speed = bird.GetFlightSpeed();\n            double time = speed > 0 ? distance / speed : 0;\n            Console.WriteLine($\"Flight time: {time} hours for {distance} km\");\n        }\n    }\n    \n    public void CompareFlightCapabilities(double testDistance)\n    {\n        foreach (var bird in _birds)\n        {\n            SimulateFlight(testDistance);\n            Console.WriteLine(\"---\");\n        }\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public Bird(string species, double wingSpan)",
                        "public Eagle(double wingSpan)",
                        "public Hummingbird(double wingSpan)",
                        "public Ostrich(double wingSpan, double runningSpeed)",
                        "public FlightSimulator(Bird[] birds)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 2931,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1946,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 575,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3466,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 866,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 667,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 168,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 517,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 531,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1451,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 335,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1140,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1284,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2263,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 169,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 920,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 6970,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1621,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 300,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2197,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 573,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1260,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 125,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 928,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 924,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 25,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 792,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2797,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3364,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1647,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "from abc import ABC, abstractmethod\n\nclass Document(ABC):\n    def __init__(self, content):\n        self.content = content\n    \n    @abstractmethod\n    def save(self):\n        pass\n    \n    @abstractmethod\n    def print_doc(self):\n        pass\n\n# Create a separate class for saving documents\nclass DocumentSaver:\n    def __init__(self, document):\n        self.document = document\n    \n    def save(self):\n        # Implement the logic to save the document\n        pass\n\n# Create a separate class for printing documents\nclass DocumentPrinter:\n    def __init__(self, document):\n        self.document = document\n    \n    def print_doc(self):\n        # Implement the logic to print the document\n        pass"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Document",
                    "DocumentSaver",
                    "DocumentPrinter"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Document(ABC):\n    def __init__(self, content):\n        self.content = content\n    \n    @abstractmethod\n    def save(self):\n        pass\n    \n    @abstractmethod\n    def print_doc(self):\n        pass\n\n# Create a separate ",
                        "class for saving documents\n",
                        "class DocumentSaver:\n    def __init__(self, document):\n        self.document = document\n    \n    def save(self):\n        # Implement the logic to save the document\n        pass\n\n# Create a separate ",
                        "class for printing documents\n",
                        "class DocumentPrinter:\n    def __init__(self, document):\n        self.document = document\n    \n    def print_doc(self):\n        # Implement the logic to print the document\n        pass"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, content)",
                        "def save(self)",
                        "def print_doc(self)",
                        "def __init__(self, document)",
                        "def save(self)",
                        "def __init__(self, document)",
                        "def print_doc(self)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1328,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 461,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 585,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 325,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 866,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2841,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1019,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 568,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 287,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 133,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1073,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 1,
            "fail": 47,
            "error": 0,
            "accuracy": 0.020833333333333332
          }
        }
      },
      "overall_stats": {
        "total_pass": 1,
        "total_fail": 47,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "lsp--gpt-4o-mini--default": {
    "default": {
      "model": "lsp--gpt-4o-mini--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "lsp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 932,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 800,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 847,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 688,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1121,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1256,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 989,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1038,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1476,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1050,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1461,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1303,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1009,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1021,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 964,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 993,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1238,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1040,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1047,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1186,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1430,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1168,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1399,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1188,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 804,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 775,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 917,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 935,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 989,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1217,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1370,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1118,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1330,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1418,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1373,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1206,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 785,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 986,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 781,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 815,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1299,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1164,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1061,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1146,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1383,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1547,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1106,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1283,
              "model": "gpt-4o-mini",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 22,
            "fail": 26,
            "error": 0,
            "accuracy": 0.4583333333333333
          }
        }
      },
      "overall_stats": {
        "total_pass": 22,
        "total_fail": 26,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "lsp--codellama70b-temp0-latest--ensemble": {
    "ensemble": {
      "model": "lsp--codellama70b-temp0-latest--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "lsp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2113,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1295,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1115,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1277,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1696,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1413,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2424,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2042,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1771,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2072,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1833,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2004,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1521,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1360,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1239,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1217,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2150,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1632,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2055,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2251,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2061,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1574,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1596,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1238,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public interface FuelService {\n    void refuel(String fuelType);\n}\n\npublic class GasolineFuelService implements FuelService {\n    @Override\n    public void refuel(String fuelType) {\n        System.out.println(\"Filling gas tank with \" + fuelType);\n    }\n}\n\npublic class ElectricityFuelService implements FuelService {\n    @Override\n    public void refuel(String fuelType) {\n        System.out.println(\"Charging battery with \" + fuelType);\n    }\n}\n\npublic class Vehicle {\n    private FuelService fuelService;\n    \n    public Vehicle(FuelService fuelService) {\n        this.fuelService = fuelService;\n    }\n    \n    public void refuel() {\n        fuelService.refuel(\"gasoline\"); // or \"electricity\" depending on the service provided\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "FuelService"
                  ],
                  "classes": [
                    [
                      "GasolineFuelService",
                      "FuelService"
                    ],
                    [
                      "ElectricityFuelService",
                      "FuelService"
                    ],
                    [
                      "Vehicle",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 6
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "high",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "@Override",
                        "@Override"
                      ]
                    },
                    {
                      "pattern": "interface_implementation",
                      "matches": [
                        "implements FuelService",
                        "implements FuelService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 2810,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1964,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1990,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2044,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1941,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1436,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1910,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1531,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2328,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1586,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1235,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1173,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1595,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1428,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1256,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1816,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1754,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2159,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1441,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1900,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1688,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1385,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1826,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1536,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 15,
            "fail": 33,
            "error": 0,
            "accuracy": 0.3125
          }
        }
      },
      "overall_stats": {
        "total_pass": 15,
        "total_fail": 33,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "lsp--codellama70b-temp0-latest--smell": {
    "smell": {
      "model": "lsp--codellama70b-temp0-latest--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "lsp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 831,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 953,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1484,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1027,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 456,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 285,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 793,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 836,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2480,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1250,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 25,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 901,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1381,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 218,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 830,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1168,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 468,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 520,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 515,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 484,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2218,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 169,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 872,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1484,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 960,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 547,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 962,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 934,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2128,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 126,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1336,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1070,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2111,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 720,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2477,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1575,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 388,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 467,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 720,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1189,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 507,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 410,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1555,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 812,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1225,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2866,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1721,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 906,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 0,
            "fail": 48,
            "error": 0,
            "accuracy": 0.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 0,
        "total_fail": 48,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "lsp--qwen2.5-coder32b-temp0-latest--ensemble": {
    "ensemble": {
      "model": "lsp--qwen2.5-coder32b-temp0-latest--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "lsp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1713,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1712,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1673,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2071,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1840,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2024,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1652,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1903,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1696,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1716,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2028,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2278,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1888,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2268,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1819,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1820,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2092,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1730,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1563,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2121,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2367,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2235,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2313,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2375,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1671,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1525,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1644,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1687,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1915,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1741,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1979,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2048,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1853,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2082,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2084,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2098,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1851,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1879,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1610,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1764,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2162,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2074,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1728,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1950,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2220,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2109,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1998,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2173,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 20,
            "fail": 28,
            "error": 0,
            "accuracy": 0.4166666666666667
          }
        }
      },
      "overall_stats": {
        "total_pass": 20,
        "total_fail": 28,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "lsp--deepseek33b-temp0-latest--default": {
    "default": {
      "model": "lsp--deepseek33b-temp0-latest--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "lsp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "public abstract class FlyingBird extends Bird {\n    public abstract void fly();\n}\n\npublic class Sparrow extends FlyingBird {\n     @Override\n     public void fly()  {\n         System.out.println(\"Sparrow flying fast!\");\n     }\n}\n\npublic class NonFlyingBird extends Bird {\n    // No implementation for fly method here\n}\n\npublic class Penguin extends NonFlyingBird {\n    // No need to override the fly method as it's not applicable for penguins.\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "FlyingBird",
                      ""
                    ],
                    [
                      "Sparrow",
                      ""
                    ],
                    [
                      "NonFlyingBird",
                      ""
                    ],
                    [
                      "Penguin",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "proper_inheritance",
                      "matches": [
                        "class FlyingBird extends Bird",
                        "class Sparrow extends FlyingBird",
                        "class NonFlyingBird extends Bird",
                        "class Penguin extends NonFlyingBird"
                      ]
                    },
                    {
                      "pattern": "override_behavior",
                      "matches": [
                        "@Override",
                        "override "
                      ]
                    }
                  ]
                }
              },
              "response_length": 1086,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 341,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 542,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 337,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 309,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "from abc import ABC, abstractmethod\n\nclass Bird(ABC):\n    def __init__(self, species, wing_span):\n        self.species = species\n        self.wing_span = wing_span\n    \n    @abstractmethod\n    def fly(self):\n        pass\n    \n    @abstractmethod\n    def get_flight_speed(self):\n        pass\n    \n    def get_species(self):\n        return self.species\n    \n    def get_wing_span(self):\n        return self.wing_span\n\nclass Eagle(Bird):\n    def __init__(self, wing_span):\n        super().__init__(\"Eagle\", wing_span)\n    \n    def fly(self):\n        print(f\"Eagle soaring at high altitude with {self.wing_span}m wingspan\")\n    \n    def get_flight_speed(self):\n        return 80.0 + (self.wing_span * 10)\n\nclass Hummingbird(Bird):\n    def __init__(self, wing_span):\n        super().__init__(\"Hummingbird\", wing_span)\n    \n    def fly(self):\n        print(\"Hummingbird hovering with rapid wing beats\")\n    \n    def get_flight_speed(self):\n        return 50.0\n\nclass Ostrich(Bird):\n    def __init__(self, wing_span, running_speed):\n        super().__init__(\"Ostrich\", wing_span)\n        self.running_speed = running_speed\n    \n    def fly(self):\n        raise NotImplementedError(\"Ostriches are flightless birds!\")\n    \n    def get_flight_speed(self):\n        return 0.0\n    \n    def run(self):\n        print(f\"Ostrich running at {self.running_speed} km/h\")\n\nclass Penguin(Bird):\n    def __init__(self, wing_span):\n        super().__init__(\"Penguin\", wing_span)\n    \n    def fly(self):\n        raise NotImplementedError(\"Penguins are flightless birds!\")\n    \n    def get_flight_speed(self):\n        return 0.0\n    \nclass FlightSimulator:\n    def simulate_flight(self, bird, distance):\n        print(f\"Starting flight simulation for {bird.get_species()}\")\n        bird.fly()\n        speed = bird.get_flight_speed()\n        time = distance / speed if speed > 0 else 0\n        print(f\"Flight time: {time} hours for {distance} km\")\n    \n    def compare_flight_capabilities(self, birds, test_distance):\n        for bird in birds:\n            self.simulate_flight(bird, test_distance)\n            print(\"---\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Bird",
                    "Eagle",
                    "Hummingbird",
                    "Ostrich",
                    "Penguin",
                    "FlightSimulator"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 2877,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 423,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 454,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2942,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2738,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1940,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2078,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 327,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 417,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 326,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 342,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public abstract class PaymentProcessor {\n    public abstract void processPayment(double amount);\n    public abstract boolean validatePayment(double amount);\n}\n\npublic interface PaymentMethod {\n    String getPaymentMethod();\n}\n\npublic class CreditCardProcessor implements PaymentMethod, PaymentProcessor {\n    // ...\n}\n\npublic class BankTransferProcessor implements PaymentMethod, PaymentProcessor {\n    // ...\n}\n\npublic class DigitalWalletProcessor implements PaymentMethod, PaymentProcessor {\n    // ...\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "PaymentMethod"
                  ],
                  "classes": [
                    [
                      "PaymentProcessor",
                      ""
                    ],
                    [
                      "CreditCardProcessor",
                      "PaymentMethod"
                    ],
                    [
                      "BankTransferProcessor",
                      "PaymentMethod"
                    ],
                    [
                      "DigitalWalletProcessor",
                      "PaymentMethod"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class PaymentProcessor {\n    public abstract void processPayment(double amount);\n    public abstract boolean validatePayment(double amount);\n}\n\npublic interface PaymentMethod {\n    String getPaymentMethod();\n}\n\npublic ",
                        "class CreditCardProcessor implements PaymentMethod, PaymentProcessor {\n    // ...\n}\n\npublic ",
                        "class BankTransferProcessor implements PaymentMethod, PaymentProcessor {\n    // ...\n}\n\npublic ",
                        "class DigitalWalletProcessor implements PaymentMethod, PaymentProcessor {\n    // ...\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1453,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1448,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 329,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 594,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1797,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3437,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2395,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1743,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 422,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 784,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 294,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 307,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 402,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 400,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 443,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 499,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1375,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1632,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1530,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1545,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public interface Printable {\n    void print();\n}\n\npublic interface Savable {\n    void save();\n}\n\npublic abstract class Document implements Printable, Savable {\n    protected String content;\n    \n    public Document(String content)  {\n        this.content = content;\n    }\n}\n\npublic class PDFDocument extends Document {\n    public PDFDocument(String content) {\n        super(content);\n    }\n    \n    public void save() {\n        System.out.println(\"Saving PDF document\");\n    }\n    \n    public void print() {\n        System.out.println(\"Printing PDF document\");\n    }\n}\n\npublic class ReadOnlyDocument extends Document {\n    public ReadOnlyDocument(String content) {\n        super(content);\n    }\n    \n    public void save() {\n        throw new UnsupportedOperationException(\"Cannot save read-only document\");\n    }\n    \n    public void print() {\n        System.out.println(\"Printing read-only document\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "Printable",
                    "Savable"
                  ],
                  "classes": [
                    [
                      "Document",
                      "Printable"
                    ],
                    [
                      "PDFDocument",
                      ""
                    ],
                    [
                      "ReadOnlyDocument",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 6
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_implementation",
                      "matches": [
                        "implements Printable"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1590,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 716,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "abstract class Document(protected val content: String) {\n    abstract fun print()\n}\n\ninterface SaveableDocument {\n    fun save()\n}\n\nclass PDFDocument(content: String) : Document(content), SaveableDocument {\n    override fun save() {\n        println(\"Saving PDF document\")\n    }\n    \n    override fun print() {\n        println(\"Printing PDF document\")\n    }\n}\n\nclass ReadOnlyDocument(content: String) : Document(content) {\n    override fun print() {\n        println(\"Printing read-only document\")\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "SaveableDocument"
                  ],
                  "classes": [
                    [
                      "Document",
                      ""
                    ],
                    [
                      "PDFDocument",
                      ""
                    ],
                    [
                      "ReadOnlyDocument",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "override ",
                        "override ",
                        "override "
                      ]
                    },
                    {
                      "pattern": "abstract_methods",
                      "matches": [
                        "abstract class Document(",
                        "abstract fun print("
                      ]
                    }
                  ]
                }
              },
              "response_length": 1105,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 457,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 949,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2968,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 728,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2673,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1013,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1255,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 994,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1285,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 4,
            "fail": 44,
            "error": 0,
            "accuracy": 0.08333333333333333
          }
        }
      },
      "overall_stats": {
        "total_pass": 4,
        "total_fail": 44,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "lsp--qwen2.5-coder32b-temp0-latest--default": {
    "default": {
      "model": "lsp--qwen2.5-coder32b-temp0-latest--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "lsp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "public interface Flyable {\n    void fly();\n}\n\npublic class Bird {\n    // Common bird behaviors\n}\n\npublic class Sparrow extends Bird implements Flyable {\n    @Override\n    public void fly() {\n        System.out.println(\"Sparrow flying fast!\");\n    }\n}\n\npublic class Penguin extends Bird {\n    // Penguins do not implement the Flyable interface, so they don't have a fly method.\n}\n\npublic class BirdWatcher {\n    public void watchBird(Bird bird) {\n        if (bird instanceof Flyable) {\n            ((Flyable) bird).fly();\n        } else {\n            System.out.println(\"This bird cannot fly.\");\n        }\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "Flyable"
                  ],
                  "classes": [
                    [
                      "Bird",
                      ""
                    ],
                    [
                      "Sparrow",
                      ""
                    ],
                    [
                      "Penguin",
                      ""
                    ],
                    [
                      "BirdWatcher",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "proper_inheritance",
                      "matches": [
                        "class Sparrow extends Bird",
                        "class Penguin extends Bird"
                      ]
                    },
                    {
                      "pattern": "override_behavior",
                      "matches": [
                        "@Override"
                      ]
                    }
                  ]
                }
              },
              "response_length": 2040,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "class Bird:\n    def make_sound(self):\n        print(\"Some generic bird sound!\")\n\nclass FlyingBird(Bird):\n    def fly(self):\n        print(\"Flying high!\")\n\nclass Sparrow(FlyingBird):\n    def fly(self):\n        print(\"Sparrow flying fast!\")\n    \n    def make_sound(self):\n        print(\"Chirp chirp!\")\n\nclass Penguin(Bird):\n    def swim(self):\n        print(\"Penguin swimming fast!\")\n    \n    def make_sound(self):\n        print(\"Hoot hoot!\")\n\nclass BirdWatcher:\n    def watch_bird(self, bird):\n        bird.make_sound()\n        if isinstance(bird, FlyingBird):\n            bird.fly()"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Bird",
                    "FlyingBird",
                    "Sparrow",
                    "Penguin",
                    "BirdWatcher"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 1792,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "open class Bird {\n    // Common bird behaviors can be defined here if any\n}\n\ninterface FlyingBird {\n    fun fly()\n}\n\nclass Sparrow : Bird(), FlyingBird {\n    override fun fly() {\n        println(\"Sparrow flying fast!\")\n    }\n}\n\nclass Penguin : Bird() {\n    // Penguins do not implement the FlyingBird interface, so they don't have a fly method.\n}\n\nclass BirdWatcher {\n    fun watchFlyingBird(bird: FlyingBird) {\n        bird.fly()\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "FlyingBird"
                  ],
                  "classes": [
                    [
                      "Bird",
                      ""
                    ],
                    [
                      "Sparrow",
                      "Bird"
                    ],
                    [
                      "Penguin",
                      "Bird"
                    ],
                    [
                      "BirdWatcher",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "override_behavior",
                      "matches": [
                        "override "
                      ]
                    }
                  ]
                }
              },
              "response_length": 1447,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "public interface IFlyable\n{\n    void Fly();\n}\n\npublic class Bird { }\n\npublic class Sparrow : Bird, IFlyable\n{\n    public void Fly()\n    {\n        Console.WriteLine(\"Sparrow flying fast!\");\n    }\n}\n\npublic class Penguin : Bird\n{\n    // No need to implement the Fly method since Penguins cannot fly.\n}\n\npublic class BirdWatcher\n{\n    public void WatchBird(Bird bird)\n    {\n        if (bird is IFlyable flyableBird)\n        {\n            flyableBird.Fly();\n        }\n        else\n        {\n            Console.WriteLine(\"This bird does not fly.\");\n        }\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [
                    "Flyable"
                  ],
                  "classes": [
                    [
                      "Bird",
                      ""
                    ],
                    [
                      "Sparrow",
                      "Bird"
                    ],
                    [
                      "Penguin",
                      "Bird"
                    ],
                    [
                      "BirdWatcher",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 1507,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3845,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2068,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "fun simulateFlight(bird: Bird, distance: Double) {\n    println(\"Starting flight simulation for ${bird.getSpecies()}\")\n    bird.fly()\n    val speed = bird.getFlightSpeed()\n    val time = if (speed > 0) distance / speed else 0.0\n    println(\"Flight time: $time hours for $distance km\")\n}",
                  "abstract class Bird(val species: String) {\n    fun getSpecies(): String = species\n}\n\ninterface FlyingBird : Bird {\n    val wingSpan: Double\n    fun fly()\n    fun getFlightSpeed(): Double\n}\n\nclass Eagle(wingSpan: Double) : FlyingBird {\n    override val wingSpan: Double = wingSpan\n\n    override fun fly() {\n        println(\"Eagle soaring at high altitude with ${wingSpan}m wingspan\")\n    }\n\n    override fun getFlightSpeed(): Double {\n        return 80.0 + (wingSpan * 10)\n    }\n}\n\nclass Hummingbird(wingSpan: Double) : FlyingBird {\n    override val wingSpan: Double = wingSpan\n\n    override fun fly() {\n        println(\"Hummingbird hovering with rapid wing beats\")\n    }\n\n    override fun getFlightSpeed(): Double {\n        return 50.0\n    }\n}\n\nclass Ostrich(private val runningSpeed: Double) : Bird(\"Ostrich\") {\n    fun run() {\n        println(\"Ostrich running at $runningSpeed km/h\")\n    }\n}\n\nclass FlightSimulator {\n    fun simulateFlight(bird: FlyingBird, distance: Double) {\n        println(\"Starting flight simulation for ${bird.getSpecies()}\")\n        bird.fly()\n        val speed = bird.getFlightSpeed()\n        val time = if (speed > 0) distance / speed else 0.0\n        println(\"Flight time: $time hours for $distance km\")\n    }\n\n    fun compareFlightCapabilities(birds: Array<FlyingBird>, testDistance: Double) {\n        birds.forEach { bird ->\n            simulateFlight(bird, testDistance)\n            println(\"---\")\n        }\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [],
                  "has_dependency_injection": false,
                  "language_quality_score": 0
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 3405,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3241,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1571,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3290,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2061,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1601,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1600,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2120,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1277,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2074,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1068,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1328,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2346,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1718,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2903,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1653,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2624,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2510,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public interface FuelService {\n    void refuel(String fuelType);\n}\n\npublic class GasolineFuelService implements FuelService {\n    @Override\n    public void refuel(String fuelType) {\n        System.out.println(\"Filling gas tank with \" + fuelType);\n    }\n}\n\npublic class ElectricityFuelService implements FuelService {\n    @Override\n    public void refuel(String fuelType) {\n        System.out.println(\"Charging battery with \" + fuelType);\n    }\n}\n\npublic class Vehicle {\n    private final FuelService fuelService;\n    \n    // Constructor injection to allow flexibility in choosing the type of fuel service.\n    public Vehicle(FuelService fuelService) {\n        this.fuelService = fuelService;\n    }\n    \n    public void refuel() {\n        fuelService.refuel(fuelService.getClass().getSimpleName().replace(\"FuelService\", \"\").toLowerCase());\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "FuelService"
                  ],
                  "classes": [
                    [
                      "GasolineFuelService",
                      "FuelService"
                    ],
                    [
                      "ElectricityFuelService",
                      "FuelService"
                    ],
                    [
                      "Vehicle",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 6
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class GasolineFuelService implements FuelService {\n    @Override\n    public void refuel(String fuelType) {\n        System.out.println(\"Filling gas tank with \" + fuelType);\n    }\n}\n\npublic ",
                        "class ElectricityFuelService implements FuelService {\n    @Override\n    public void refuel(String fuelType) {\n        System.out.println(\"Charging battery with \" + fuelType);\n    }\n}\n\npublic ",
                        "class Vehicle {\n    private final FuelService fuelService;\n    \n    // Constructor injection to allow flexibility in choosing the type of fuel service.\n    public Vehicle(FuelService fuelService) {\n        this.fuelService = fuelService;\n    }\n    \n    public void refuel() {\n        fuelService.refuel(fuelService.get"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public Vehicle(FuelService fuelService)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class GasolineFuelService",
                        "class ElectricityFuelService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1741,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 938,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "interface PaymentProcessor {\n    fun processPayment(amount: Double): Boolean\n}\n\nclass CreditCardProcessor : PaymentProcessor {\n    override fun processPayment(amount: Double): Boolean {\n        println(\"Processing credit card payment of $$amount\")\n        return true\n    }\n}\n\nclass PayPalProcessor : PaymentProcessor {\n    override fun processPayment(amount: Double): Boolean {\n        println(\"Processing PayPal payment of $$amount\")\n        return true\n    }\n}\n\nclass PaymentMethodSelector {\n    private val processors = mapOf(\n        \"credit_card\" to CreditCardProcessor(),\n        \"paypal\" to PayPalProcessor()\n    )\n\n    fun getProcessor(paymentMethod: String): PaymentProcessor? {\n        return processors[paymentMethod]\n    }\n}\n\nclass OrderService(private val paymentMethodSelector: PaymentMethodSelector) {\n    fun processOrder(amount: Double, paymentMethod: String): Boolean {\n        val processor = paymentMethodSelector.getProcessor(paymentMethod)\n        return processor?.processPayment(amount) ?: false\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "PaymentProcessor"
                  ],
                  "classes": [
                    [
                      "CreditCardProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "PayPalProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "PaymentMethodSelector",
                      ""
                    ],
                    [
                      "OrderService",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class CreditCardProcessor : PaymentProcessor {\n    override fun processPayment(amount: Double): Boolean {\n        println(\"Processing credit card payment of $$amount\")\n        return true\n    }\n}\n\n",
                        "class PayPalProcessor : PaymentProcessor {\n    override fun processPayment(amount: Double): Boolean {\n        println(\"Processing PayPal payment of $$amount\")\n        return true\n    }\n}\n\n",
                        "class PaymentMethodSelector {\n    private val processors = mapOf(\n        \"credit_card\" to CreditCardProcessor(),\n        \"paypal\" to PayPalProcessor()\n    )\n\n    fun getProcessor(paymentMethod: String): PaymentProcessor? {\n        return processors[paymentMethod]\n    }\n}\n\n",
                        "class OrderService(private val paymentMethodSelector: PaymentMethodSelector) {\n    fun processOrder(amount: Double, paymentMethod: String): Boolean {\n        val processor = paymentMethodSelector.getProcessor(paymentMethod)\n        return processor?.processPayment(amount) ?: false\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class OrderService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 2042,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "csharp": [
                  "public class WelcomeEmailSender\n{\n    private readonly IEmailService _emailService;\n\n    public WelcomeEmailSender(IEmailService emailService)\n    {\n        _emailService = emailService;\n    }\n\n    public void Send(string userEmail)\n    {\n        _emailService.SendEmail(userEmail, \"Welcome\", \"Welcome to our platform!\");\n    }\n}\n\npublic class PromotionalEmailSender\n{\n    private readonly IEmailService _emailService;\n\n    public PromotionalEmailSender(IEmailService emailService)\n    {\n        _emailService = emailService;\n    }\n\n    public void Send(string userEmail)\n    {\n        _emailService.SendEmail(userEmail, \"Special Offer\", \"Check out our latest deals!\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [],
                  "classes": [
                    [
                      "WelcomeEmailSender",
                      ""
                    ],
                    [
                      "PromotionalEmailSender",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class WelcomeEmailSender\n{\n    private readonly IEmailService _emailService;\n\n    public WelcomeEmailSender(IEmailService emailService)\n    {\n        _emailService = emailService;\n    }\n\n    public void Send(string userEmail)\n    {\n        _emailService.SendEmail(userEmail, \"Welcome\", \"Welcome to our platform!\");\n    }\n}\n\npublic ",
                        "class PromotionalEmailSender\n{\n    private readonly IEmailService _emailService;\n\n    public PromotionalEmailSender(IEmailService emailService)\n    {\n        _emailService = emailService;\n    }\n\n    public void Send(string userEmail)\n    {\n        _emailService.SendEmail(userEmail, \"Special Offer\", \"Check out our latest deals!\");\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public WelcomeEmailSender(IEmailService emailService)",
                        "public PromotionalEmailSender(IEmailService emailService)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1458,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public class OrderValidationService {\n    private Logger logger;\n\n    public OrderValidationService(Logger logger) {\n        this.logger = logger;\n    }\n\n    public void validateOrder(String orderId, double amount) throws Exception {\n        if (amount <= 0) {\n            throw new Exception(\"Invalid order amount\");\n        }\n        logger.log(\"DEBUG\", \"Order validation passed for: \" + orderId);\n    }\n}\n\npublic class PaymentProcessingService {\n    private Logger logger;\n\n    public PaymentProcessingService(Logger logger) {\n        this.logger = logger;\n    }\n\n    public void chargePayment(double amount) throws Exception {\n        logger.log(\"INFO\", \"Attempting to charge payment: $\" + amount);\n        if (amount > 10000) {\n            throw new Exception(\"Payment amount exceeds limit\");\n        }\n    }\n}\n\npublic class InventoryManagementService {\n    private Logger logger;\n\n    public InventoryManagementService(Logger logger) {\n        this.logger = logger;\n    }\n\n    public void updateInventory(String orderId) {\n        logger.log(\"INFO\", \"Updating inventory for order: \" + orderId);\n    }\n}\n\npublic class OrderProcessor {\n    private OrderValidationService orderValidationService;\n    private PaymentProcessingService paymentProcessingService;\n    private InventoryManagementService inventoryManagementService;\n    private Logger logger;\n\n    public OrderProcessor(Logger logger) {\n        this.logger = logger;\n        this.orderValidationService = new OrderValidationService(logger);\n        this.paymentProcessingService = new PaymentProcessingService(logger);\n        this.inventoryManagementService = new InventoryManagementService(logger);\n    }\n\n    public void processOrder(String orderId, double amount) {\n        try {\n            logger.log(\"INFO\", \"Processing order: \" + orderId + \" for amount: $\" + amount);\n\n            orderValidationService.validateOrder(orderId, amount);\n\n            logger.log(\"INFO\", \"Order validation successful for: \" + orderId);\n\n            paymentProcessingService.chargePayment(amount);\n\n            logger.log(\"INFO\", \"Payment processed successfully for order: \" + orderId);\n\n            inventoryManagementService.updateInventory(orderId);\n\n            logger.log(\"SUCCESS\", \"Order completed: \" + orderId);\n        } catch (Exception e) {\n            logger.logError(\"Order processing failed for: \" + orderId, e);\n            throw e;\n        }\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "OrderValidationService",
                      ""
                    ],
                    [
                      "PaymentProcessingService",
                      ""
                    ],
                    [
                      "InventoryManagementService",
                      ""
                    ],
                    [
                      "OrderProcessor",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class OrderValidationService {\n    private Logger logger;\n\n    public OrderValidationService(Logger logger) {\n        this.logger = logger;\n    }\n\n    public void validateOrder(String orderId, double amount) throws Exception {\n        if (amount <= 0) {\n            throw new Exception(\"Invalid order amount\");\n        }\n        logger.log(\"DEBUG\", \"Order validation passed for: \" + orderId);\n    }\n}\n\npublic ",
                        "class PaymentProcessingService {\n    private Logger logger;\n\n    public PaymentProcessingService(Logger logger) {\n        this.logger = logger;\n    }\n\n    public void chargePayment(double amount) throws Exception {\n        logger.log(\"INFO\", \"Attempting to charge payment: $\" + amount);\n        if (amount > 10000) {\n            throw new Exception(\"Payment amount exceeds limit\");\n        }\n    }\n}\n\npublic ",
                        "class InventoryManagementService {\n    private Logger logger;\n\n    public InventoryManagementService(Logger logger) {\n        this.logger = logger;\n    }\n\n    public void updateInventory(String orderId) {\n        logger.log(\"INFO\", \"Updating inventory for order: \" + orderId);\n    }\n}\n\npublic ",
                        "class OrderProcessor {\n    private OrderValidationService orderValidationService;\n    private PaymentProcessingService paymentProcessingService;\n    private InventoryManagementService inventoryManagementService;\n    private Logger logger;\n\n    public OrderProcessor(Logger logger) {\n        this.logger = logger;\n        this.orderValidationService = new OrderValidationService(logger);\n        this.paymentProcessingService = new PaymentProcessingService(logger);\n        this.inventoryManagementService = new InventoryManagementService(logger);\n    }\n\n    public void processOrder(String orderId, double amount) {\n        try {\n            logger.log(\"INFO\", \"Processing order: \" + orderId + \" for amount: $\" + amount);\n\n            orderValidationService.validateOrder(orderId, amount);\n\n            logger.log(\"INFO\", \"Order validation successful for: \" + orderId);\n\n            paymentProcessingService.chargePayment(amount);\n\n            logger.log(\"INFO\", \"Payment processed successfully for order: \" + orderId);\n\n            inventoryManagementService.updateInventory(orderId);\n\n            logger.log(\"SUCCESS\", \"Order completed: \" + orderId);\n        } catch (Exception e) {\n            logger.logError(\"Order processing failed for: \" + orderId, e);\n            throw e;\n        }\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public OrderValidationService(Logger logger)",
                        "public PaymentProcessingService(Logger logger)",
                        "public InventoryManagementService(Logger logger)",
                        "public OrderProcessor(Logger logger)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class OrderValidationService",
                        "class PaymentProcessingService",
                        "class InventoryManagementService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 3644,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2241,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2178,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2179,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2017,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4060,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3984,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 6864,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1480,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1306,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1538,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1887,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2220,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "from abc import ABC, abstractmethod\nimport re\n\nclass Document(ABC):\n    def __init__(self, content, format_type):\n        self.content = content\n        self.format = format_type\n    \n    @abstractmethod\n    def save(self):\n        pass\n    \n    @abstractmethod\n    def print_doc(self):\n        pass\n    \n    @abstractmethod\n    def export(self, target_format):\n        pass\n    \n    @abstractmethod\n    def compress(self):\n        pass\n    \n    def get_content(self):\n        return self.content\n    \n    def get_format(self):\n        return self.format\n\nclass DocumentManager:\n    def __init__(self, document: Document):\n        self.document = document\n    \n    def save_document(self):\n        self.document.save()\n    \n    def print_document(self):\n        self.document.print_doc()\n    \n    def export_document(self, target_format):\n        self.document.export(target_format)\n    \n    def compress_document(self):\n        self.document.compress()\n\nclass WordDocument(Document):\n    def __init__(self, content, author):\n        super().__init__(content, \"DOCX\")\n        self.author = author\n        self.word_count = len(content.split())\n    \n    def save(self):\n        print(f\"Saving Word document with {self.word_count} words\")\n    \n    def print_doc(self):\n        print(f\"Printing Word document by {self.author}\")\n    \n    def export(self, target_format):\n        print(f\"Exporting Word document to {target_format}\")\n    \n    def compress(self):\n        print(\"Compressing Word document\")\n        self.content = re.sub(r'\\s+', ' ', self.content)\n\nclass SecureDocument(Document):\n    def __init__(self, content, password):\n        super().__init__(content, \"SECURE\")\n        self.password = password\n        self.is_locked = True\n    \n    def save(self):\n        if self.is_locked:\n            raise PermissionError(\"Document is locked and cannot be saved\")\n        print(\"Saving secure document\")\n    \n    def print_doc(self):\n        if self.is_locked:\n            raise PermissionError(\"Document is locked and cannot be printed\")\n        print(\"Printing secure document\")\n    \n    def export(self, target_format):\n        raise NotImplementedError(\"Secure documents cannot be exported for security reasons\")\n    \n    def compress(self):\n        print(\"Secure documents use built-in compression\")\n    \n    def unlock(self, input_password):\n        if self.password == input_password:\n            self.is_locked = False\n            print(\"Document unlocked\")\n        else:\n            raise PermissionError(\"Invalid password\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Document",
                    "DocumentManager",
                    "WordDocument",
                    "SecureDocument"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Document(ABC):\n    def __init__(self, content, format_type):\n        self.content = content\n        self.format = format_type\n    \n    @abstractmethod\n    def save(self):\n        pass\n    \n    @abstractmethod\n    def print_doc(self):\n        pass\n    \n    @abstractmethod\n    def export(self, target_format):\n        pass\n    \n    @abstractmethod\n    def compress(self):\n        pass\n    \n    def get_content(self):\n        return self.content\n    \n    def get_format(self):\n        return self.format\n\n",
                        "class DocumentManager:\n    def __init__(self, document: Document):\n        self.document = document\n    \n    def save_document(self):\n        self.document.save()\n    \n    def print_document(self):\n        self.document.print_doc()\n    \n    def export_document(self, target_format):\n        self.document.export(target_format)\n    \n    def compress_document(self):\n        self.document.compress()\n\n",
                        "class WordDocument(Document):\n    def __init__(self, content, author):\n        super().__init__(content, \"DOCX\")\n        self.author = author\n        self.word_count = len(content.split())\n    \n    def save(self):\n        print(f\"Saving Word document with {self.word_count} words\")\n    \n    def print_doc(self):\n        print(f\"Printing Word document by {self.author}\")\n    \n    def export(self, target_format):\n        print(f\"Exporting Word document to {target_format}\")\n    \n    def compress(self):\n        print(\"Compressing Word document\")\n        self.content = re.sub(r'\\s+', ' ', self.content)\n\n",
                        "class SecureDocument(Document):\n    def __init__(self, content, password):\n        super().__init__(content, \"SECURE\")\n        self.password = password\n        self.is_locked = True\n    \n    def save(self):\n        if self.is_locked:\n            raise PermissionError(\"Document is locked and cannot be saved\")\n        print(\"Saving secure document\")\n    \n    def print_doc(self):\n        if self.is_locked:\n            raise PermissionError(\"Document is locked and cannot be printed\")\n        print(\"Printing secure document\")\n    \n    def export(self, target_format):\n        raise NotImplementedError(\"Secure documents cannot be exported for security reasons\")\n    \n    def compress(self):\n        print(\"Secure documents use built-in compression\")\n    \n    def unlock(self, input_password):\n        if self.password == input_password:\n            self.is_locked = False\n            print(\"Document unlocked\")\n        else:\n            raise PermissionError(\"Invalid password\")"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, content, format_type)",
                        "def save(self)",
                        "def print_doc(self)",
                        "def export(self, target_format)",
                        "def compress(self)",
                        "def get_content(self)",
                        "def get_format(self)",
                        "def __init__(self, document: Document)",
                        "def save_document(self)",
                        "def print_document(self)",
                        "def export_document(self, target_format)",
                        "def compress_document(self)",
                        "def __init__(self, content, author)",
                        "def save(self)",
                        "def print_doc(self)",
                        "def export(self, target_format)",
                        "def compress(self)",
                        "def __init__(self, content, password)",
                        "def save(self)",
                        "def print_doc(self)",
                        "def export(self, target_format)",
                        "def compress(self)",
                        "def unlock(self, input_password)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class DocumentManager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 3769,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2026,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2050,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1804,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1568,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1937,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1486,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 6,
            "fail": 42,
            "error": 0,
            "accuracy": 0.125
          }
        }
      },
      "overall_stats": {
        "total_pass": 6,
        "total_fail": 42,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "lsp--gpt-4o-mini--example": {
    "example": {
      "model": "lsp--gpt-4o-mini--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "lsp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 257,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 237,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 235,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 240,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 236,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 260,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 254,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 230,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 278,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 205,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 328,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 278,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 324,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 246,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 354,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 354,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 323,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 270,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 442,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 458,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 330,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 283,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 273,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 340,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "DIP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 278,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "DIP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 147,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 264,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "DIP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 277,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 259,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 350,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 236,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 247,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 405,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 223,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 276,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 349,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 208,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 206,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 208,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 208,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 208,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 217,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 316,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 256,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 265,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 305,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 299,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 267,
              "model": "gpt-4o-mini",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 30,
            "fail": 18,
            "error": 0,
            "accuracy": 0.625
          }
        }
      },
      "overall_stats": {
        "total_pass": 30,
        "total_fail": 18,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "lsp--deepseek33b-temp0-latest--ensemble": {
    "ensemble": {
      "model": "lsp--deepseek33b-temp0-latest--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "lsp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1424,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1316,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1144,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1372,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1768,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1347,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1940,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1454,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 758,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1771,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1693,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1643,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1567,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1117,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1638,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1633,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2180,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1399,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1822,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1915,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1774,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1344,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1362,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1420,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1449,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1476,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1730,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "DIP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1498,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1531,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1470,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2019,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1559,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1597,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1489,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1600,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1927,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1385,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1775,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1914,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1279,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1598,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1707,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1942,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1775,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1536,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1508,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2098,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1667,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 9,
            "fail": 39,
            "error": 0,
            "accuracy": 0.1875
          }
        }
      },
      "overall_stats": {
        "total_pass": 9,
        "total_fail": 39,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "lsp--deepseek33b-temp0-latest--smell": {
    "smell": {
      "model": "lsp--deepseek33b-temp0-latest--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "lsp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 280,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 8,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 362,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1203,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 260,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 357,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 355,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 366,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2942,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3241,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3658,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1233,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 499,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 8,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 261,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 384,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1430,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 677,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 339,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 415,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1793,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3380,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1955,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1899,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 523,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1071,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 719,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 265,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 380,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 723,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 398,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 678,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1375,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1940,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1255,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1664,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 370,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 290,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 818,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 409,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 374,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 458,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 440,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 961,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1013,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 891,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1881,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1285,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 0,
            "fail": 48,
            "error": 0,
            "accuracy": 0.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 0,
        "total_fail": 48,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "lsp--deepseek33b-temp0-latest--example": {
    "example": {
      "model": "lsp--deepseek33b-temp0-latest--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "lsp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 557,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class Flyable:\n    def fly(self):\n        print(\"Flying high!\")\n\nclass Sparrow(Flyable):\n    def fly(self):\n        print(\"Sparrow flying fast!\")\n\nclass Penguin():\n    pass\n\nclass BirdWatcher:\n    def watch_bird(self, bird):\n        if isinstance(bird, Flyable):\n            bird.fly()"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Flyable",
                    "Sparrow",
                    "Penguin",
                    "BirdWatcher"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Flyable:\n    def fly(self):\n        print(\"Flying high!\")\n\n",
                        "class Sparrow(Flyable):\n    def fly(self):\n        print(\"Sparrow flying fast!\")\n\n",
                        "class Penguin():\n    pass\n\n",
                        "class BirdWatcher:\n    def watch_bird(self, bird):\n        if isinstance(bird, Flyable):\n            bird.fly()"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def fly(self)",
                        "def fly(self)",
                        "def watch_bird(self, bird)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 921,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "open class Bird {\n    open fun fly(): String  {\n        return \"Flying high!\"\n     }\n}\n\nclass Sparrow : Bird() {\n    override fun fly(): String  {\n        return \"Sparrow flying fast!\"\n     }\n}\n\nclass Penguin : Bird() {\n    override fun fly(): String  {\n        throw UnsupportedOperationException(\"Penguins cannot fly!\")\n     }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Bird",
                      ""
                    ],
                    [
                      "Sparrow",
                      "Bird"
                    ],
                    [
                      "Penguin",
                      "Bird"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "override_behavior",
                      "matches": [
                        "override ",
                        "override "
                      ]
                    }
                  ]
                }
              },
              "response_length": 539,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 355,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 352,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "from abc import ABC, abstractmethod\n\nclass Bird(ABC):\n    def __init__(self, species, wing_span):\n        self.species = species\n        self.wing_span = wing_span\n    \n    @abstractmethod\n    def fly(self):\n        pass\n    \n    @abstractmethod\n    def get_flight_speed(self):\n        pass\n    \nclass Eagle(Bird):\n    # ... same as before\n\n# ... other bird classes ...\n\nclass FlyingSimulator:\n    def simulate_flight(self, bird, distance):\n        print(f\"Starting flight simulation for {bird.species}\")\n        bird.fly()\n        speed = bird.get_flight_speed()\n        time = distance / speed if speed > 0 else 0\n        print(f\"Flight time: {time} hours for {distance} km\")\n    \n    def compare_flight_capabilities(self, birds, test_distance):\n        for bird in birds:\n            self.simulate_flight(bird, test_distance)\n            print(\"---\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Bird",
                    "Eagle",
                    "FlyingSimulator"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Bird(ABC):\n    def __init__(self, species, wing_span):\n        self.species = species\n        self.wing_span = wing_span\n    \n    @abstractmethod\n    def fly(self):\n        pass\n    \n    @abstractmethod\n    def get_flight_speed(self):\n        pass\n    \n",
                        "class Eagle(Bird):\n    # ... same as before\n\n# ... other bird ",
                        "class FlyingSimulator:\n    def simulate_flight(self, bird, distance):\n        print(f\"Starting flight simulation for {bird.species}\")\n        bird.fly()\n        speed = bird.get_flight_speed()\n        time = distance / speed if speed > 0 else 0\n        print(f\"Flight time: {time} hours for {distance} km\")\n    \n    def compare_flight_capabilities(self, birds, test_distance):\n        for bird in birds:\n            self.simulate_flight(bird, test_distance)\n            print(\"---\")"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, species, wing_span)",
                        "def fly(self)",
                        "def get_flight_speed(self)",
                        "def simulate_flight(self, bird, distance)",
                        "def compare_flight_capabilities(self, birds, test_distance)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1240,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "abstract class FlyingBird(val species: String, val wingSpan: Double) {\n    abstract fun fly()\n    abstract fun getFlightSpeed(): Double\n}\n\nclass Eagle(wingSpan: Double) : FlyingBird(\"Eagle\", wingSpan) {\n    override fun fly() {\n        println(\"Eagle soaring at high altitude with ${wingSpan}m wingspan\")\n    }\n    \n    override fun getFlightSpeed(): Double {\n        return 80.0 + (wingSpan * 10)\n    }\n}\n\nclass Hummingbird(wingSpan: Double) : FlyingBird(\"Hummingbird\", wingSpan) {\n    override fun fly() {\n        println(\"Hummingbird hovering with rapid wing beats\")\n    }\n    \n    override fun getFlightSpeed(): Double {\n        return 50.0\n    }\n}\n\nclass RunningBird(val species: String, private val runningSpeed: Double) {\n    fun run() {\n        println(\"$species running at $runningSpeed km/h\")\n    }\n}\n\nclass Ostrich(wingSpan: Double, runningSpeed: Double) : FlyingBird(\"Ostrich\", wingSpan), RunningBird(species, runningSpeed) {\n    override fun fly() {\n        throw UnsupportedOperationException(\"Ostriches are flightless birds!\")\n    }\n    \n    override fun getFlightSpeed(): Double {\n        return 0.0\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "FlyingBird",
                      ""
                    ],
                    [
                      "Eagle",
                      ""
                    ],
                    [
                      "Hummingbird",
                      ""
                    ],
                    [
                      "RunningBird",
                      ""
                    ],
                    [
                      "Ostrich",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class FlyingBird(val species: String, val wingSpan: Double) {\n    abstract fun fly()\n    abstract fun getFlightSpeed(): Double\n}\n\n",
                        "class Eagle(wingSpan: Double) : FlyingBird(\"Eagle\", wingSpan) {\n    override fun fly() {\n        println(\"Eagle soaring at high altitude with ${wingSpan}m wingspan\")\n    }\n    \n    override fun getFlightSpeed(): Double {\n        return 80.0 + (wingSpan * 10)\n    }\n}\n\n",
                        "class Hummingbird(wingSpan: Double) : FlyingBird(\"Hummingbird\", wingSpan) {\n    override fun fly() {\n        println(\"Hummingbird hovering with rapid wing beats\")\n    }\n    \n    override fun getFlightSpeed(): Double {\n        return 50.0\n    }\n}\n\n",
                        "class RunningBird(val species: String, private val runningSpeed: Double) {\n    fun run() {\n        println(\"$species running at $runningSpeed km/h\")\n    }\n}\n\n",
                        "class Ostrich(wingSpan: Double, runningSpeed: Double) : FlyingBird(\"Ostrich\", wingSpan), RunningBird(species, runningSpeed) {\n    override fun fly() {\n        throw UnsupportedOperationException(\"Ostriches are flightless birds!\")\n    }\n    \n    override fun getFlightSpeed(): Double {\n        return 0.0\n    }\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1437,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 609,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2942,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2738,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1963,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2078,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public abstract class PaymentProcessor {\n    public abstract void processPayment(double amount);\n}\n\npublic class CashProcessor extends PaymentProcessor {\n    @Override\n    public void processPayment(double amount) {\n        if (amount > 1000) {\n            throw new IllegalArgumentException(\"Cash payments over $1000 not allowed\");\n        }\n        System.out.println(\"Processing cash payment of $\" + amount);\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "PaymentProcessor",
                      ""
                    ],
                    [
                      "CashProcessor",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "@Override"
                      ]
                    },
                    {
                      "pattern": "abstract_methods",
                      "matches": [
                        "abstract void processPayment("
                      ]
                    }
                  ]
                }
              },
              "response_length": 1185,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "from abc import ABC, abstractmethod\n\nclass PaymentProcessor(ABC):\n    @abstractmethod\n    def process_payment(self, amount):\n        pass\n\nclass CreditCardProcessor(PaymentProcessor):\n    def process_payment(self, amount):\n        print(f\"Processing credit card payment of ${amount}\")\n\nclass CashProcessor(PaymentProcessor):\n    def process_payment(self, amount):\n        if amount > 1000:\n            raise ValueError(\"Cash payments over $1000 not allowed\")\n        print(f\"Processing cash payment of ${amount}\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "PaymentProcessor",
                    "CreditCardProcessor",
                    "CashProcessor"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 1241,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "open class PaymentProcessor {\n    open fun processPayment(amount: Double) {\n        println(\"Processing payment of $$amount\")\n    }\n}\n\nclass CreditCardProcessor : PaymentProcessor() {\n    override fun processPayment(amount: Double) {\n        println(\"Processing credit card payment of $$amount\")\n    }\n}\n\n// No changes needed for CashProcessor class as it does not violate the OCP principle."
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "PaymentProcessor",
                      ""
                    ],
                    [
                      "CreditCardProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "as",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "override "
                      ]
                    }
                  ]
                }
              },
              "response_length": 746,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "csharp": [
                  "public abstract class PaymentProcessor\n{\n    public abstract void ProcessPayment(double amount);\n}\n\npublic class CreditCardProcessor : PaymentProcessor\n{\n    public override void ProcessPayment(double amount)\n    {\n        Console.WriteLine($\"Processing credit card payment of ${amount}\");\n    }\n}\n\npublic class CashProcessor : PaymentProcessor\n{\n    public override void ProcessPayment(double amount)\n    {\n        if (amount > 1000)\n        {\n            throw new ArgumentException(\"Cash payments over $1000 not allowed\");\n        }\n        Console.WriteLine($\"Processing cash payment of ${amount}\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [],
                  "classes": [
                    [
                      "PaymentProcessor",
                      ""
                    ],
                    [
                      "CreditCardProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "CashProcessor",
                      "PaymentProcessor"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "override ",
                        "override "
                      ]
                    },
                    {
                      "pattern": "abstract_methods",
                      "matches": [
                        "abstract void ProcessPayment("
                      ]
                    }
                  ]
                }
              },
              "response_length": 968,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 677,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 409,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "abstract class PaymentProcessor {\n    abstract suspend fun processPayment(amount: Double)\n    abstract fun validatePayment(amount: Double): Boolean\n    abstract fun getPaymentMethod(): String\n}\n\nclass CreditCardProcessor(private val cardNumber: String, private val expiryDate: String) : PaymentProcessor() {\n    override suspend fun processPayment(amount: Double) {\n        if (!validatePayment(amount)) {\n            throw RuntimeException(\"Invalid credit card payment\")\n        }\n        println(\"Processing credit card payment of $$amount\")\n        delay(2000)\n    }\n    \n    override fun validatePayment(amount: Double): Boolean {\n        return cardNumber.isNotEmpty() && cardNumber.length == 16 && amount > 0\n    }\n    \n    override fun getPaymentMethod(): String = \"Credit Card\"\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "PaymentProcessor",
                      ""
                    ],
                    [
                      "CreditCardProcessor",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "override ",
                        "override ",
                        "override "
                      ]
                    },
                    {
                      "pattern": "abstract_methods",
                      "matches": [
                        "abstract fun validatePayment(",
                        "abstract fun getPaymentMethod("
                      ]
                    }
                  ]
                }
              },
              "response_length": 1515,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 705,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1825,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3380,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2613,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1743,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 643,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 541,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 359,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 665,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 764,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class FuelStation:\n    def refuel(self, vehicle: Vehicle, fuel_type: str, amount: float) -> None:\n        try:\n            vehicle.refuel(fuel_type, amount)\n            print(f\"{vehicle.brand} range: {vehicle.get_remaining_range()} miles\")\n        except Exception as e:\n            print(f\"Failed to refuel {vehicle.brand}: {str(e)}\")",
                  "class FleetManager:\n    def perform_maintenance_refuel(self, fleet: List[Vehicle], standard_fuel: str, standard_amount: float) -> None:\n        print(f\"Starting fleet refueling with {standard_fuel}\")\n        fuel_station = FuelStation()\n        for vehicle in fleet:\n            fuel_station.refuel(vehicle, standard_fuel, standard_amount)"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "FuelStation"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class FuelStation:\n    def refuel(self, vehicle: Vehicle, fuel_type: str, amount: float) -> None:\n        try:\n            vehicle.refuel(fuel_type, amount)\n            print(f\"{vehicle.brand} range: {vehicle.get_remaining_range()} miles\")\n        except Exception as e:\n            print(f\"Failed to refuel {vehicle.brand}: {str(e)}\")"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def refuel(self, vehicle: Vehicle, fuel_type: str, amount: float)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1395,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 564,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 454,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1375,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2368,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1338,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1527,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 401,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 522,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "abstract class Document(protected val content: String) {\n    abstract fun save()\n    abstract fun print()\n}\n\nclass PDFDocument(content: String) : Document(content) {\n    override fun save() {\n        println(\"Saving PDF document\")\n    }\n    \n    override fun print() {\n        println(\"Printing PDF document\")\n    }\n}\n\nclass ReadOnlyDocument(content: String) : Document(content) {\n    override fun save() {\n        throw UnsupportedOperationException(\"Cannot save read-only document\")\n    }\n    \n    override fun print() {\n        println(\"Printing read-only document\")\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Document",
                      ""
                    ],
                    [
                      "PDFDocument",
                      ""
                    ],
                    [
                      "ReadOnlyDocument",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "override ",
                        "override ",
                        "override ",
                        "override "
                      ]
                    },
                    {
                      "pattern": "abstract_methods",
                      "matches": [
                        "abstract class Document(",
                        "abstract fun save(",
                        "abstract fun print("
                      ]
                    }
                  ]
                }
              },
              "response_length": 902,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "csharp": [
                  "public interface ISavable\n{\n    void Save();\n}\n\npublic interface IPrintable\n{\n    void Print();\n}\n\npublic abstract class Document : ISavable, IPrintable\n{\n    protected string content;\n    \n    public Document(string content)\n    {\n        this.content = content;\n    }\n    \n    public abstract void Save();\n    public abstract void Print();\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [
                    "Savable",
                    "Printable"
                  ],
                  "classes": [
                    [
                      "Document",
                      "Savable"
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 6
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Document : ISavable, IPrintable\n{\n    protected string content;\n    \n    public Document(string content)\n    {\n        this.content = content;\n    }\n    \n    public abstract void Save();\n    public abstract void Print();\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public Document(string content)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1034,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 708,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 354,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 716,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 754,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1253,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1635,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 997,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1285,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 2,
            "fail": 46,
            "error": 0,
            "accuracy": 0.041666666666666664
          }
        }
      },
      "overall_stats": {
        "total_pass": 2,
        "total_fail": 46,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "lsp--qwen2.5-coder32b-temp0-latest--smell": {
    "smell": {
      "model": "lsp--qwen2.5-coder32b-temp0-latest--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "lsp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1019,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class UserManager:\n    def __init__(self, database_connection):\n        self.db = database_connection\n\n    def add_user(self, user_data):\n        # Code to add a user to the database\n        pass\n\n    def remove_user(self, user_id):\n        # Code to remove a user from the database\n        pass\n\n    def update_user(self, user_id, new_data):\n        # Code to update user data in the database\n        pass\n\n    def send_welcome_email(self, user_email):\n        # Code to send a welcome email to the user\n        pass\n\n    def calculate_discount(self, user_id):\n        # Code to calculate discount for the user based on their purchase history\n        pass\n\n    def log_user_activity(self, user_id, activity):\n        # Code to log user activity in the system\n        pass"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "UserManager"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class UserManager:\n    def __init__(self, database_connection):\n        self.db = database_connection\n\n    def add_user(self, user_data):\n        # Code to add a user to the database\n        pass\n\n    def remove_user(self, user_id):\n        # Code to remove a user from the database\n        pass\n\n    def update_user(self, user_id, new_data):\n        # Code to update user data in the database\n        pass\n\n    def send_welcome_email(self, user_email):\n        # Code to send a welcome email to the user\n        pass\n\n    def calculate_discount(self, user_id):\n        # Code to calculate discount for the user based on their purchase history\n        pass\n\n    def log_user_activity(self, user_id, activity):\n        # Code to log user activity in the system\n        pass"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, database_connection)",
                        "def add_user(self, user_data)",
                        "def remove_user(self, user_id)",
                        "def update_user(self, user_id, new_data)",
                        "def send_welcome_email(self, user_email)",
                        "def calculate_discount(self, user_id)",
                        "def log_user_activity(self, user_id, activity)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserManager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1048,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "class UserManagement {\n    private val users = mutableListOf<User>()\n\n    fun addUser(user: User) {\n        users.add(user)\n    }\n\n    fun removeUser(user: User) {\n        users.remove(user)\n    }\n\n    fun sendEmailToAllUsers(subject: String, message: String) {\n        for (user in users) {\n            EmailService.sendEmail(user.email, subject, message)\n        }\n    }\n\n    fun calculateTotalActiveUsers(): Int {\n        return users.count { it.isActive }\n    }\n\n    fun saveUserToFile(user: User, filePath: String) {\n        File(filePath).writeText(Gson().toJson(user))\n    }\n\n    fun loadUserFromFile(filePath: String): User? {\n        return Gson().fromJson(File(filePath).readText(), User::class.java)\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "UserManagement",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class UserManagement {\n    private val users = mutableListOf<User>()\n\n    fun addUser(user: User) {\n        users.add(user)\n    }\n\n    fun removeUser(user: User) {\n        users.remove(user)\n    }\n\n    fun sendEmailToAllUsers(subject: String, message: String) {\n        for (user in users) {\n            EmailService.sendEmail(user.email, subject, message)\n        }\n    }\n\n    fun calculateTotalActiveUsers(): Int {\n        return users.count { it.isActive }\n    }\n\n    fun saveUserToFile(user: User, filePath: String) {\n        File(filePath).writeText(Gson().toJson(user))\n    }\n\n    fun loadUserFromFile(filePath: String): User? {\n        return Gson().fromJson(File(filePath).readText(), User::"
                      ]
                    }
                  ]
                }
              },
              "response_length": 839,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1153,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1090,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "LSP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 269,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1388,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1019,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 169,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 169,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 378,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 180,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1160,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class OrderProcessor:\n    def calculate_total(self, order):\n        total = 0\n        for item in order.items:\n            total += item.price * item.quantity\n        return total\n\n    def apply_discount(self, total, discount_code):\n        if discount_code == \"SAVE10\":\n            return total * 0.9\n        elif discount_code == \"SAVE20\":\n            return total * 0.8\n        else:\n            return total\n\n    def save_order_to_db(self, order):\n        # Simulate saving to database\n        print(f\"Order {order.id} saved to database\")\n\n    def send_confirmation_email(self, order):\n        # Simulate sending email\n        print(f\"Confirmation email sent for order {order.id}\")\n\n    def process_payment(self, order, payment_method):\n        if payment_method == \"credit_card\":\n            self.process_credit_card(order)\n        elif payment_method == \"paypal\":\n            self.process_paypal(order)\n\n    def process_credit_card(self, order):\n        # Simulate credit card processing\n        print(f\"Processing credit card for order {order.id}\")\n\n    def process_paypal(self, order):\n        # Simulate PayPal processing\n        print(f\"Processing PayPal for order {order.id}\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "OrderProcessor"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class OrderProcessor:\n    def calculate_total(self, order):\n        total = 0\n        for item in order.items:\n            total += item.price * item.quantity\n        return total\n\n    def apply_discount(self, total, discount_code):\n        if discount_code == \"SAVE10\":\n            return total * 0.9\n        elif discount_code == \"SAVE20\":\n            return total * 0.8\n        else:\n            return total\n\n    def save_order_to_db(self, order):\n        # Simulate saving to database\n        print(f\"Order {order.id} saved to database\")\n\n    def send_confirmation_email(self, order):\n        # Simulate sending email\n        print(f\"Confirmation email sent for order {order.id}\")\n\n    def process_payment(self, order, payment_method):\n        if payment_method == \"credit_card\":\n            self.process_credit_card(order)\n        elif payment_method == \"paypal\":\n            self.process_paypal(order)\n\n    def process_credit_card(self, order):\n        # Simulate credit card processing\n        print(f\"Processing credit card for order {order.id}\")\n\n    def process_paypal(self, order):\n        # Simulate PayPal processing\n        print(f\"Processing PayPal for order {order.id}\")"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def calculate_total(self, order)",
                        "def apply_discount(self, total, discount_code)",
                        "def save_order_to_db(self, order)",
                        "def send_confirmation_email(self, order)",
                        "def process_payment(self, order, payment_method)",
                        "def process_credit_card(self, order)",
                        "def process_paypal(self, order)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1466,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1159,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 899,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1320,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 368,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 601,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 511,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 281,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 450,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 443,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4751,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 362,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class DataHandler:\n    def __init__(self, filename):\n        self.filename = filename\n\n    def read_data(self):\n        with open(self.filename, 'r') as file:\n            return file.read()\n\n    def write_data(self, data):\n        with open(self.filename, 'w') as file:\n            file.write(data)\n\n    def process_data(self, data):\n        # Some complex data processing logic\n        processed_data = data.upper()  # Example transformation\n        return processed_data\n\n    def save_processed_data(self, processed_data):\n        self.write_data(processed_data)"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "DataHandler"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class DataHandler:\n    def __init__(self, filename):\n        self.filename = filename\n\n    def read_data(self):\n        with open(self.filename, 'r') as file:\n            return file.read()\n\n    def write_data(self, data):\n        with open(self.filename, 'w') as file:\n            file.write(data)\n\n    def process_data(self, data):\n        # Some complex data processing logic\n        processed_data = data.upper()  # Example transformation\n        return processed_data\n\n    def save_processed_data(self, processed_data):\n        self.write_data(processed_data)"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, filename)",
                        "def read_data(self)",
                        "def write_data(self, data)",
                        "def process_data(self, data)",
                        "def save_processed_data(self, processed_data)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class DataHandler"
                      ]
                    }
                  ]
                }
              },
              "response_length": 704,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1138,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1059,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 305,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 491,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 525,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 525,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 255,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4060,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3984,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 6864,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 981,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class FileManager:\n    def __init__(self, file_path):\n        self.file_path = file_path\n\n    def read_file(self):\n        with open(self.file_path, 'r') as file:\n            return file.read()\n\n    def write_file(self, content):\n        with open(self.file_path, 'w') as file:\n            file.write(content)\n\n    def delete_file(self):\n        import os\n        os.remove(self.file_path)\n\n    def compress_file(self):\n        import zipfile\n        with zipfile.ZipFile(f\"{self.file_path}.zip\", 'w') as zipf:\n            zipf.write(self.file_path, arcname=self.file_path.split('/')[-1])\n\n    def decompress_file(self):\n        import zipfile\n        with zipfile.ZipFile(f\"{self.file_path}.zip\", 'r') as zipf:\n            zipf.extractall(path='.')\n\n    def encrypt_file(self):\n        from cryptography.fernet import Fernet\n        key = Fernet.generate_key()\n        cipher_suite = Fernet(key)\n        with open(self.file_path, 'rb') as file:\n            file_data = file.read()\n        encrypted_data = cipher_suite.encrypt(file_data)\n        with open(f\"{self.file_path}.enc\", 'wb') as file:\n            file.write(encrypted_data)\n\n    def decrypt_file(self):\n        from cryptography.fernet import Fernet\n        key = Fernet.generate_key()  # In practice, you should use the same key used for encryption\n        cipher_suite = Fernet(key)\n        with open(f\"{self.file_path}.enc\", 'rb') as file:\n            encrypted_data = file.read()\n        decrypted_data = cipher_suite.decrypt(encrypted_data)\n        with open(self.file_path, 'wb') as file:\n            file.write(decrypted_data)\n\n    def backup_file(self):\n        import shutil\n        shutil.copy2(self.file_path, f\"{self.file_path}.bak\")\n\n    def restore_file(self):\n        import shutil\n        shutil.move(f\"{self.file_path}.bak\", self.file_path)"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "FileManager"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class FileManager:\n    def __init__(self, file_path):\n        self.file_path = file_path\n\n    def read_file(self):\n        with open(self.file_path, 'r') as file:\n            return file.read()\n\n    def write_file(self, content):\n        with open(self.file_path, 'w') as file:\n            file.write(content)\n\n    def delete_file(self):\n        import os\n        os.remove(self.file_path)\n\n    def compress_file(self):\n        import zipfile\n        with zipfile.ZipFile(f\"{self.file_path}.zip\", 'w') as zipf:\n            zipf.write(self.file_path, arcname=self.file_path.split('/')[-1])\n\n    def decompress_file(self):\n        import zipfile\n        with zipfile.ZipFile(f\"{self.file_path}.zip\", 'r') as zipf:\n            zipf.extractall(path='.')\n\n    def encrypt_file(self):\n        from cryptography.fernet import Fernet\n        key = Fernet.generate_key()\n        cipher_suite = Fernet(key)\n        with open(self.file_path, 'rb') as file:\n            file_data = file.read()\n        encrypted_data = cipher_suite.encrypt(file_data)\n        with open(f\"{self.file_path}.enc\", 'wb') as file:\n            file.write(encrypted_data)\n\n    def decrypt_file(self):\n        from cryptography.fernet import Fernet\n        key = Fernet.generate_key()  # In practice, you should use the same key used for encryption\n        cipher_suite = Fernet(key)\n        with open(f\"{self.file_path}.enc\", 'rb') as file:\n            encrypted_data = file.read()\n        decrypted_data = cipher_suite.decrypt(encrypted_data)\n        with open(self.file_path, 'wb') as file:\n            file.write(decrypted_data)\n\n    def backup_file(self):\n        import shutil\n        shutil.copy2(self.file_path, f\"{self.file_path}.bak\")\n\n    def restore_file(self):\n        import shutil\n        shutil.move(f\"{self.file_path}.bak\", self.file_path)"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, file_path)",
                        "def read_file(self)",
                        "def write_file(self, content)",
                        "def delete_file(self)",
                        "def compress_file(self)",
                        "def decompress_file(self)",
                        "def encrypt_file(self)",
                        "def decrypt_file(self)",
                        "def backup_file(self)",
                        "def restore_file(self)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class FileManager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 2058,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 160,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1006,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 355,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 232,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2275,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 244,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 306,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "LSP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 408,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 569,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "LSP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 593,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 1,
            "fail": 47,
            "error": 0,
            "accuracy": 0.020833333333333332
          }
        }
      },
      "overall_stats": {
        "total_pass": 1,
        "total_fail": 47,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "dip--gpt-4o-mini--smell": {
    "smell": {
      "model": "dip--gpt-4o-mini--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "dip": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1005,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 638,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 241,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 924,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1000,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1229,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 998,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 803,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1486,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1333,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1522,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1143,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1208,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1452,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 850,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 955,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 885,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1469,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 881,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1338,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1341,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1013,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1074,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1312,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 991,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1100,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 889,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1172,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 892,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 713,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 858,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 803,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1384,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1323,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1374,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1369,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1099,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1131,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 777,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 777,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1230,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1157,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1208,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1246,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1456,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1308,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1463,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1210,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 0,
            "fail": 48,
            "error": 0,
            "accuracy": 0.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 0,
        "total_fail": 48,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "dip--qwen2.5-coder32b-temp0-latest--example": {
    "example": {
      "model": "dip--qwen2.5-coder32b-temp0-latest--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "dip": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "DIP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 334,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "DIP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 391,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 69,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "DIP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 343,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 259,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 358,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 345,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 348,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 516,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 482,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 493,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 499,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "DIP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "public interface DatabaseConnection {\n    void connect();\n    void executeQuery(String query);\n}\n\npublic class MySQLConnection implements DatabaseConnection {\n    private String host;\n    private String username;\n    private String password;\n    \n    public MySQLConnection(String host, String username, String password) {\n        this.host = host;\n        this.username = username;\n        this.password = password;\n    }\n    \n    @Override\n    public void connect() {\n        System.out.println(\"Connecting to MySQL at \" + host);\n    }\n    \n    @Override\n    public void executeQuery(String query) {\n        System.out.println(\"Executing MySQL query: \" + query);\n    }\n}\n\npublic class UserService {\n    private DatabaseConnection connection;\n    \n    public UserService(DatabaseConnection connection) {\n        this.connection = connection;\n    }\n    \n    public void getUser(int id) {\n        connection.connect();\n        connection.executeQuery(\"SELECT * FROM users WHERE id = \" + id);\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "DatabaseConnection"
                  ],
                  "classes": [
                    [
                      "MySQLConnection",
                      "DatabaseConnection"
                    ],
                    [
                      "UserService",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 6
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "interface_creation",
                      "matches": [
                        "interface DatabaseConnection"
                      ]
                    },
                    {
                      "pattern": "abstraction_usage",
                      "matches": [
                        "private String host;",
                        "private String username;",
                        "private String password;",
                        "private DatabaseConnection connection;"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1299,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "DIP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 368,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "DIP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 236,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "DIP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 270,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 452,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 470,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 359,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 452,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4817,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 7843,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 6357,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4456,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "DIP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 244,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 69,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 69,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "DIP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 226,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 358,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 238,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 359,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 352,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 429,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 422,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 433,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 434,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 350,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 297,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 222,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 367,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 336,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 586,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 547,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 284,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4536,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3692,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3716,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 8877,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 9,
            "fail": 39,
            "error": 0,
            "accuracy": 0.1875
          }
        }
      },
      "overall_stats": {
        "total_pass": 9,
        "total_fail": 39,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "dip--deepseek33b-temp0-latest--example": {
    "example": {
      "model": "dip--deepseek33b-temp0-latest--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "dip": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public class EmailService {\n    public void send(String to, String subject, String body)  {\n        System.out.println(\"Sending email: \" + subject);\n    }\n}\n\npublic class GmailService {\n    private EmailService emailService;\n    \n    public GmailService() {\n        this.emailService = new EmailService();\n    }\n    \n    public void sendEmail(String to, String subject, String body)  {\n        emailService.send(to, subject, body);\n    }\n}\n\npublic class NotificationService {\n    private GmailService gmailService;\n    \n    public NotificationService() {\n        this.gmailService = new GmailService();\n    }\n    \n    public void sendNotification(String to, String message)  {\n        gmailService.sendEmail(to, \"Notification\", message);\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "EmailService",
                      ""
                    ],
                    [
                      "GmailService",
                      ""
                    ],
                    [
                      "NotificationService",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class EmailService {\n    public void send(String to, String subject, String body)  {\n        System.out.println(\"Sending email: \" + subject);\n    }\n}\n\npublic ",
                        "class GmailService {\n    private EmailService emailService;\n    \n    public GmailService() {\n        this.emailService = new EmailService();\n    }\n    \n    public void sendEmail(String to, String subject, String body)  {\n        emailService.send(to, subject, body);\n    }\n}\n\npublic ",
                        "class NotificationService {\n    private GmailService gmailService;\n    \n    public NotificationService() {\n        this.gmailService = new GmailService();\n    }\n    \n    public void sendNotification(String to, String message)  {\n        gmailService.sendEmail(to, \"Notification\", message);\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public GmailService()",
                        "public NotificationService()"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class EmailService",
                        "class GmailService",
                        "class NotificationService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1462,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 401,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 298,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 342,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public interface EmailService {\n    void sendEmail(String to, String subject, String body);\n}\n\npublic class GmailService implements EmailService {\n    public void sendEmail(String to, String subject, String body) {\n        System.out.println(\"Connecting to Gmail SMTP...\");\n        System.out.println(\"Authenticating with OAuth2...\");\n        System.out.println(\"Sending email via Gmail: \" + subject);\n    }\n}\n\npublic class OutlookService implements EmailService {\n    public void sendEmail(String to, String subject, String body) {\n        System.out.println(\"Connecting to Outlook SMTP...\");\n        System.out.println(\"Authenticating with Exchange...\");\n        System.out.println(\"Sending email via Outlook: \" + subject);\n    }\n}",
                  "public class NotificationService {\n    private EmailService emailService;\n    \n    public NotificationService(EmailService emailService) {\n        this.emailService = emailService;\n    }\n    \n    public void sendNotification(String to, String message) {\n        emailService.sendEmail(to, \"Notification\", message);\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "EmailService"
                  ],
                  "classes": [
                    [
                      "GmailService",
                      "EmailService"
                    ],
                    [
                      "OutlookService",
                      "EmailService"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class GmailService implements EmailService {\n    public void sendEmail(String to, String subject, String body) {\n        System.out.println(\"Connecting to Gmail SMTP...\");\n        System.out.println(\"Authenticating with OAuth2...\");\n        System.out.println(\"Sending email via Gmail: \" + subject);\n    }\n}\n\npublic ",
                        "class OutlookService implements EmailService {\n    public void sendEmail(String to, String subject, String body) {\n        System.out.println(\"Connecting to Outlook SMTP...\");\n        System.out.println(\"Authenticating with Exchange...\");\n        System.out.println(\"Sending email via Outlook: \" + subject);\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class GmailService",
                        "class OutlookService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1471,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 353,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 357,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 371,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1421,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2656,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 422,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1991,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public class MySQLConnection {\n    private String host;\n    private String username;\n    private String password;\n    \n    public MySQLConnection(String host, String username, String password) {\n        this.host = host;\n        this.username = username;\n        this.password = password;\n    }\n    \n    public void connect() {\n        System.out.println(\"Connecting to MySQL at \" + host);\n    }\n    \n    public String executeQuery(String query) {\n        return \"Executing MySQL query: \" + query;\n    }\n}\n\npublic class UserService {\n    private MySQLConnection connection;\n    \n    public UserService() {\n        this.connection = new MySQLConnection(\"localhost\", \"root\", \"password\");\n    }\n    \n    public String getUser(int id) {\n        connection.connect();\n        return connection.executeQuery(\"SELECT * FROM users WHERE id = \" + id);\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "MySQLConnection",
                      ""
                    ],
                    [
                      "UserService",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class MySQLConnection {\n    private String host;\n    private String username;\n    private String password;\n    \n    public MySQLConnection(String host, String username, String password) {\n        this.host = host;\n        this.username = username;\n        this.password = password;\n    }\n    \n    public void connect() {\n        System.out.println(\"Connecting to MySQL at \" + host);\n    }\n    \n    public String executeQuery(String query) {\n        return \"Executing MySQL query: \" + query;\n    }\n}\n\npublic ",
                        "class UserService {\n    private MySQLConnection connection;\n    \n    public UserService() {\n        this.connection = new MySQLConnection(\"localhost\", \"root\", \"password\");\n    }\n    \n    public String getUser(int id) {\n        connection.connect();\n        return connection.executeQuery(\"SELECT * FROM users WHERE id = \" + id);\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public MySQLConnection(String host, String username, String password)",
                        "public UserService()"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1546,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 298,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "interface DatabaseConnection {\n    fun connect()\n}\n\nclass MySQLConnection(private val host: String, private val username: String, private val password: String) : DatabaseConnection {\n    override fun connect() {\n        println(\"Connecting to MySQL at $host\")\n    }\n}\n\ninterface QueryExecutor {\n    fun executeQuery(query: String)\n}\n\nclass MySQLQueryExecutor(private val connection: DatabaseConnection) : QueryExecutor {\n    override fun executeQuery(query: String) {\n        connection.connect()\n        println(\"Executing MySQL query: $query\")\n    }\n}\n\nclass UserService(private val queryExecutor: QueryExecutor) {\n    fun getUser(id: Int) {\n        queryExecutor.executeQuery(\"SELECT * FROM users WHERE id = $id\")\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "DatabaseConnection",
                    "QueryExecutor"
                  ],
                  "classes": [
                    [
                      "MySQLConnection",
                      ""
                    ],
                    [
                      "MySQLQueryExecutor",
                      ""
                    ],
                    [
                      "UserService",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class MySQLConnection(private val host: String, private val username: String, private val password: String) : DatabaseConnection {\n    override fun connect() {\n        println(\"Connecting to MySQL at $host\")\n    }\n}\n\ninterface QueryExecutor {\n    fun executeQuery(query: String)\n}\n\n",
                        "class MySQLQueryExecutor(private val connection: DatabaseConnection) : QueryExecutor {\n    override fun executeQuery(query: String) {\n        connection.connect()\n        println(\"Executing MySQL query: $query\")\n    }\n}\n\n",
                        "class UserService(private val queryExecutor: QueryExecutor) {\n    fun getUser(id: Int) {\n        queryExecutor.executeQuery(\"SELECT * FROM users WHERE id = $id\")\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1686,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "csharp": [
                  "public interface IDatabaseConnection\n{\n    void Connect();\n    void ExecuteQuery(string query);\n}\n\npublic class MySQLConnection : IDatabaseConnection\n{\n    private string host;\n    private string username;\n    private string password;\n    \n    public MySQLConnection(string host, string username, string password)\n    {\n        this.host = host;\n        this.username = username;\n        this.password = password;\n    }\n    \n    public void Connect()\n    {\n        Console.WriteLine($\"Connecting to MySQL at {host}\");\n    }\n    \n    public void ExecuteQuery(string query)\n    {\n        Console.WriteLine($\"Executing MySQL query: {query}\");\n    }\n}\n\npublic class UserService\n{\n    private IDatabaseConnection connection;\n    \n    public UserService(IDatabaseConnection connection)\n    {\n        this.connection = connection;\n    }\n    \n    public void GetUser(int id)\n    {\n        connection.Connect();\n        connection.ExecuteQuery($\"SELECT * FROM users WHERE id = {id}\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [
                    "DatabaseConnection"
                  ],
                  "classes": [
                    [
                      "MySQLConnection",
                      "DatabaseConnection"
                    ],
                    [
                      "UserService",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 6
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class MySQLConnection : IDatabaseConnection\n{\n    private string host;\n    private string username;\n    private string password;\n    \n    public MySQLConnection(string host, string username, string password)\n    {\n        this.host = host;\n        this.username = username;\n        this.password = password;\n    }\n    \n    public void Connect()\n    {\n        Console.WriteLine($\"Connecting to MySQL at {host}\");\n    }\n    \n    public void ExecuteQuery(string query)\n    {\n        Console.WriteLine($\"Executing MySQL query: {query}\");\n    }\n}\n\npublic ",
                        "class UserService\n{\n    private IDatabaseConnection connection;\n    \n    public UserService(IDatabaseConnection connection)\n    {\n        this.connection = connection;\n    }\n    \n    public void GetUser(int id)\n    {\n        connection.Connect();\n        connection.ExecuteQuery($\"SELECT * FROM users WHERE id = {id}\");\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public MySQLConnection(string host, string username, string password)",
                        "public UserService(IDatabaseConnection connection)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1758,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 845,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 821,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 760,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 706,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2783,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1369,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1097,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2253,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 370,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class CreditCardProcessor:\n    def process_payment(self, amount: float) -> bool:\n        print(f\"Processing ${amount} via Credit Card\")\n        return amount > 0\n\nclass PaymentService:\n    def __init__(self):\n        self.processor = CreditCardProcessor()\n    \n    def make_payment(self, amount: float) -> bool:\n        return self.processor.process_payment(amount)"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "CreditCardProcessor",
                    "PaymentService"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class CreditCardProcessor:\n    def process_payment(self, amount: float) -> bool:\n        print(f\"Processing ${amount} via Credit Card\")\n        return amount > 0\n\n",
                        "class PaymentService:\n    def __init__(self):\n        self.processor = CreditCardProcessor()\n    \n    def make_payment(self, amount: float) -> bool:\n        return self.processor.process_payment(amount)"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def process_payment(self, amount: float)",
                        "def __init__(self)",
                        "def make_payment(self, amount: float)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class PaymentService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 916,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 451,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 370,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 349,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 593,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 327,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 327,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2090,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 653,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 519,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 561,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 565,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 367,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 690,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "csharp": [
                  "public interface IFileReader\n{\n    string Read(string filePath);\n}\n\npublic class PdfReader : IFileReader\n{\n    public string Read(string filePath)\n    {\n        return $\"Reading PDF content from: {filePath}\";\n    }\n}\n\npublic class WordReader : IFileReader\n{\n    public string Read(string filePath)\n    {\n        return $\"Reading Word content from: {filePath}\";\n    }\n}\n\npublic class DocumentProcessor\n{\n    private readonly Dictionary<string, IFileReader> _readers;\n    \n    public DocumentProcessor()\n    {\n        _readers = new Dictionary<string, IFileReader>\n        {\n            {\"pdf\", new PdfReader()},\n            {\"word\", new WordReader()}\n        };\n    }\n    \n    public string ProcessDocument(string filePath, string type)\n    {\n        if (_readers.TryGetValue(type, out var reader))\n        {\n            return reader.Read(filePath);\n        }\n        \n        return \"Unsupported format\";\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [
                    "FileReader"
                  ],
                  "classes": [
                    [
                      "PdfReader",
                      "FileReader"
                    ],
                    [
                      "WordReader",
                      "FileReader"
                    ],
                    [
                      "DocumentProcessor",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class PdfReader : IFileReader\n{\n    public string Read(string filePath)\n    {\n        return $\"Reading PDF content from: {filePath}\";\n    }\n}\n\npublic ",
                        "class WordReader : IFileReader\n{\n    public string Read(string filePath)\n    {\n        return $\"Reading Word content from: {filePath}\";\n    }\n}\n\npublic ",
                        "class DocumentProcessor\n{\n    private readonly Dictionary<string, IFileReader> _readers;\n    \n    public DocumentProcessor()\n    {\n        _readers = new Dictionary<string, IFileReader>\n        {\n            {\"pdf\", new PdfReader()},\n            {\"word\", new WordReader()}\n        };\n    }\n    \n    public string ProcessDocument(string filePath, string type)\n    {\n        if (_readers.TryGetValue(type, out var reader))\n        {\n            return reader.Read(filePath);\n        }\n        \n        return \"Unsupported format\";\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public DocumentProcessor()"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1831,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 894,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 686,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 764,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 458,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2004,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3965,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1883,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1582,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 0,
            "fail": 48,
            "error": 0,
            "accuracy": 0.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 0,
        "total_fail": 48,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "dip--qwen2.5-coder32b-temp0-latest--default": {
    "default": {
      "model": "dip--qwen2.5-coder32b-temp0-latest--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "dip": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1563,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1020,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1191,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1682,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3513,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class EmailService:\n    def send_email(self, to: str, subject: str, body: str):\n        raise NotImplementedError(\"This method should be overridden by subclasses\")\n\nclass GmailService(EmailService):\n    def send_email(self, to: str, subject: str, body: str):\n        print(\"Connecting to Gmail SMTP...\")\n        print(\"Authenticating with OAuth2...\")\n        print(f\"Sending email via Gmail: {subject}\")\n\nclass OutlookService(EmailService):\n    def send_email(self, to: str, subject: str, body: str):\n        print(\"Connecting to Outlook SMTP...\")\n        print(\"Authenticating with Exchange...\")\n        print(f\"Sending email via Outlook: {subject}\")\n\nclass NotificationService:\n    def __init__(self, email_service: EmailService):\n        self.email_service = email_service\n    \n    def send_notification(self, to: str, message: str):\n        self.email_service.send_email(to, \"Notification\", message)\n    \n    def send_welcome_email(self, to: str, username: str):\n        welcome_message = f\"Welcome {username}! Thanks for joining our platform.\"\n        self.email_service.send_email(to, \"Welcome!\", welcome_message)\n    \n    def send_password_reset_email(self, to: str, reset_token: str):\n        reset_message = f\"Click here to reset your password: /reset?token={reset_token}\"\n        self.email_service.send_email(to, \"Password Reset\", reset_message)\n\n# Usage\ngmail_service = GmailService()\nnotification_service = NotificationService(gmail_service)\nnotification_service.send_notification(\"example@example.com\", \"Hello!\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "EmailService",
                    "GmailService",
                    "OutlookService",
                    "NotificationService"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 2625,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "interface EmailService {\n    fun sendEmail(to: String, subject: String, body: String)\n}\n\nclass GmailService : EmailService {\n    override fun sendEmail(to: String, subject: String, body: String) {\n        println(\"Connecting to Gmail SMTP...\")\n        println(\"Authenticating with OAuth2...\")\n        println(\"Sending email via Gmail: $subject\")\n    }\n}\n\nclass OutlookService : EmailService {\n    override fun sendEmail(to: String, subject: String, body: String) {\n        println(\"Connecting to Outlook SMTP...\")\n        println(\"Authenticating with Exchange...\")\n        println(\"Sending email via Outlook: $subject\")\n    }\n}\n\nabstract class NotificationSender(private val emailService: EmailService) {\n    abstract fun send(to: String)\n}\n\nclass GeneralNotificationSender(emailService: EmailService, private val message: String) : NotificationSender(emailService) {\n    override fun send(to: String) {\n        emailService.sendEmail(to, \"Notification\", message)\n    }\n}\n\nclass WelcomeNotificationSender(emailService: EmailService, private val username: String) : NotificationSender(emailService) {\n    override fun send(to: String) {\n        val welcomeMessage = \"Welcome $username! Thanks for joining our platform.\"\n        emailService.sendEmail(to, \"Welcome!\", welcomeMessage)\n    }\n}\n\nclass PasswordResetNotificationSender(emailService: EmailService, private val resetToken: String) : NotificationSender(emailService) {\n    override fun send(to: String) {\n        val resetMessage = \"Click here to reset your password: /reset?token=$resetToken\"\n        emailService.sendEmail(to, \"Password Reset\", resetMessage)\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "EmailService"
                  ],
                  "classes": [
                    [
                      "GmailService",
                      "EmailService"
                    ],
                    [
                      "OutlookService",
                      "EmailService"
                    ],
                    [
                      "NotificationSender",
                      ""
                    ],
                    [
                      "GeneralNotificationSender",
                      ""
                    ],
                    [
                      "WelcomeNotificationSender",
                      ""
                    ],
                    [
                      "PasswordResetNotificationSender",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class GmailService : EmailService {\n    override fun sendEmail(to: String, subject: String, body: String) {\n        println(\"Connecting to Gmail SMTP...\")\n        println(\"Authenticating with OAuth2...\")\n        println(\"Sending email via Gmail: $subject\")\n    }\n}\n\n",
                        "class OutlookService : EmailService {\n    override fun sendEmail(to: String, subject: String, body: String) {\n        println(\"Connecting to Outlook SMTP...\")\n        println(\"Authenticating with Exchange...\")\n        println(\"Sending email via Outlook: $subject\")\n    }\n}\n\nabstract ",
                        "class NotificationSender(private val emailService: EmailService) {\n    abstract fun send(to: String)\n}\n\n",
                        "class GeneralNotificationSender(emailService: EmailService, private val message: String) : NotificationSender(emailService) {\n    override fun send(to: String) {\n        emailService.sendEmail(to, \"Notification\", message)\n    }\n}\n\n",
                        "class WelcomeNotificationSender(emailService: EmailService, private val username: String) : NotificationSender(emailService) {\n    override fun send(to: String) {\n        val welcomeMessage = \"Welcome $username! Thanks for joining our platform.\"\n        emailService.sendEmail(to, \"Welcome!\", welcomeMessage)\n    }\n}\n\n",
                        "class PasswordResetNotificationSender(emailService: EmailService, private val resetToken: String) : NotificationSender(emailService) {\n    override fun send(to: String) {\n        val resetMessage = \"Click here to reset your password: /reset?token=$resetToken\"\n        emailService.sendEmail(to, \"Password Reset\", resetMessage)\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class GmailService",
                        "class OutlookService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 2698,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "csharp": [
                  "public interface IEmailService\n{\n    void SendEmail(string to, string subject, string body);\n}\n\npublic class GmailService : IEmailService\n{\n    public void SendEmail(string to, string subject, string body)\n    {\n        Console.WriteLine(\"Connecting to Gmail SMTP...\");\n        Console.WriteLine(\"Authenticating with OAuth2...\");\n        Console.WriteLine($\"Sending email via Gmail: {subject}\");\n    }\n}\n\npublic class OutlookService : IEmailService\n{\n    public void SendEmail(string to, string subject, string body)\n    {\n        Console.WriteLine(\"Connecting to Outlook SMTP...\");\n        Console.WriteLine(\"Authenticating with Exchange...\");\n        Console.WriteLine($\"Sending email via Outlook: {subject}\");\n    }\n}\n\npublic class NotificationService\n{\n    private readonly IEmailService _emailService;\n\n    public NotificationService(IEmailService emailService)\n    {\n        _emailService = emailService;\n    }\n\n    public void SendNotification(string to, string message)\n    {\n        _emailService.SendEmail(to, \"Notification\", message);\n    }\n\n    public void SendWelcomeEmail(string to, string username)\n    {\n        string welcomeMessage = $\"Welcome {username}! Thanks for joining our platform.\";\n        _emailService.SendEmail(to, \"Welcome!\", welcomeMessage);\n    }\n\n    public void SendPasswordResetEmail(string to, string resetToken)\n    {\n        string resetMessage = $\"Click here to reset your password: /reset?token={resetToken}\";\n        _emailService.SendEmail(to, \"Password Reset\", resetMessage);\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [
                    "EmailService"
                  ],
                  "classes": [
                    [
                      "GmailService",
                      "EmailService"
                    ],
                    [
                      "OutlookService",
                      "EmailService"
                    ],
                    [
                      "NotificationService",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 6
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 2784,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3919,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class NotificationService:\n    def __init__(self, primary_provider: str, fallback_provider: str):\n        self.primary_provider = primary_provider\n        self.fallback_provider = fallback_provider\n        self._initialize_services()\n    \n    def _initialize_services(self):\n        providers = [self.primary_provider, self.fallback_provider]\n        \n        if \"gmail\" in providers:\n            self.gmail_service = GmailService(\"gmail-api-key-12345\")\n        if \"outlook\" in providers:\n            self.outlook_service = OutlookService(\"exchange.company.com\", \"admin@company.com\", \"password123\")\n        if \"sendgrid\" in providers:\n            self.sendgrid_service = SendGridService(\"sendgrid-api-key-67890\", \"noreply@company.com\")\n    \n    def _send_email_with_provider(self, to: str, subject: str, body: str, provider: str):\n        if provider == \"gmail\":\n            self.gmail_service.send_email(to, subject, body, 2)\n        elif provider == \"outlook\":\n            self.outlook_service.send_email(to, subject, body, False)\n        elif provider == \"sendgrid\":\n            self.sendgrid_service.send_transactional_email(to, \"notification-template\", [body])\n        else:\n            raise ValueError(f\"Unknown provider: {provider}\")\n    \n    def send_notification(self, to: str, message: str):\n        try:\n            self._send_email_with_provider(to, \"Notification\", message, self.primary_provider)\n        except Exception as e:\n            print(\"Primary provider failed, trying fallback...\")\n            self._send_email_with_provider(to, \"Notification\", message, self.fallback_provider)\n\nclass WelcomeEmailSender(NotificationService):\n    def send_welcome_email(self, to: str, username: str):\n        welcome_message = f\"Welcome {username}! Thanks for joining our platform. We're excited to have you aboard.\"\n        if self.primary_provider == \"sendgrid\":\n            self.sendgrid_service.send_transactional_email(to, \"welcome-template\", [username])\n        else:\n            self._send_email_with_provider(to, \"Welcome to Our Platform!\", welcome_message, self.primary_provider)\n\nclass PasswordResetEmailSender(NotificationService):\n    def send_password_reset_email(self, to: str, reset_token: str, user_agent: str):\n        reset_message = (f\"Someone requested a password reset for your account.\\n\"\n                        f\"If this was you, click here: https://company.com/reset?token={reset_token}\\n\"\n                        f\"Request from: {user_agent}\\n\"\n                        f\"If you didn't request this, please ignore this email.\")\n        self._send_email_with_provider(to, \"Password Reset Request\", reset_message, self.primary_provider)\n\nclass BulkMarketingEmailSender(NotificationService):\n    def send_bulk_marketing_emails(self, recipients: List[str], campaign: str, html_content: str):\n        if self.primary_provider == \"sendgrid\":\n            self.sendgrid_service.send_marketing_email(recipients, campaign, html_content)\n        elif self.primary_provider == \"gmail\":\n            self.gmail_service.send_bulk_emails(recipients, campaign, html_content)\n        else:\n            for recipient in recipients:\n                self._send_email_with_provider(recipient, campaign, html_content, self.primary_provider)\n\nclass ScheduledReminderSender(NotificationService):\n    def send_scheduled_reminder(self, to: str, reminder_text: str, delay_ms: int):\n        if self.primary_provider == \"outlook\":\n            self.outlook_service.send_scheduled_email(to, \"Reminder\", reminder_text, delay_ms)\n        else:\n            print(f\"Scheduled emails not supported with {self.primary_provider}, sending immediately...\")\n            self._send_email_with_provider(to, \"Reminder\", reminder_text, self.primary_provider)"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "NotificationService",
                    "WelcomeEmailSender",
                    "PasswordResetEmailSender",
                    "BulkMarketingEmailSender",
                    "ScheduledReminderSender"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class NotificationService:\n    def __init__(self, primary_provider: str, fallback_provider: str):\n        self.primary_provider = primary_provider\n        self.fallback_provider = fallback_provider\n        self._initialize_services()\n    \n    def _initialize_services(self):\n        providers = [self.primary_provider, self.fallback_provider]\n        \n        if \"gmail\" in providers:\n            self.gmail_service = GmailService(\"gmail-api-key-12345\")\n        if \"outlook\" in providers:\n            self.outlook_service = OutlookService(\"exchange.company.com\", \"admin@company.com\", \"password123\")\n        if \"sendgrid\" in providers:\n            self.sendgrid_service = SendGridService(\"sendgrid-api-key-67890\", \"noreply@company.com\")\n    \n    def _send_email_with_provider(self, to: str, subject: str, body: str, provider: str):\n        if provider == \"gmail\":\n            self.gmail_service.send_email(to, subject, body, 2)\n        elif provider == \"outlook\":\n            self.outlook_service.send_email(to, subject, body, False)\n        elif provider == \"sendgrid\":\n            self.sendgrid_service.send_transactional_email(to, \"notification-template\", [body])\n        else:\n            raise ValueError(f\"Unknown provider: {provider}\")\n    \n    def send_notification(self, to: str, message: str):\n        try:\n            self._send_email_with_provider(to, \"Notification\", message, self.primary_provider)\n        except Exception as e:\n            print(\"Primary provider failed, trying fallback...\")\n            self._send_email_with_provider(to, \"Notification\", message, self.fallback_provider)\n\n",
                        "class WelcomeEmailSender(NotificationService):\n    def send_welcome_email(self, to: str, username: str):\n        welcome_message = f\"Welcome {username}! Thanks for joining our platform. We're excited to have you aboard.\"\n        if self.primary_provider == \"sendgrid\":\n            self.sendgrid_service.send_transactional_email(to, \"welcome-template\", [username])\n        else:\n            self._send_email_with_provider(to, \"Welcome to Our Platform!\", welcome_message, self.primary_provider)\n\n",
                        "class PasswordResetEmailSender(NotificationService):\n    def send_password_reset_email(self, to: str, reset_token: str, user_agent: str):\n        reset_message = (f\"Someone requested a password reset for your account.\\n\"\n                        f\"If this was you, click here: https://company.com/reset?token={reset_token}\\n\"\n                        f\"Request from: {user_agent}\\n\"\n                        f\"If you didn't request this, please ignore this email.\")\n        self._send_email_with_provider(to, \"Password Reset Request\", reset_message, self.primary_provider)\n\n",
                        "class BulkMarketingEmailSender(NotificationService):\n    def send_bulk_marketing_emails(self, recipients: List[str], campaign: str, html_content: str):\n        if self.primary_provider == \"sendgrid\":\n            self.sendgrid_service.send_marketing_email(recipients, campaign, html_content)\n        elif self.primary_provider == \"gmail\":\n            self.gmail_service.send_bulk_emails(recipients, campaign, html_content)\n        else:\n            for recipient in recipients:\n                self._send_email_with_provider(recipient, campaign, html_content, self.primary_provider)\n\n",
                        "class ScheduledReminderSender(NotificationService):\n    def send_scheduled_reminder(self, to: str, reminder_text: str, delay_ms: int):\n        if self.primary_provider == \"outlook\":\n            self.outlook_service.send_scheduled_email(to, \"Reminder\", reminder_text, delay_ms)\n        else:\n            print(f\"Scheduled emails not supported with {self.primary_provider}, sending immediately...\")\n            self._send_email_with_provider(to, \"Reminder\", reminder_text, self.primary_provider)"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, primary_provider: str, fallback_provider: str)",
                        "def _initialize_services(self)",
                        "def _send_email_with_provider(self, to: str, subject: str, body: str, provider: str)",
                        "def send_notification(self, to: str, message: str)",
                        "def send_welcome_email(self, to: str, username: str)",
                        "def send_password_reset_email(self, to: str, reset_token: str, user_agent: str)",
                        "def send_bulk_marketing_emails(self, recipients: List[str], campaign: str, html_content: str)",
                        "def send_scheduled_reminder(self, to: str, reminder_text: str, delay_ms: int)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class NotificationService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 5324,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2356,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2113,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2569,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class MySQLConnection:\n    def __init__(self, host, username, password):\n        self.host = host\n        self.username = username\n        self.password = password\n    \n    def connect(self):\n        print(f\"Connecting to MySQL at {self.host}\")\n    \n    def execute_query(self, query):\n        print(f\"Executing MySQL query: {query}\")\n\nclass DatabaseManager:\n    def __init__(self):\n        self.connection = MySQLConnection(\"localhost\", \"root\", \"password\")\n    \n    def get_user_by_id(self, user_id):\n        self.connection.connect()\n        return self.connection.execute_query(f\"SELECT * FROM users WHERE id = {user_id}\")\n\nclass UserService:\n    def __init__(self, database_manager):\n        self.database_manager = database_manager\n    \n    def get_user(self, user_id):\n        return self.database_manager.get_user_by_id(user_id)"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "MySQLConnection",
                    "DatabaseManager",
                    "UserService"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class MySQLConnection:\n    def __init__(self, host, username, password):\n        self.host = host\n        self.username = username\n        self.password = password\n    \n    def connect(self):\n        print(f\"Connecting to MySQL at {self.host}\")\n    \n    def execute_query(self, query):\n        print(f\"Executing MySQL query: {query}\")\n\n",
                        "class DatabaseManager:\n    def __init__(self):\n        self.connection = MySQLConnection(\"localhost\", \"root\", \"password\")\n    \n    def get_user_by_id(self, user_id):\n        self.connection.connect()\n        return self.connection.execute_query(f\"SELECT * FROM users WHERE id = {user_id}\")\n\n",
                        "class UserService:\n    def __init__(self, database_manager):\n        self.database_manager = database_manager\n    \n    def get_user(self, user_id):\n        return self.database_manager.get_user_by_id(user_id)"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, host, username, password)",
                        "def connect(self)",
                        "def execute_query(self, query)",
                        "def __init__(self)",
                        "def get_user_by_id(self, user_id)",
                        "def __init__(self, database_manager)",
                        "def get_user(self, user_id)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class DatabaseManager",
                        "class UserService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1601,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "class MySQLConnection(private val host: String, private val username: String, private val password: String) {\n    fun connect() {\n        println(\"Connecting to MySQL at $host\")\n    }\n    \n    fun executeQuery(query: String): String {\n        println(\"Executing MySQL query: $query\")\n        return \"Result of the query\" // Simulated result\n    }\n}\n\nclass UserRepository(private val connection: MySQLConnection) {\n    fun getUserById(id: Int): String {\n        connection.connect()\n        return connection.executeQuery(\"SELECT * FROM users WHERE id = $id\")\n    }\n}\n\nclass UserService(private val userRepository: UserRepository) {\n    fun getUser(id: Int): String {\n        return userRepository.getUserById(id)\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "MySQLConnection",
                      ""
                    ],
                    [
                      "UserRepository",
                      ""
                    ],
                    [
                      "UserService",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class MySQLConnection(private val host: String, private val username: String, private val password: String) {\n    fun connect() {\n        println(\"Connecting to MySQL at $host\")\n    }\n    \n    fun executeQuery(query: String): String {\n        println(\"Executing MySQL query: $query\")\n        return \"Result of the query\" // Simulated result\n    }\n}\n\n",
                        "class UserRepository(private val connection: MySQLConnection) {\n    fun getUserById(id: Int): String {\n        connection.connect()\n        return connection.executeQuery(\"SELECT * FROM users WHERE id = $id\")\n    }\n}\n\n",
                        "class UserService(private val userRepository: UserRepository) {\n    fun getUser(id: Int): String {\n        return userRepository.getUserById(id)\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1965,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3249,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1871,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3996,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3476,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4798,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4823,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 6951,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "interface UserRepository {\n    fun getUser(userId: Int)\n    fun createUser(name: String, email: String, phone: String, address: String)\n    fun bulkUpdateUsers(updates: List<String>)\n    fun deleteUser(userId: Int)\n    fun getUserAnalytics(startDate: String, endDate: String)\n}",
                  "class MySQLUserRepository(private val mysqlPool: MySQLConnectionPool) : UserRepository {\n    override fun getUser(userId: Int) {\n        mysqlPool.getConnection(\"mysql-get-$userId\")?.let { conn ->\n            conn.executeQuery(\"SELECT * FROM users WHERE id = $userId\")\n            mysqlPool.releaseConnection(\"mysql-get-$userId\")\n        }\n    }\n\n    override fun createUser(name: String, email: String, phone: String, address: String) {\n        val params = listOf(name, email, phone, address)\n        val query = \"INSERT INTO users (name, email, phone, address) VALUES (?, ?, ?, ?)\"\n        mysqlPool.getConnection(\"mysql-create\")?.let { conn ->\n            conn.executePreparedStatement(query, params)\n            mysqlPool.releaseConnection(\"mysql-create\")\n        }\n    }\n\n    override fun bulkUpdateUsers(updates: List<String>) {\n        mysqlPool.getConnection(\"mysql-bulk\")?.let { conn ->\n            conn.executeTransaction(updates)\n            mysqlPool.releaseConnection(\"mysql-bulk\")\n        }\n    }\n\n    override fun deleteUser(userId: Int) {\n        val query = \"DELETE FROM users WHERE id = $userId\"\n        mysqlPool.getConnection(\"mysql-delete\")?.let { conn ->\n            conn.executeQuery(query)\n            mysqlPool.releaseConnection(\"mysql-delete\")\n        }\n    }\n\n    override fun getUserAnalytics(startDate: String, endDate: String) {\n        val complexQuery = \"SELECT u.*, COUNT(o.id) as order_count, SUM(o.total) as total_spent FROM users u LEFT JOIN orders o ON u.id = o.user_id WHERE u.created_at BETWEEN '$startDate' AND '$endDate' GROUP BY u.id ORDER BY total_spent DESC\"\n        mysqlPool.getConnection(\"mysql-analytics\")?.let { conn ->\n            conn.executeQuery(complexQuery)\n            mysqlPool.releaseConnection(\"mysql-analytics\")\n        }\n    }\n}\n\nclass PostgreSQLUserRepository(private val postgresPool: PostgreSQLConnectionPool) : UserRepository {\n    override fun getUser(userId: Int) {\n        postgresPool.getConnection(\"postgres-get-$userId\")?.let { conn ->\n            conn.executeQuery(\"SELECT * FROM users WHERE id = $userId\")\n            postgresPool.releaseConnection(\"postgres-get-$userId\")\n        }\n    }\n\n    override fun createUser(name: String, email: String, phone: String, address: String) {\n        val params = listOf(name, email, phone, address)\n        val query = \"INSERT INTO users (name, email, phone, address) VALUES (?, ?, ?, ?)\"\n        postgresPool.getConnection(\"postgres-create\")?.let { conn ->\n            conn.executePreparedStatement(query, params)\n            postgresPool.releaseConnection(\"postgres-create\")\n        }\n    }\n\n    override fun bulkUpdateUsers(updates: List<String>) {\n        postgresPool.getConnection(\"postgres-bulk\")?.let { conn ->\n            conn.executeBatch(updates)\n            postgresPool.releaseConnection(\"postgres-bulk\")\n        }\n    }\n\n    override fun deleteUser(userId: Int) {\n        val query = \"DELETE FROM users WHERE id = $userId\"\n        postgresPool.getConnection(\"postgres-delete\")?.let { conn ->\n            conn.executeQuery(query)\n            postgresPool.releaseConnection(\"postgres-delete\")\n        }\n    }\n\n    override fun getUserAnalytics(startDate: String, endDate: String) {\n        val complexQuery = \"SELECT u.*, COUNT(o.id) as order_count, SUM(o.total) as total_spent FROM users u LEFT JOIN orders o ON u.id = o.user_id WHERE u.created_at BETWEEN '$startDate' AND '$endDate' GROUP BY u.id ORDER BY total_spent DESC\"\n        postgresPool.getConnection(\"postgres-analytics\")?.let { conn ->\n            conn.executeQuery(complexQuery)\n            postgresPool.releaseConnection(\"postgres-analytics\")\n        }\n    }\n}",
                  "class UserService(private val userRepository: UserRepository) {\n    fun getUser(userId: Int) {\n        userRepository.getUser(userId)\n    }\n\n    fun createUser(name: String, email: String, phone: String, address: String) {\n        userRepository.createUser(name, email, phone, address)\n    }\n\n    fun bulkUpdateUsers(updates: List<String>) {\n        userRepository.bulkUpdateUsers(updates)\n    }\n\n    fun deleteUser(userId: Int) {\n        userRepository.deleteUser(userId)\n    }\n\n    fun getUserAnalytics(startDate: String, endDate: String) {\n        userRepository.getUserAnalytics(startDate, endDate)\n    }\n}",
                  "fun main() {\n    val mysqlPool = MySQLConnectionPool()\n    val postgresPool = PostgreSQLConnectionPool()\n\n    val databaseType = \"mysql\" // or \"postgres\"\n    val userRepository: UserRepository = when (databaseType) {\n        \"mysql\" -> MySQLUserRepository(mysqlPool)\n        \"postgres\" -> PostgreSQLUserRepository(postgresPool)\n        else -> throw IllegalArgumentException(\"Unsupported database type\")\n    }\n\n    val userService = UserService(userRepository)\n\n    // Use userService to perform operations\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "UserRepository"
                  ],
                  "classes": [],
                  "has_dependency_injection": false,
                  "language_quality_score": 2
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 6278,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4456,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1003,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1133,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1238,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1043,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public interface PaymentProcessor {\n    PaymentResult processPayment(double amount, String credential);\n}\n\npublic class CreditCardProcessor implements PaymentProcessor {\n    private String apiKey;\n    \n    public CreditCardProcessor(String apiKey) {\n        this.apiKey = apiKey;\n    }\n    \n    @Override\n    public PaymentResult processPayment(double amount, String cardNumber) {\n        if (cardNumber.length() != 16) {\n            return new PaymentResult(false, \"Invalid card number\");\n        }\n        System.out.println(\"Processing $\" + amount + \" via Credit Card with API key: \" + apiKey);\n        return new PaymentResult(true, \"Payment successful\");\n    }\n}\n\npublic class PayPalProcessor implements PaymentProcessor {\n    private String clientId;\n    \n    public PayPalProcessor(String clientId) {\n        this.clientId = clientId;\n    }\n    \n    @Override\n    public PaymentResult processPayment(double amount, String email) {\n        if (!email.contains(\"@\")) {\n            return new PaymentResult(false, \"Invalid email\");\n        }\n        System.out.println(\"Processing $\" + amount + \" via PayPal with client ID: \" + clientId);\n        return new PaymentResult(true, \"Payment successful\");\n    }\n}\n\npublic class BankTransferProcessor implements PaymentProcessor {\n    private String bankId;\n    \n    public BankTransferProcessor(String bankId) {\n        this.bankId = bankId;\n    }\n    \n    @Override\n    public PaymentResult processPayment(double amount, String accountNumber) {\n        if (accountNumber.length() != 10) { // Example validation\n            return new PaymentResult(false, \"Invalid account number\");\n        }\n        System.out.println(\"Processing $\" + amount + \" via Bank Transfer with bank ID: \" + bankId);\n        return new PaymentResult(true, \"Payment successful\");\n    }\n}\n\npublic class PaymentService {\n    private Map<String, PaymentProcessor> paymentProcessors;\n    \n    public PaymentService() {\n        this.paymentProcessors = new HashMap<>();\n        this.paymentProcessors.put(\"creditcard\", new CreditCardProcessor(\"cc-api-key-123\"));\n        this.paymentProcessors.put(\"paypal\", new PayPalProcessor(\"paypal-client-456\"));\n    }\n    \n    public void addPaymentProcessor(String paymentType, PaymentProcessor processor) {\n        this.paymentProcessors.put(paymentType, processor);\n    }\n    \n    public PaymentResult processPayment(String paymentType, double amount, String credential) {\n        PaymentProcessor processor = paymentProcessors.get(paymentType);\n        if (processor != null) {\n            return processor.processPayment(amount, credential);\n        }\n        return new PaymentResult(false, \"Unsupported payment type\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "PaymentProcessor"
                  ],
                  "classes": [
                    [
                      "CreditCardProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "PayPalProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "BankTransferProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "PaymentService",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 6
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "high",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "@Override",
                        "@Override",
                        "@Override"
                      ]
                    },
                    {
                      "pattern": "interface_implementation",
                      "matches": [
                        "implements PaymentProcessor",
                        "implements PaymentProcessor",
                        "implements PaymentProcessor"
                      ]
                    }
                  ]
                }
              },
              "response_length": 3991,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "from abc import ABC, abstractmethod\n\nclass PaymentProcessor(ABC):\n    @abstractmethod\n    def process_payment(self, amount: float, credential: str) -> 'PaymentResult':\n        pass\n\nclass CreditCardProcessor(PaymentProcessor):\n    def __init__(self, api_key: str):\n        self.api_key = api_key\n    \n    def process_payment(self, amount: float, card_number: str) -> 'PaymentResult':\n        if len(card_number) != 16:\n            return PaymentResult(False, \"Invalid card number\")\n        print(f\"Processing ${amount} via Credit Card with API key: {self.api_key}\")\n        return PaymentResult(True, \"Payment successful\")\n\nclass PayPalProcessor(PaymentProcessor):\n    def __init__(self, client_id: str):\n        self.client_id = client_id\n    \n    def process_payment(self, amount: float, email: str) -> 'PaymentResult':\n        if \"@\" not in email:\n            return PaymentResult(False, \"Invalid email\")\n        print(f\"Processing ${amount} via PayPal with client ID: {self.client_id}\")\n        return PaymentResult(True, \"Payment successful\")\n\nclass BankTransferProcessor(PaymentProcessor):\n    def __init__(self, account_number: str):\n        self.account_number = account_number\n    \n    def process_payment(self, amount: float, bank_details: str) -> 'PaymentResult':\n        # Add validation and processing logic for bank transfer\n        print(f\"Processing ${amount} via Bank Transfer with account number: {self.account_number}\")\n        return PaymentResult(True, \"Bank transfer successful\")\n\nclass PaymentService:\n    def __init__(self):\n        self.processors = {\n            \"creditcard\": CreditCardProcessor(\"cc-api-key-123\"),\n            \"paypal\": PayPalProcessor(\"paypal-client-456\")\n        }\n    \n    def process_payment(self, payment_type: str, amount: float, credential: str) -> PaymentResult:\n        processor = self.processors.get(payment_type)\n        if not processor:\n            return PaymentResult(False, \"Unsupported payment type\")\n        return processor.process_payment(amount, credential)\n\n    def add_processor(self, payment_type: str, processor: PaymentProcessor):\n        self.processors[payment_type] = processor"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "PaymentProcessor",
                    "CreditCardProcessor",
                    "PayPalProcessor",
                    "BankTransferProcessor",
                    "PaymentService"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 3543,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1023,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "csharp": [
                  "public interface IPaymentProcessor\n{\n    PaymentResult ProcessPayment(double amount, string credential);\n}\n\npublic class CreditCardProcessor : IPaymentProcessor\n{\n    private readonly string _apiKey;\n    \n    public CreditCardProcessor(string apiKey)\n    {\n        _apiKey = apiKey;\n    }\n    \n    public PaymentResult ProcessPayment(double amount, string cardNumber)\n    {\n        if (cardNumber.Length != 16)\n        {\n            return new PaymentResult(false, \"Invalid card number\");\n        }\n        Console.WriteLine($\"Processing ${amount} via Credit Card with API key: {_apiKey}\");\n        return new PaymentResult(true, \"Payment successful\");\n    }\n}\n\npublic class PayPalProcessor : IPaymentProcessor\n{\n    private readonly string _clientId;\n    \n    public PayPalProcessor(string clientId)\n    {\n        _clientId = clientId;\n    }\n    \n    public PaymentResult ProcessPayment(double amount, string email)\n    {\n        if (!email.Contains(\"@\"))\n        {\n            return new PaymentResult(false, \"Invalid email\");\n        }\n        Console.WriteLine($\"Processing ${amount} via PayPal with client ID: {_clientId}\");\n        return new PaymentResult(true, \"Payment successful\");\n    }\n}\n\npublic class BankTransferProcessor : IPaymentProcessor\n{\n    private readonly string _bankId;\n    \n    public BankTransferProcessor(string bankId)\n    {\n        _bankId = bankId;\n    }\n    \n    public PaymentResult ProcessPayment(double amount, string accountNumber)\n    {\n        if (accountNumber.Length != 10) // Example validation\n        {\n            return new PaymentResult(false, \"Invalid account number\");\n        }\n        Console.WriteLine($\"Processing ${amount} via Bank Transfer with bank ID: {_bankId}\");\n        return new PaymentResult(true, \"Payment successful\");\n    }\n}\n\npublic class PaymentService\n{\n    private readonly List<IPaymentProcessor> _paymentProcessors;\n    \n    public PaymentService(IEnumerable<IPaymentProcessor> paymentProcessors)\n    {\n        _paymentProcessors = paymentProcessors.ToList();\n    }\n    \n    public PaymentResult ProcessPayment(string paymentType, double amount, string credential)\n    {\n        var processor = _paymentProcessors.FirstOrDefault(p => p.GetType().Name.ToLower() == $\"{paymentType}processor\");\n        \n        if (processor != null)\n        {\n            return processor.ProcessPayment(amount, credential);\n        }\n\n        return new PaymentResult(false, \"Unsupported payment type\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [
                    "PaymentProcessor"
                  ],
                  "classes": [
                    [
                      "CreditCardProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "PayPalProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "BankTransferProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "PaymentService",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 6
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 3863,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public class PaymentProcessingService {\n    private CreditCardProcessor ccProcessor;\n    private PayPalProcessor paypalProcessor;\n    private BankTransferProcessor bankProcessor;\n\n    public PaymentProcessingService() {\n        this.ccProcessor = new CreditCardProcessor(\"cc-api-key-123\", \"merchant-456\");\n        this.paypalProcessor = new PayPalProcessor(\"paypal-client-789\", \"paypal-secret-abc\", true);\n        this.bankProcessor = new BankTransferProcessor(\"https://bank-api.example.com\", \"institution-123\");\n    }\n\n    public CompletableFuture<PaymentResult> processPayment(String paymentType, PaymentRequest request) {\n        CompletableFuture<PaymentResult> resultFuture;\n\n        switch (paymentType.toLowerCase()) {\n            case \"creditcard\":\n                resultFuture = ccProcessor.processPayment(request);\n                break;\n            case \"paypal\":\n                resultFuture = paypalProcessor.processPayment(request);\n                break;\n            case \"banktransfer\":\n                resultFuture = bankProcessor.processPayment(request);\n                break;\n            default:\n                resultFuture = CompletableFuture.completedFuture(\n                    new PaymentResult(false, \"Unsupported payment type: \" + paymentType, null, LocalDateTime.now())\n                );\n        }\n\n        return resultFuture;\n    }\n}\n\npublic class TransactionHistoryService {\n    private List<PaymentResult> transactionHistory;\n\n    public TransactionHistoryService() {\n        this.transactionHistory = new ArrayList<>();\n    }\n\n    public void addTransaction(PaymentResult result) {\n        transactionHistory.add(result);\n    }\n\n    public List<PaymentResult> getTransactionHistory() {\n        return new ArrayList<>(transactionHistory);\n    }\n}\n\npublic class RefundProcessingService {\n    public CompletableFuture<PaymentResult> processRefund(String transactionId, double amount) {\n        return CompletableFuture.supplyAsync(() -> {\n            if (transactionId.startsWith(\"CC_\")) {\n                return new PaymentResult(false, \"Credit card refunds not implemented\", null, LocalDateTime.now());\n            } else if (transactionId.startsWith(\"PP_\")) {\n                return new PaymentResult(false, \"PayPal refunds not implemented\", null, LocalDateTime.now());\n            } else if (transactionId.startsWith(\"BT_\")) {\n                return new PaymentResult(false, \"Bank transfer refunds not implemented\", null, LocalDateTime.now());\n            }\n            return new PaymentResult(false, \"Unknown transaction type\", null, LocalDateTime.now());\n        });\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "PaymentProcessingService",
                      ""
                    ],
                    [
                      "TransactionHistoryService",
                      ""
                    ],
                    [
                      "RefundProcessingService",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class PaymentProcessingService {\n    private CreditCardProcessor ccProcessor;\n    private PayPalProcessor paypalProcessor;\n    private BankTransferProcessor bankProcessor;\n\n    public PaymentProcessingService() {\n        this.ccProcessor = new CreditCardProcessor(\"cc-api-key-123\", \"merchant-456\");\n        this.paypalProcessor = new PayPalProcessor(\"paypal-client-789\", \"paypal-secret-abc\", true);\n        this.bankProcessor = new BankTransferProcessor(\"https://bank-api.example.com\", \"institution-123\");\n    }\n\n    public CompletableFuture<PaymentResult> processPayment(String paymentType, PaymentRequest request) {\n        CompletableFuture<PaymentResult> resultFuture;\n\n        switch (paymentType.toLowerCase()) {\n            case \"creditcard\":\n                resultFuture = ccProcessor.processPayment(request);\n                break;\n            case \"paypal\":\n                resultFuture = paypalProcessor.processPayment(request);\n                break;\n            case \"banktransfer\":\n                resultFuture = bankProcessor.processPayment(request);\n                break;\n            default:\n                resultFuture = CompletableFuture.completedFuture(\n                    new PaymentResult(false, \"Unsupported payment type: \" + paymentType, null, LocalDateTime.now())\n                );\n        }\n\n        return resultFuture;\n    }\n}\n\npublic ",
                        "class TransactionHistoryService {\n    private List<PaymentResult> transactionHistory;\n\n    public TransactionHistoryService() {\n        this.transactionHistory = new ArrayList<>();\n    }\n\n    public void addTransaction(PaymentResult result) {\n        transactionHistory.add(result);\n    }\n\n    public List<PaymentResult> getTransactionHistory() {\n        return new ArrayList<>(transactionHistory);\n    }\n}\n\npublic ",
                        "class RefundProcessingService {\n    public CompletableFuture<PaymentResult> processRefund(String transactionId, double amount) {\n        return CompletableFuture.supplyAsync(() -> {\n            if (transactionId.startsWith(\"CC_\")) {\n                return new PaymentResult(false, \"Credit card refunds not implemented\", null, LocalDateTime.now());\n            } else if (transactionId.startsWith(\"PP_\")) {\n                return new PaymentResult(false, \"PayPal refunds not implemented\", null, LocalDateTime.now());\n            } else if (transactionId.startsWith(\"BT_\")) {\n                return new PaymentResult(false, \"Bank transfer refunds not implemented\", null, LocalDateTime.now());\n            }\n            return new PaymentResult(false, \"Unknown transaction type\", null, LocalDateTime.now());\n        });\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public PaymentProcessingService()",
                        "public TransactionHistoryService()"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class PaymentProcessingService",
                        "class TransactionHistoryService",
                        "class RefundProcessingService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 3812,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1766,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2152,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1980,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1753,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2005,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2344,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1465,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2582,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2303,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1954,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "csharp": [
                  "public class DocumentProcessingService\n{\n    private readonly PdfReader _pdfReader;\n    private readonly WordReader _wordReader;\n    private readonly ExcelReader _excelReader;\n\n    public DocumentProcessingService()\n    {\n        _pdfReader = new PdfReader();\n        _wordReader = new WordReader();\n        _excelReader = new ExcelReader();\n    }\n\n    public async Task<string> ProcessDocumentAsync(string filePath, string type)\n    {\n        var typeKey = type.ToLower();\n\n        try\n        {\n            return typeKey switch\n            {\n                \"pdf\" => await _pdfReader.ReadPdfAsync(filePath),\n                \"word\" => await _wordReader.ReadWordAsync(filePath),\n                \"excel\" => await _excelReader.ReadExcelAsync(filePath),\n                _ => throw new ArgumentException($\"Unsupported format: {type}\")\n            };\n        }\n        catch (Exception ex)\n        {\n            return $\"Error processing {type} file {filePath}: {ex.Message}\";\n        }\n    }\n\n    public void ClearCache()\n    {\n        _pdfReader.ClearCache();\n    }\n}\n\npublic class StatisticsService\n{\n    private readonly Dictionary<string, int> _processCount = new Dictionary<string, int>();\n\n    public void IncrementProcessCount(string type)\n    {\n        var typeKey = type.ToLower();\n        _processCount[typeKey] = _processCount.GetValueOrDefault(typeKey, 0) + 1;\n    }\n\n    public Dictionary<string, int> GetProcessingStats() => new Dictionary<string, int>(_processCount);\n}\n\npublic class ErrorLoggingService\n{\n    private readonly List<string> _errorLog = new List<string>();\n\n    public void LogError(string message)\n    {\n        _errorLog.Add(message);\n    }\n\n    public int GetErrorCount() => _errorLog.Count;\n\n    public List<string> GetRecentErrors(int count) => _errorLog.TakeLast(count).ToList();\n}\n\npublic class DocumentProcessor\n{\n    private readonly DocumentProcessingService _documentProcessingService;\n    private readonly StatisticsService _statisticsService;\n    private readonly ErrorLoggingService _errorLoggingService;\n\n    public DocumentProcessor()\n    {\n        _documentProcessingService = new DocumentProcessingService();\n        _statisticsService = new StatisticsService();\n        _errorLoggingService = new ErrorLoggingService();\n    }\n\n    public async Task<string> ProcessDocumentAsync(string filePath, string type)\n    {\n        var result = await _documentProcessingService.ProcessDocumentAsync(filePath, type);\n\n        if (result.StartsWith(\"Error\"))\n        {\n            _errorLoggingService.LogError(result);\n        }\n        else\n        {\n            _statisticsService.IncrementProcessCount(type);\n        }\n\n        return $\"{result} [Count: {_statisticsService.GetProcessingStats()[type.ToLower()] ?? 0}]\";\n    }\n\n    public void ResetCounters()\n    {\n        _statisticsService.GetProcessingStats().Clear();\n        _documentProcessingService.ClearCache();\n        _errorLoggingService.GetRecentErrors(_errorLoggingService.GetErrorCount()).Clear();\n    }\n\n    public Dictionary<string, object> GetComprehensiveReport(PdfReader pdfReader, WordReader wordReader)\n    {\n        return new Dictionary<string, object>\n        {\n            [\"ProcessingStats\"] = _statisticsService.GetProcessingStats(),\n            [\"PdfCacheStats\"] = pdfReader.GetCacheStats(),\n            [\"WordProcessingHistory\"] = wordReader.GetProcessedFiles(),\n            [\"AverageWordProcessingTime\"] = wordReader.GetAverageProcessingTimeMs(),\n            [\"ErrorCount\"] = _errorLoggingService.GetErrorCount(),\n            [\"RecentErrors\"] = _errorLoggingService.GetRecentErrors(5)\n        };\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [],
                  "classes": [
                    [
                      "DocumentProcessingService",
                      ""
                    ],
                    [
                      "StatisticsService",
                      ""
                    ],
                    [
                      "ErrorLoggingService",
                      ""
                    ],
                    [
                      "DocumentProcessor",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class DocumentProcessingService\n{\n    private readonly PdfReader _pdfReader;\n    private readonly WordReader _wordReader;\n    private readonly ExcelReader _excelReader;\n\n    public DocumentProcessingService()\n    {\n        _pdfReader = new PdfReader();\n        _wordReader = new WordReader();\n        _excelReader = new ExcelReader();\n    }\n\n    public async Task<string> ProcessDocumentAsync(string filePath, string type)\n    {\n        var typeKey = type.ToLower();\n\n        try\n        {\n            return typeKey switch\n            {\n                \"pdf\" => await _pdfReader.ReadPdfAsync(filePath),\n                \"word\" => await _wordReader.ReadWordAsync(filePath),\n                \"excel\" => await _excelReader.ReadExcelAsync(filePath),\n                _ => throw new ArgumentException($\"Unsupported format: {type}\")\n            };\n        }\n        catch (Exception ex)\n        {\n            return $\"Error processing {type} file {filePath}: {ex.Message}\";\n        }\n    }\n\n    public void ClearCache()\n    {\n        _pdfReader.ClearCache();\n    }\n}\n\npublic ",
                        "class StatisticsService\n{\n    private readonly Dictionary<string, int> _processCount = new Dictionary<string, int>();\n\n    public void IncrementProcessCount(string type)\n    {\n        var typeKey = type.ToLower();\n        _processCount[typeKey] = _processCount.GetValueOrDefault(typeKey, 0) + 1;\n    }\n\n    public Dictionary<string, int> GetProcessingStats() => new Dictionary<string, int>(_processCount);\n}\n\npublic ",
                        "class ErrorLoggingService\n{\n    private readonly List<string> _errorLog = new List<string>();\n\n    public void LogError(string message)\n    {\n        _errorLog.Add(message);\n    }\n\n    public int GetErrorCount() => _errorLog.Count;\n\n    public List<string> GetRecentErrors(int count) => _errorLog.TakeLast(count).ToList();\n}\n\npublic ",
                        "class DocumentProcessor\n{\n    private readonly DocumentProcessingService _documentProcessingService;\n    private readonly StatisticsService _statisticsService;\n    private readonly ErrorLoggingService _errorLoggingService;\n\n    public DocumentProcessor()\n    {\n        _documentProcessingService = new DocumentProcessingService();\n        _statisticsService = new StatisticsService();\n        _errorLoggingService = new ErrorLoggingService();\n    }\n\n    public async Task<string> ProcessDocumentAsync(string filePath, string type)\n    {\n        var result = await _documentProcessingService.ProcessDocumentAsync(filePath, type);\n\n        if (result.StartsWith(\"Error\"))\n        {\n            _errorLoggingService.LogError(result);\n        }\n        else\n        {\n            _statisticsService.IncrementProcessCount(type);\n        }\n\n        return $\"{result} [Count: {_statisticsService.GetProcessingStats()[type.ToLower()] ?? 0}]\";\n    }\n\n    public void ResetCounters()\n    {\n        _statisticsService.GetProcessingStats().Clear();\n        _documentProcessingService.ClearCache();\n        _errorLoggingService.GetRecentErrors(_errorLoggingService.GetErrorCount()).Clear();\n    }\n\n    public Dictionary<string, object> GetComprehensiveReport(PdfReader pdfReader, WordReader wordReader)\n    {\n        return new Dictionary<string, object>\n        {\n            [\"ProcessingStats\"] = _statisticsService.GetProcessingStats(),\n            [\"PdfCacheStats\"] = pdfReader.GetCacheStats(),\n            [\"WordProcessingHistory\"] = wordReader.GetProcessedFiles(),\n            [\"AverageWordProcessingTime\"] = wordReader.GetAverageProcessingTimeMs(),\n            [\"ErrorCount\"] = _errorLoggingService.GetErrorCount(),\n            [\"RecentErrors\"] = _errorLoggingService.GetRecentErrors(5)\n        };\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public DocumentProcessingService()",
                        "public DocumentProcessor()"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class DocumentProcessingService",
                        "class StatisticsService",
                        "class ErrorLoggingService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 4692,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4536,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3692,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3716,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 8877,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 0,
            "fail": 48,
            "error": 0,
            "accuracy": 0.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 0,
        "total_fail": 48,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "dip--gpt-4o-mini--default": {
    "default": {
      "model": "dip--gpt-4o-mini--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "dip": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 864,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 810,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1061,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 896,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1445,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 950,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 917,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 859,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1245,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 969,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1050,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1043,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1224,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 941,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 864,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 970,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 917,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 877,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1674,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1115,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1418,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1473,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1174,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1496,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1173,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1154,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1296,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 971,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1138,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 914,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1010,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 966,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1001,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 977,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1124,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 909,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 850,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 944,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 849,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 975,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1434,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1187,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1042,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 979,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1188,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1471,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 929,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1253,
              "model": "gpt-4o-mini",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 0,
            "fail": 48,
            "error": 0,
            "accuracy": 0.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 0,
        "total_fail": 48,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "dip--qwen2.5-coder32b-temp0-latest--smell": {
    "smell": {
      "model": "dip--qwen2.5-coder32b-temp0-latest--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "dip": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 833,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class User:\n    def __init__(self, name: str, email: str):\n        self.name = name\n        self.email = email\n\n    def save_to_database(self):\n        print(f\"Saving {self.name} to database\")\n\n    def send_welcome_email(self):\n        print(f\"Sending welcome email to {self.email}\")\n\n    def calculate_discount(self) -> float:\n        return 0.1 if len(self.name) > 5 else 0.05\n\n    def validate_email(self) -> bool:\n        return \"@\" in self.email"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "User"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class User:\n    def __init__(self, name: str, email: str):\n        self.name = name\n        self.email = email\n\n    def save_to_database(self):\n        print(f\"Saving {self.name} to database\")\n\n    def send_welcome_email(self):\n        print(f\"Sending welcome email to {self.email}\")\n\n    def calculate_discount(self) -> float:\n        return 0.1 if len(self.name) > 5 else 0.05\n\n    def validate_email(self) -> bool:\n        return \"@\" in self.email"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, name: str, email: str)",
                        "def save_to_database(self)",
                        "def send_welcome_email(self)",
                        "def calculate_discount(self)",
                        "def validate_email(self)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 731,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "class UserManager {\n    fun createUser(username: String, password: String) {\n        // Code to create a user\n    }\n\n    fun updateUser(userId: Int, username: String, password: String) {\n        // Code to update a user\n    }\n\n    fun deleteUser(userId: Int) {\n        // Code to delete a user\n    }\n\n    fun sendEmailToUser(userId: Int, subject: String, body: String) {\n        // Code to send an email to a user\n    }\n\n    fun logUserActivity(userId: Int, activity: String) {\n        // Code to log user activity\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "UserManager",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class UserManager {\n    fun createUser(username: String, password: String) {\n        // Code to create a user\n    }\n\n    fun updateUser(userId: Int, username: String, password: String) {\n        // Code to update a user\n    }\n\n    fun deleteUser(userId: Int) {\n        // Code to delete a user\n    }\n\n    fun sendEmailToUser(userId: Int, subject: String, body: String) {\n        // Code to send an email to a user\n    }\n\n    fun logUserActivity(userId: Int, activity: String) {\n        // Code to log user activity\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserManager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 796,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1003,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1955,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1451,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2137,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2553,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 401,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 203,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 417,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 479,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1095,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class OrderProcessor:\n    def __init__(self, database):\n        self.database = database\n\n    def process_order(self, order):\n        if not self.validate_order(order):\n            raise ValueError(\"Invalid order\")\n        self.save_order_to_database(order)\n        self.send_confirmation_email(order)\n\n    def validate_order(self, order):\n        return all(item['quantity'] > 0 for item in order['items'])\n\n    def save_order_to_database(self, order):\n        self.database.insert('orders', order)\n\n    def send_confirmation_email(self, order):\n        print(f\"Sending confirmation email to {order['customer_email']}\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "OrderProcessor"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class OrderProcessor:\n    def __init__(self, database):\n        self.database = database\n\n    def process_order(self, order):\n        if not self.validate_order(order):\n            raise ValueError(\"Invalid order\")\n        self.save_order_to_database(order)\n        self.send_confirmation_email(order)\n\n    def validate_order(self, order):\n        return all(item['quantity'] > 0 for item in order['items'])\n\n    def save_order_to_database(self, order):\n        self.database.insert('orders', order)\n\n    def send_confirmation_email(self, order):\n        print(f\"Sending confirmation email to {order['customer_email']}\")"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, database)",
                        "def process_order(self, order)",
                        "def validate_order(self, order)",
                        "def save_order_to_database(self, order)",
                        "def send_confirmation_email(self, order)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 878,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "class UserManagementSystem {\n    private val databaseConnection = DatabaseConnection()\n\n    fun createUser(user: User) {\n        // Code to create a user in the database\n    }\n\n    fun updateUser(user: User) {\n        // Code to update a user in the database\n    }\n\n    fun deleteUser(userId: Int) {\n        // Code to delete a user from the database\n    }\n\n    fun sendWelcomeEmail(user: User) {\n        // Code to send a welcome email to the user\n    }\n\n    fun calculateUserDiscount(user: User): Double {\n        // Code to calculate discount for the user\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "UserManagementSystem",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class UserManagementSystem {\n    private val databaseConnection = DatabaseConnection()\n\n    fun createUser(user: User) {\n        // Code to create a user in the database\n    }\n\n    fun updateUser(user: User) {\n        // Code to update a user in the database\n    }\n\n    fun deleteUser(userId: Int) {\n        // Code to delete a user from the database\n    }\n\n    fun sendWelcomeEmail(user: User) {\n        // Code to send a welcome email to the user\n    }\n\n    fun calculateUserDiscount(user: User): Double {\n        // Code to calculate discount for the user\n    }\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 840,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1115,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 166,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 525,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 525,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 201,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2137,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 10847,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 7106,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4456,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public class UserManager {\n    private DatabaseConnection db;\n\n    public UserManager() {\n        this.db = new DatabaseConnection();\n    }\n\n    public void addUser(String username, String password) {\n        // Code to add a user to the database\n    }\n\n    public boolean validateUser(String username, String password) {\n        // Code to validate user credentials\n        return true;\n    }\n\n    public void sendWelcomeEmail(String email) {\n        // Code to send an email\n    }\n\n    public void updateUserProfile(String username, String newEmail) {\n        // Code to update user profile in the database\n    }\n\n    public void deleteUser(String username) {\n        // Code to delete a user from the database\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "UserManager",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class UserManager {\n    private DatabaseConnection db;\n\n    public UserManager() {\n        this.db = new DatabaseConnection();\n    }\n\n    public void addUser(String username, String password) {\n        // Code to add a user to the database\n    }\n\n    public boolean validateUser(String username, String password) {\n        // Code to validate user credentials\n        return true;\n    }\n\n    public void sendWelcomeEmail(String email) {\n        // Code to send an email\n    }\n\n    public void updateUserProfile(String username, String newEmail) {\n        // Code to update user profile in the database\n    }\n\n    public void deleteUser(String username) {\n        // Code to delete a user from the database\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public UserManager()"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserManager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1178,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 831,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1402,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 818,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1345,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 254,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1630,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1347,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 325,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 167,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 191,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 194,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 738,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class UserManager:\n    def __init__(self, db_connection):\n        self.db_connection = db_connection\n\n    def add_user(self, user_data):\n        # Database operation to add a user\n        pass\n\n    def remove_user(self, user_id):\n        # Database operation to remove a user\n        pass\n\n    def update_user(self, user_id, new_data):\n        # Database operation to update a user\n        pass\n\n    def authenticate_user(self, username, password):\n        # Logic to authenticate a user\n        pass\n\n    def log_activity(self, activity):\n        # Logging logic\n        pass"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "UserManager"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class UserManager:\n    def __init__(self, db_connection):\n        self.db_connection = db_connection\n\n    def add_user(self, user_data):\n        # Database operation to add a user\n        pass\n\n    def remove_user(self, user_id):\n        # Database operation to remove a user\n        pass\n\n    def update_user(self, user_id, new_data):\n        # Database operation to update a user\n        pass\n\n    def authenticate_user(self, username, password):\n        # Logic to authenticate a user\n        pass\n\n    def log_activity(self, activity):\n        # Logging logic\n        pass"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, db_connection)",
                        "def add_user(self, user_data)",
                        "def remove_user(self, user_id)",
                        "def update_user(self, user_id, new_data)",
                        "def authenticate_user(self, username, password)",
                        "def log_activity(self, activity)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserManager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 996,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1131,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1072,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 193,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 183,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 188,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 413,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4536,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3692,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3716,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 8877,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 0,
            "fail": 48,
            "error": 0,
            "accuracy": 0.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 0,
        "total_fail": 48,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "dip--deepseek33b-temp0-latest--default": {
    "default": {
      "model": "dip--deepseek33b-temp0-latest--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "dip": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 684,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "from abc import ABC, abstractmethod\n\nclass EmailService(ABC):\n    @abstractmethod\n    def send_email(self, to: str, subject: str, body: str):\n        pass\n\nclass GmailService(EmailService):\n    def send_email(self, to: str, subject: str, body: str):\n        print(f\"Sending via Gmail: {subject}\")\n\nclass NotificationService:\n    def __init__(self, email_service: EmailService):\n        self.email_service = email_service\n    \n    def send_notification(self, to: str, message: str):\n        self.email_service.send_email(to, \"Notification\", message)"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "EmailService",
                    "GmailService",
                    "NotificationService"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 1386,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 439,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1517,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1057,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 402,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 300,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 529,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2023,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 380,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1458,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 984,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public class MySQLConnection {\n    private String host;\n    private String username;\n    private String password;\n    \n    public MySQLConnection(String host, String username, String password)  {\n        this.host = host;\n        this.username = username;\n        this.password = password;\n    }\n    \n    public void connect() {\n        System.out.println(\"Connecting to MySQL at \" + host);\n    }\n}\n\npublic class QueryExecutor {\n    private MySQLConnection connection;\n    \n    public QueryExecutor(MySQLConnection connection)  {\n        this.connection = connection;\n    }\n    \n    public void executeQuery(String query) {\n        System.out.println(\"Executing MySQL query: \" + query);\n    }\n}",
                  "public class UserService  {\n    private MySQLConnection connection;\n    private QueryExecutor executor;\n    \n    public UserService()  {\n        this.connection = new MySQLConnection(\"localhost\", \"root\", \"password\");\n        this.executor = new QueryExecutor(connection);\n    }\n    \n    public void getUser(int id)  {\n        connection.connect();\n        executor.executeQuery(\"SELECT * FROM users WHERE id = \" + id);\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "MySQLConnection",
                      ""
                    ],
                    [
                      "QueryExecutor",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class MySQLConnection {\n    private String host;\n    private String username;\n    private String password;\n    \n    public MySQLConnection(String host, String username, String password)  {\n        this.host = host;\n        this.username = username;\n        this.password = password;\n    }\n    \n    public void connect() {\n        System.out.println(\"Connecting to MySQL at \" + host);\n    }\n}\n\npublic ",
                        "class QueryExecutor {\n    private MySQLConnection connection;\n    \n    public QueryExecutor(MySQLConnection connection)  {\n        this.connection = connection;\n    }\n    \n    public void executeQuery(String query) {\n        System.out.println(\"Executing MySQL query: \" + query);\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public MySQLConnection(String host, String username, String password)",
                        "public QueryExecutor(MySQLConnection connection)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1680,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2061,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1112,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 299,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 912,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 338,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 334,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 837,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2783,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1369,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1097,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2253,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 708,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "from abc import ABC, abstractmethod\n\nclass PaymentProcessor(ABC):\n    @abstractmethod\n    def process_payment(self, amount: float) -> bool:\n        pass\n\nclass CreditCardProcessor(PaymentProcessor):\n    def process_payment(self, amount: float)  -> bool:\n        print(f\"Processing ${amount} via Credit Card\")\n        return amount > 0\n\nclass PayPalProcessor(PaymentProcessor):\n    def process_payment(self, amount: float)  -> bool:\n        print(f\"Processing ${amount} via PayPal\")\n        return amount > 0\n\nclass PaymentService:\n    def __init__(self, processor: PaymentProcessor):\n        self.processor = processor\n    \n    def make_payment(self, amount: float)  -> bool:\n        return self.processor.process_payment(amount)"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "PaymentProcessor",
                    "CreditCardProcessor",
                    "PayPalProcessor",
                    "PaymentService"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 1495,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 994,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 384,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 335,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 423,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 313,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 436,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2090,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 790,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 752,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "csharp": [
                  "public interface IPaymentProcessor\n{\n    Task<PaymentResult> ProcessPaymentAsync(PaymentRequest request);\n}\n\npublic class CreditCardProcessor : IPaymentProcessor\n{\n    // ... same as before ...\n}\n\npublic class PayPalProcessor : IPaymentProcessor\n{\n    // ... same as before ...\n}\n\npublic class BankTransferProcessor : IPaymentProcessor\n{\n    // ... same as before ...\n}\n\npublic class TransactionManager\n{\n    private readonly List<PaymentResult> _transactionHistory;\n    \n    public TransactionManager()\n    {\n        _transactionHistory = new List<PaymentResult>();\n    }\n    \n    public async Task<PaymentResult> ProcessPaymentAsync(IPaymentProcessor processor, PaymentRequest request)\n    {\n        var result = await processor.ProcessPaymentAsync(request);\n        _transactionHistory.Add(result);\n        return result;\n    }\n    \n    public List<PaymentResult> GetTransactionHistory()\n    {\n        return new List<PaymentResult>(_transactionHistory);\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [
                    "PaymentProcessor"
                  ],
                  "classes": [
                    [
                      "CreditCardProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "PayPalProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "BankTransferProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "TransactionManager",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class CreditCardProcessor : IPaymentProcessor\n{\n    // ... same as before ...\n}\n\npublic ",
                        "class PayPalProcessor : IPaymentProcessor\n{\n    // ... same as before ...\n}\n\npublic ",
                        "class BankTransferProcessor : IPaymentProcessor\n{\n    // ... same as before ...\n}\n\npublic ",
                        "class TransactionManager\n{\n    private readonly List<PaymentResult> _transactionHistory;\n    \n    public TransactionManager()\n    {\n        _transactionHistory = new List<PaymentResult>();\n    }\n    \n    public async Task<PaymentResult> ProcessPaymentAsync(IPaymentProcessor processor, PaymentRequest request)\n    {\n        var result = await processor.ProcessPaymentAsync(request);\n        _transactionHistory.Add(result);\n        return result;\n    }\n    \n    public List<PaymentResult> GetTransactionHistory()\n    {\n        return new List<PaymentResult>(_transactionHistory);\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public TransactionManager()"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class TransactionManager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1736,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 503,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 403,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 295,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 438,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1317,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 393,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2310,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1554,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2004,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3965,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1883,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1582,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 0,
            "fail": 48,
            "error": 0,
            "accuracy": 0.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 0,
        "total_fail": 48,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "dip--gpt-4o-mini--example": {
    "example": {
      "model": "dip--gpt-4o-mini--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "dip": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "DIP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 271,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 204,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 208,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 204,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 192,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 190,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 189,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 192,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 226,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 191,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 188,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 190,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "DIP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 241,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 166,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 173,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 173,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 202,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 190,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 190,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 190,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 208,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 191,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 211,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 195,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 8,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 8,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 8,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "DIP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 201,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 213,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 192,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 272,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 190,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 274,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 204,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 213,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 274,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 191,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 189,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 242,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 191,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 257,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 189,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 284,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 182,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 270,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 223,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 242,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 266,
              "model": "gpt-4o-mini",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 3,
            "fail": 45,
            "error": 0,
            "accuracy": 0.0625
          }
        }
      },
      "overall_stats": {
        "total_pass": 3,
        "total_fail": 45,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "dip--codellama70b-temp0-latest--ensemble": {
    "ensemble": {
      "model": "dip--codellama70b-temp0-latest--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "dip": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2036,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1654,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1517,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1728,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2514,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1622,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2137,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1723,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1614,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2152,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1943,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2154,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1484,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1619,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1469,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2496,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1825,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2122,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2024,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1790,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1610,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1868,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1204,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2094,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2254,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1698,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1756,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1797,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1673,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1925,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2310,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1972,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1610,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1954,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1840,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2058,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1500,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1495,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1924,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1408,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1704,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1551,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1798,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2155,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1422,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2011,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1808,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1982,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 0,
            "fail": 48,
            "error": 0,
            "accuracy": 0.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 0,
        "total_fail": 48,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "dip--deepseek33b-temp0-latest--smell": {
    "smell": {
      "model": "dip--deepseek33b-temp0-latest--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "dip": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 291,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 8,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 8,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 239,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 701,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 681,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1111,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1166,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 800,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1383,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 406,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 513,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 282,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 972,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 784,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 418,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 651,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 385,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 298,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 434,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2783,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1369,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1097,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2253,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 273,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 8,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 8,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1210,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 735,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 426,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 715,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 735,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2090,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 231,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 220,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1784,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 678,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 907,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 680,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 691,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1286,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 310,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 814,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 335,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2004,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3965,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1883,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1582,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 0,
            "fail": 48,
            "error": 0,
            "accuracy": 0.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 0,
        "total_fail": 48,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "dip--codellama70b-temp0-latest--smell": {
    "smell": {
      "model": "dip--codellama70b-temp0-latest--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "dip": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1105,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 232,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2175,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 948,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 393,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1224,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 646,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1085,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 741,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 168,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1890,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 78,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 814,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 223,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1162,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 905,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 755,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 714,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1089,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 977,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 133,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 178,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 906,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 986,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1540,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 938,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1628,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1030,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 636,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 532,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1291,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 567,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2848,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1163,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2421,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1536,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 469,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 992,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1490,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2367,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 490,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 893,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 803,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1706,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1028,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2167,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 6599,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 262,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 0,
            "fail": 48,
            "error": 0,
            "accuracy": 0.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 0,
        "total_fail": 48,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "dip--qwen2.5-coder32b-temp0-latest--ensemble": {
    "ensemble": {
      "model": "dip--qwen2.5-coder32b-temp0-latest--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "dip": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1755,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1832,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1361,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1793,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1689,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1695,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1476,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1750,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2198,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1845,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2229,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1812,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1629,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1504,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1502,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1480,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2005,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2021,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1805,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2100,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1926,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2736,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1964,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2059,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1658,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1770,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1652,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "DIP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1962,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1845,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1894,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1821,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1701,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1933,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1699,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1866,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1902,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1491,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1369,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1702,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1382,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1801,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1846,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1866,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1983,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2007,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1962,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2128,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2321,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 1,
            "fail": 47,
            "error": 0,
            "accuracy": 0.020833333333333332
          }
        }
      },
      "overall_stats": {
        "total_pass": 1,
        "total_fail": 47,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "dip--gpt-4o-mini--ensemble": {
    "ensemble": {
      "model": "dip--gpt-4o-mini--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "dip": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1505,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1502,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1547,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1451,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1301,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1706,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1409,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1685,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1711,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1896,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1794,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1947,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "DIP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1244,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1295,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1431,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1609,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1980,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1882,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1510,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1855,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1745,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1777,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2030,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2191,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1607,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1391,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1529,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1632,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1653,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1418,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1655,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1704,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1599,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1832,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1781,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1894,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1317,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1469,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1509,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1425,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1300,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1389,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1696,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1462,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1720,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1473,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1961,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1559,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 1,
            "fail": 47,
            "error": 0,
            "accuracy": 0.020833333333333332
          }
        }
      },
      "overall_stats": {
        "total_pass": 1,
        "total_fail": 47,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "dip--deepseek33b-temp0-latest--ensemble": {
    "ensemble": {
      "model": "dip--deepseek33b-temp0-latest--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "dip": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1276,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1789,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2028,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1842,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1696,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1463,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1927,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1425,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1937,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1598,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2006,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1738,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1585,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1492,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1845,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1527,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1438,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1591,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1545,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1599,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1391,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1431,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1590,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1505,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1600,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1294,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1941,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1749,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1654,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1763,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1506,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "csharp": [
                  "public interface IPaymentProcessor\n{\n    PaymentResult ProcessPayment(double amount, string credential);\n}\n\npublic class CreditCardProcessor : IPaymentProcessor\n{\n    // ...\n}\n\npublic class PayPalProcessor : IPaymentProcessor\n{\n    // ...\n}",
                  "public class PaymentService\n{\n    private IPaymentProcessor _processor;\n    \n    public PaymentService(IPaymentProcessor processor)\n    {\n        _processor = processor;\n    }\n    \n    // ...\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [
                    "PaymentProcessor"
                  ],
                  "classes": [
                    [
                      "CreditCardProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "PayPalProcessor",
                      "PaymentProcessor"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "interface_segregation",
                      "matches": [
                        "interface IPaymentProcessor\n{\n    PaymentResult ProcessPayment(double amount, string credential);\n}"
                      ]
                    },
                    {
                      "pattern": "small_interfaces",
                      "matches": [
                        "interface IPaymentProcessor\n{\n    PaymentResult ProcessPayment(double amount, string credential);\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1979,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1785,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1881,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2154,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1936,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1427,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1336,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1589,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1420,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "DIP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1937,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1825,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1354,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1233,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1750,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1572,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1490,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1110,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 1,
            "fail": 47,
            "error": 0,
            "accuracy": 0.020833333333333332
          }
        }
      },
      "overall_stats": {
        "total_pass": 1,
        "total_fail": 47,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "dip--codellama70b-temp0-latest--default": {
    "default": {
      "model": "dip--codellama70b-temp0-latest--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "dip": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 326,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 332,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 242,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 319,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 304,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 617,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 297,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 288,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 790,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1144,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 291,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 387,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 446,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 613,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 289,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 624,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 240,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 271,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 251,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 310,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 133,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 178,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 906,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 986,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 293,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 324,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 297,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 320,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 394,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 307,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 292,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 749,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2848,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 559,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1177,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 999,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 711,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 334,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 719,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 942,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 364,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1125,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 561,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 273,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1028,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2167,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 6599,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 262,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 0,
            "fail": 48,
            "error": 0,
            "accuracy": 0.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 0,
        "total_fail": 48,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "dip--codellama70b-temp0-latest--example": {
    "example": {
      "model": "dip--codellama70b-temp0-latest--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "dip": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1388,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class EmailSender:\n    def send_email(self, to: str, subject: str, body: str):\n        print(f\"Sending via Gmail: {subject}\")\n\nclass NotificationService:\n    def __init__(self):\n        self.email_sender = EmailSender()\n    \n    def send_notification(self, to: str, message: str):\n        self.email_sender.send_email(to, \"Notification\", message)"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "EmailSender",
                    "NotificationService"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class EmailSender:\n    def send_email(self, to: str, subject: str, body: str):\n        print(f\"Sending via Gmail: {subject}\")\n\n",
                        "class NotificationService:\n    def __init__(self):\n        self.email_sender = EmailSender()\n    \n    def send_notification(self, to: str, message: str):\n        self.email_sender.send_email(to, \"Notification\", message)"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def send_email(self, to: str, subject: str, body: str)",
                        "def __init__(self)",
                        "def send_notification(self, to: str, message: str)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class NotificationService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 966,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 644,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 259,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 934,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 322,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 523,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 895,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 167,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 291,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 155,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 167,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public class MySQLConnection {\n    private String host;\n    private String username;\n    private String password;\n    \n    public MySQLConnection(String host, String username, String password) {\n        this.host = host;\n        this.username = username;\n        this.password = password;\n    }\n    \n    public void connect() {\n        System.out.println(\"Connecting to MySQL at \" + host);\n    }\n}\n\npublic class QueryExecutor {\n    private MySQLConnection connection;\n    \n    public QueryExecutor(MySQLConnection connection) {\n        this.connection = connection;\n    }\n    \n    public void executeQuery(String query) {\n        System.out.println(\"Executing MySQL query: \" + query);\n    }\n}\n\npublic class UserService {\n    private QueryExecutor executor;\n    \n    public UserService(QueryExecutor executor) {\n        this.executor = executor;\n    }\n    \n    public void getUser(int id) {\n        executor.executeQuery(\"SELECT * FROM users WHERE id = \" + id);\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "MySQLConnection",
                      ""
                    ],
                    [
                      "QueryExecutor",
                      ""
                    ],
                    [
                      "UserService",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class MySQLConnection {\n    private String host;\n    private String username;\n    private String password;\n    \n    public MySQLConnection(String host, String username, String password) {\n        this.host = host;\n        this.username = username;\n        this.password = password;\n    }\n    \n    public void connect() {\n        System.out.println(\"Connecting to MySQL at \" + host);\n    }\n}\n\npublic ",
                        "class QueryExecutor {\n    private MySQLConnection connection;\n    \n    public QueryExecutor(MySQLConnection connection) {\n        this.connection = connection;\n    }\n    \n    public void executeQuery(String query) {\n        System.out.println(\"Executing MySQL query: \" + query);\n    }\n}\n\npublic ",
                        "class UserService {\n    private QueryExecutor executor;\n    \n    public UserService(QueryExecutor executor) {\n        this.executor = executor;\n    }\n    \n    public void getUser(int id) {\n        executor.executeQuery(\"SELECT * FROM users WHERE id = \" + id);\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public MySQLConnection(String host, String username, String password)",
                        "public QueryExecutor(MySQLConnection connection)",
                        "public UserService(QueryExecutor executor)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1901,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class MySQLConnection:\n    def __init__(self, host, username, password):\n        self.host = host\n        self.username = username\n        self.password = password\n    \n    def connect(self):\n        print(f\"Connecting to MySQL at {self.host}\")\n\nclass UserService:\n    def __init__(self):\n        self.connection = MySQLConnection(\"localhost\", \"root\", \"password\")\n    \n    def get_user(self, user_id):\n        self.connection.connect()\n        self.connection.execute_query(f\"SELECT * FROM users WHERE id = {user_id}\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "MySQLConnection",
                    "UserService"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class MySQLConnection:\n    def __init__(self, host, username, password):\n        self.host = host\n        self.username = username\n        self.password = password\n    \n    def connect(self):\n        print(f\"Connecting to MySQL at {self.host}\")\n\n",
                        "class UserService:\n    def __init__(self):\n        self.connection = MySQLConnection(\"localhost\", \"root\", \"password\")\n    \n    def get_user(self, user_id):\n        self.connection.connect()\n        self.connection.execute_query(f\"SELECT * FROM users WHERE id = {user_id}\")"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, host, username, password)",
                        "def connect(self)",
                        "def __init__(self)",
                        "def get_user(self, user_id)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1107,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 399,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 595,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 133,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 133,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 133,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 133,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 133,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 178,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 906,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 986,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 998,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 725,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 529,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 842,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 845,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1144,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1293,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 737,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2848,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 145,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 536,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 408,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 527,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1111,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1217,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 862,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 887,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 133,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 700,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 835,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1028,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2167,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 6599,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "C#",
              "expected_violation": "DIP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 262,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 0,
            "fail": 48,
            "error": 0,
            "accuracy": 0.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 0,
        "total_fail": 48,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "C#": 12
        }
      }
    }
  },
  "srp--qwen2.5-coder32b-temp0-latest--default": {
    "default": {
      "model": "srp--qwen2.5-coder32b-temp0-latest--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "srp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "public class User {\n    private String name;\n    private String email;\n\n    public User(String name, String email) {\n        this.name = name;\n        this.email = email;\n    }\n\n    // Getters and setters for name and email if needed\n}\n\npublic class UserService {\n    public void saveToDatabase(User user) {\n        System.out.println(\"Saving user \" + user.getName() + \" to database\");\n    }\n    \n    public void sendWelcomeEmail(User user) {\n        System.out.println(\"Sending welcome email to \" + user.getEmail());\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "User",
                      ""
                    ],
                    [
                      "UserService",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class User {\n    private String name;\n    private String email;\n\n    public User(String name, String email) {\n        this.name = name;\n        this.email = email;\n    }\n\n    // Getters and setters for name and email if needed\n}\n\npublic ",
                        "class UserService {\n    public void saveToDatabase(User user) {\n        System.out.println(\"Saving user \" + user.getName() + \" to database\");\n    }\n    \n    public void sendWelcomeEmail(User user) {\n        System.out.println(\"Sending welcome email to \" + user.getEmail());\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public User(String name, String email)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1265,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "public class Employee {\n    private String name;\n    private double baseSalary;\n    private int yearsOfService;\n\n    public Employee(String name, double baseSalary, int yearsOfService) {\n        this.name = name;\n        this.baseSalary = baseSalary;\n        this.yearsOfService = yearsOfService;\n    }\n\n    public double calculateSalary() {\n        return baseSalary + (yearsOfService * 1000);\n    }\n}\n\npublic class PaySlipPrinter {\n    private Employee employee;\n\n    public PaySlipPrinter(Employee employee) {\n        this.employee = employee;\n    }\n\n    public void printPaySlip() {\n        System.out.println(\"Pay slip for \" + employee.getName() + \": $\" + employee.calculateSalary());\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Employee",
                      ""
                    ],
                    [
                      "PaySlipPrinter",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Employee {\n    private String name;\n    private double baseSalary;\n    private int yearsOfService;\n\n    public Employee(String name, double baseSalary, int yearsOfService) {\n        this.name = name;\n        this.baseSalary = baseSalary;\n        this.yearsOfService = yearsOfService;\n    }\n\n    public double calculateSalary() {\n        return baseSalary + (yearsOfService * 1000);\n    }\n}\n\npublic ",
                        "class PaySlipPrinter {\n    private Employee employee;\n\n    public PaySlipPrinter(Employee employee) {\n        this.employee = employee;\n    }\n\n    public void printPaySlip() {\n        System.out.println(\"Pay slip for \" + employee.getName() + \": $\" + employee.calculateSalary());\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public Employee(String name, double baseSalary, int yearsOfService)",
                        "public PaySlipPrinter(Employee employee)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1409,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "public class Book {\n    private String title;\n    private String author;\n    private String content;\n\n    public Book(String title, String author, String content) {\n        this.title = title;\n        this.author = author;\n        this.content = content;\n    }\n\n    // Getters for title, author, and content if needed\n}\n\npublic class BookPrinter {\n    public void printBook(Book book) {\n        System.out.println(\"Title: \" + book.getTitle());\n        System.out.println(\"Author: \" + book.getAuthor());\n        System.out.println(\"Content: \" + book.getContent());\n    }\n}\n\npublic class BookSaver {\n    public void saveToFile(Book book, String filename) {\n        System.out.println(\"Saving book to \" + filename);\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Book",
                      ""
                    ],
                    [
                      "BookPrinter",
                      ""
                    ],
                    [
                      "BookSaver",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Book {\n    private String title;\n    private String author;\n    private String content;\n\n    public Book(String title, String author, String content) {\n        this.title = title;\n        this.author = author;\n        this.content = content;\n    }\n\n    // Getters for title, author, and content if needed\n}\n\npublic ",
                        "class BookPrinter {\n    public void printBook(Book book) {\n        System.out.println(\"Title: \" + book.getTitle());\n        System.out.println(\"Author: \" + book.getAuthor());\n        System.out.println(\"Content: \" + book.getContent());\n    }\n}\n\npublic ",
                        "class BookSaver {\n    public void saveToFile(Book book, String filename) {\n        System.out.println(\"Saving book to \" + filename);\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public Book(String title, String author, String content)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1477,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 793,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "public class ReportGenerator {\n    private DataSource dataSource;\n    \n    public ReportGenerator(DataSource dataSource) {\n        this.dataSource = dataSource;\n    }\n    \n    public String generateMonthlyReport(String month) {\n        List<SalesData> salesData = dataSource.getSalesDataForMonth(month);\n        \n        StringBuilder report = new StringBuilder();\n        report.append(\"Monthly Sales Report - \" + month + \"\\n\");\n        report.append(\"================================\\n\\n\");\n        \n        double totalSales = 0;\n        Map<String, Double> productSales = new HashMap<>();\n        \n        for (SalesData data : salesData) {\n            totalSales += data.getAmount();\n            productSales.put(data.getProductName(), \n                productSales.getOrDefault(data.getProductName(), 0.0) + data.getAmount());\n        }\n        \n        report.append(\"Total Sales: $\" + String.format(\"%.2f\", totalSales) + \"\\n\\n\");\n        report.append(\"Sales by Product:\\n\");\n        report.append(\"-----------------\\n\");\n        \n        for (Map.Entry<String, Double> entry : productSales.entrySet()) {\n            report.append(entry.getKey() + \": $\" + String.format(\"%.2f\", entry.getValue()) + \"\\n\");\n        }\n        \n        report.append(\"\\nTop Performing Products:\\n\");\n        report.append(\"------------------------\\n\");\n        \n        productSales.entrySet().stream()\n            .sorted(Map.Entry.<String, Double>comparingByValue().reversed())\n            .limit(5)\n            .forEach(entry -> report.append(entry.getKey() + \": $\" + \n                String.format(\"%.2f\", entry.getValue()) + \"\\n\"));\n        \n        return report.toString();\n    }\n}\n\npublic class ReportSender {\n    private EmailService emailService;\n    \n    public ReportSender(EmailService emailService) {\n        this.emailService = emailService;\n    }\n    \n    public void sendReport(String recipientEmail, String month, String reportContent) {\n        String subject = \"Monthly Sales Report - \" + month;\n        String body = \"Please find attached the monthly sales report.\\n\\n\" + reportContent;\n        \n        emailService.sendEmail(recipientEmail, subject, body);\n        \n        System.out.println(\"Report sent successfully to \" + recipientEmail);\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "ReportGenerator",
                      ""
                    ],
                    [
                      "ReportSender",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class ReportGenerator {\n    private DataSource dataSource;\n    \n    public ReportGenerator(DataSource dataSource) {\n        this.dataSource = dataSource;\n    }\n    \n    public String generateMonthlyReport(String month) {\n        List<SalesData> salesData = dataSource.getSalesDataForMonth(month);\n        \n        StringBuilder report = new StringBuilder();\n        report.append(\"Monthly Sales Report - \" + month + \"\\n\");\n        report.append(\"================================\\n\\n\");\n        \n        double totalSales = 0;\n        Map<String, Double> productSales = new HashMap<>();\n        \n        for (SalesData data : salesData) {\n            totalSales += data.getAmount();\n            productSales.put(data.getProductName(), \n                productSales.getOrDefault(data.getProductName(), 0.0) + data.getAmount());\n        }\n        \n        report.append(\"Total Sales: $\" + String.format(\"%.2f\", totalSales) + \"\\n\\n\");\n        report.append(\"Sales by Product:\\n\");\n        report.append(\"-----------------\\n\");\n        \n        for (Map.Entry<String, Double> entry : productSales.entrySet()) {\n            report.append(entry.getKey() + \": $\" + String.format(\"%.2f\", entry.getValue()) + \"\\n\");\n        }\n        \n        report.append(\"\\nTop Performing Products:\\n\");\n        report.append(\"------------------------\\n\");\n        \n        productSales.entrySet().stream()\n            .sorted(Map.Entry.<String, Double>comparingByValue().reversed())\n            .limit(5)\n            .forEach(entry -> report.append(entry.getKey() + \": $\" + \n                String.format(\"%.2f\", entry.getValue()) + \"\\n\"));\n        \n        return report.toString();\n    }\n}\n\npublic ",
                        "class ReportSender {\n    private EmailService emailService;\n    \n    public ReportSender(EmailService emailService) {\n        this.emailService = emailService;\n    }\n    \n    public void sendReport(String recipientEmail, String month, String reportContent) {\n        String subject = \"Monthly Sales Report - \" + month;\n        String body = \"Please find attached the monthly sales report.\\n\\n\" + reportContent;\n        \n        emailService.sendEmail(recipientEmail, subject, body);\n        \n        System.out.println(\"Report sent successfully to \" + recipientEmail);\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public ReportGenerator(DataSource dataSource)",
                        "public ReportSender(EmailService emailService)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 3203,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 967,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1109,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 754,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1125,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4080,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3702,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4303,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "class User:\n    def __init__(self, name, email):\n        self.name = name\n        self.email = email\n\nclass DatabaseManager:\n    @staticmethod\n    def save_to_database(user):\n        print(f\"Saving user {user.name} to database\")\n\nclass EmailService:\n    @staticmethod\n    def send_welcome_email(user):\n        print(f\"Sending welcome email to {user.email}\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "User",
                    "DatabaseManager",
                    "EmailService"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class User:\n    def __init__(self, name, email):\n        self.name = name\n        self.email = email\n\n",
                        "class DatabaseManager:\n    @staticmethod\n    def save_to_database(user):\n        print(f\"Saving user {user.name} to database\")\n\n",
                        "class EmailService:\n    @staticmethod\n    def send_welcome_email(user):\n        print(f\"Sending welcome email to {user.email}\")"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, name, email)",
                        "def save_to_database(user)",
                        "def send_welcome_email(user)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class DatabaseManager",
                        "class EmailService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1009,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "class Employee:\n    def __init__(self, name, base_salary, years_of_service):\n        self.name = name\n        self.base_salary = base_salary\n        self.years_of_service = years_of_service\n    \n    def calculate_salary(self):\n        return self.base_salary + (self.years_of_service * 1000)\n\nclass PaySlipPrinter:\n    @staticmethod\n    def print_pay_slip(employee):\n        print(f\"Pay slip for {employee.name}: ${employee.calculate_salary()}\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Employee",
                    "PaySlipPrinter"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Employee:\n    def __init__(self, name, base_salary, years_of_service):\n        self.name = name\n        self.base_salary = base_salary\n        self.years_of_service = years_of_service\n    \n    def calculate_salary(self):\n        return self.base_salary + (self.years_of_service * 1000)\n\n",
                        "class PaySlipPrinter:\n    @staticmethod\n    def print_pay_slip(employee):\n        print(f\"Pay slip for {employee.name}: ${employee.calculate_salary()}\")"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, name, base_salary, years_of_service)",
                        "def calculate_salary(self)",
                        "def print_pay_slip(employee)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1107,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "class Book:\n    def __init__(self, title, author, content):\n        self.title = title\n        self.author = author\n        self.content = content\n\nclass BookPrinter:\n    @staticmethod\n    def print_book(book):\n        print(f\"Title: {book.title}\")\n        print(f\"Author: {book.author}\")\n        print(f\"Content: {book.content}\")\n\nclass BookSaver:\n    @staticmethod\n    def save_to_file(book, filename):\n        with open(filename, 'w') as file:\n            file.write(book.content)"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Book",
                    "BookPrinter",
                    "BookSaver"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Book:\n    def __init__(self, title, author, content):\n        self.title = title\n        self.author = author\n        self.content = content\n\n",
                        "class BookPrinter:\n    @staticmethod\n    def print_book(book):\n        print(f\"Title: {book.title}\")\n        print(f\"Author: {book.author}\")\n        print(f\"Content: {book.content}\")\n\n",
                        "class BookSaver:\n    @staticmethod\n    def save_to_file(book, filename):\n        with open(filename, 'w') as file:\n            file.write(book.content)"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, title, author, content)",
                        "def print_book(book)",
                        "def save_to_file(book, filename)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1365,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1336,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2058,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 5584,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "import os\nimport csv\nimport shutil\nfrom datetime import datetime\nfrom typing import List\n\nclass FileReader:\n    @staticmethod\n    def read_file(file_path: str) -> List[str]:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return [line.strip() for line in file.readlines()]\n\nclass FileWriter:\n    @staticmethod\n    def write_file(file_path: str, lines: List[str]):\n        with open(file_path, 'w', encoding='utf-8') as file:\n            for line in lines:\n                file.write(line + '\\n')\n\nclass FileArchiver:\n    @staticmethod\n    def archive_file(original_path: str, archive_directory: str) -> str:\n        timestamp = int(datetime.now().timestamp())\n        filename = os.path.basename(original_path)\n        archive_name = f\"archive_{timestamp}_{filename}\"\n        archive_path = os.path.join(archive_directory, archive_name)\n        \n        try:\n            shutil.move(original_path, archive_path)\n            print(f\"Archived original file: {filename} -> {archive_name}\")\n        except Exception as e:\n            print(f\"Failed to archive file: {filename} - {str(e)}\")\n        \n        return archive_name\n\nclass CSVProcessor:\n    @staticmethod\n    def process_csv(lines: List[str]) -> List[str]:\n        processed_lines = [\"PROCESSED_HEADER,ORIGINAL_DATA,TIMESTAMP\"]\n        \n        for i in range(1, len(lines)):\n            line = lines[i]\n            parts = line.split(',')\n            \n            processed_line = \"PROCESSED\"\n            \n            for part in parts:\n                processed_line += \",\" + part.strip().upper()\n            \n            processed_line += \",\" + str(datetime.now())\n            processed_lines.append(processed_line)\n        \n        return processed_lines\n\nclass FileProcessor:\n    def __init__(self, input_directory: str, output_directory: str, archive_directory: str):\n        self.input_directory = input_directory\n        self.output_directory = output_directory\n        self.archive_directory = archive_directory\n    \n    def process_and_archive_files(self):\n        csv_files = [f for f in os.listdir(self.input_directory) if f.endswith('.csv')]\n        \n        if not csv_files:\n            print(\"No CSV files found to process\")\n            return\n        \n        for filename in csv_files:\n            try:\n                file_path = os.path.join(self.input_directory, filename)\n                lines = FileReader.read_file(file_path)\n                processed_lines = CSVProcessor.process_csv(lines)\n                \n                output_filename = f\"processed_{filename}\"\n                output_path = os.path.join(self.output_directory, output_filename)\n                FileWriter.write_file(output_path, processed_lines)\n                \n                print(f\"Processed file: {filename} -> {output_filename}\")\n                \n                archive_name = FileArchiver.archive_file(file_path, self.archive_directory)\n                \n            except Exception as e:\n                print(f\"Error processing file {filename}: {str(e)}\")\n    \n    def get_processing_history(self) -> List[str]:\n        history = []\n        \n        if os.path.exists(self.archive_directory):\n            for filename in os.listdir(self.archive_directory):\n                file_path = os.path.join(self.archive_directory, filename)\n                mod_time = datetime.fromtimestamp(os.path.getmtime(file_path))\n                history.append(f\"Archived: {filename} at {mod_time}\")\n        \n        return history"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "FileReader",
                    "FileWriter",
                    "FileArchiver",
                    "CSVProcessor",
                    "FileProcessor"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class FileReader:\n    @staticmethod\n    def read_file(file_path: str) -> List[str]:\n        with open(file_path, 'r', encoding='utf-8') as file:\n            return [line.strip() for line in file.readlines()]\n\n",
                        "class FileWriter:\n    @staticmethod\n    def write_file(file_path: str, lines: List[str]):\n        with open(file_path, 'w', encoding='utf-8') as file:\n            for line in lines:\n                file.write(line + '\\n')\n\n",
                        "class FileArchiver:\n    @staticmethod\n    def archive_file(original_path: str, archive_directory: str) -> str:\n        timestamp = int(datetime.now().timestamp())\n        filename = os.path.basename(original_path)\n        archive_name = f\"archive_{timestamp}_{filename}\"\n        archive_path = os.path.join(archive_directory, archive_name)\n        \n        try:\n            shutil.move(original_path, archive_path)\n            print(f\"Archived original file: {filename} -> {archive_name}\")\n        except Exception as e:\n            print(f\"Failed to archive file: {filename} - {str(e)}\")\n        \n        return archive_name\n\n",
                        "class CSVProcessor:\n    @staticmethod\n    def process_csv(lines: List[str]) -> List[str]:\n        processed_lines = [\"PROCESSED_HEADER,ORIGINAL_DATA,TIMESTAMP\"]\n        \n        for i in range(1, len(lines)):\n            line = lines[i]\n            parts = line.split(',')\n            \n            processed_line = \"PROCESSED\"\n            \n            for part in parts:\n                processed_line += \",\" + part.strip().upper()\n            \n            processed_line += \",\" + str(datetime.now())\n            processed_lines.append(processed_line)\n        \n        return processed_lines\n\n",
                        "class FileProcessor:\n    def __init__(self, input_directory: str, output_directory: str, archive_directory: str):\n        self.input_directory = input_directory\n        self.output_directory = output_directory\n        self.archive_directory = archive_directory\n    \n    def process_and_archive_files(self):\n        csv_files = [f for f in os.listdir(self.input_directory) if f.endswith('.csv')]\n        \n        if not csv_files:\n            print(\"No CSV files found to process\")\n            return\n        \n        for filename in csv_files:\n            try:\n                file_path = os.path.join(self.input_directory, filename)\n                lines = FileReader.read_file(file_path)\n                processed_lines = CSVProcessor.process_csv(lines)\n                \n                output_filename = f\"processed_{filename}\"\n                output_path = os.path.join(self.output_directory, output_filename)\n                FileWriter.write_file(output_path, processed_lines)\n                \n                print(f\"Processed file: {filename} -> {output_filename}\")\n                \n                archive_name = FileArchiver.archive_file(file_path, self.archive_directory)\n                \n            except Exception as e:\n                print(f\"Error processing file {filename}: {str(e)}\")\n    \n    def get_processing_history(self) -> List[str]:\n        history = []\n        \n        if os.path.exists(self.archive_directory):\n            for filename in os.listdir(self.archive_directory):\n                file_path = os.path.join(self.archive_directory, filename)\n                mod_time = datetime.fromtimestamp(os.path.getmtime(file_path))\n                history.append(f\"Archived: {filename} at {mod_time}\")\n        \n        return history"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def read_file(file_path: str)",
                        "def write_file(file_path: str, lines: List[str])",
                        "def archive_file(original_path: str, archive_directory: str)",
                        "def process_csv(lines: List[str])",
                        "def __init__(self, input_directory: str, output_directory: str, archive_directory: str)",
                        "def process_and_archive_files(self)",
                        "def get_processing_history(self)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 4649,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3912,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "class Order:\n    def __init__(self, order_data):\n        self.data = order_data\n\nclass DatabaseManager:\n    def initialize_database(self):\n        # Initialize database logic here\n        pass\n    \n    def save_order_to_database(self, order):\n        # Save order to database logic here\n        pass\n    \n    def update_order_in_database(self, order):\n        # Update order in database logic here\n        pass\n    \n    def get_customer_credit_limit(self, customer_id):\n        # Get customer credit limit logic here\n        pass\n    \n    def get_customer_outstanding_amount(self, customer_id):\n        # Get customer outstanding amount logic here\n        pass\n    \n    def update_inventory(self, order):\n        # Update inventory logic here\n        pass\n\nclass EmailService:\n    def send_email(self, to_email, subject, body):\n        # Send email logic here\n        pass\n    \n    def send_order_confirmation_email(self, order):\n        # Send order confirmation email logic here\n        pass\n    \n    def send_status_update_email(self, order):\n        # Send status update email logic here\n        pass\n\nclass InvoiceGenerator:\n    def generate_invoice(self, order):\n        # Generate invoice logic here\n        pass\n\nclass OrderValidator:\n    def validate_order(self, order):\n        # Validate order logic here\n        pass\n\nclass ActivityLogger:\n    def log_activity(self, order, activity):\n        # Log activity logic here\n        pass\n\nclass OrderManager:\n    def __init__(self):\n        self.database_manager = DatabaseManager()\n        self.email_service = EmailService()\n        self.invoice_generator = InvoiceGenerator()\n        self.order_validator = OrderValidator()\n        self.activity_logger = ActivityLogger()\n\n    def add_order(self, order_data):\n        order = Order(order_data)\n        if not self.order_validator.validate_order(order):\n            raise ValueError(\"Invalid order\")\n        \n        self.database_manager.save_order_to_database(order)\n        self.email_service.send_order_confirmation_email(order)\n        self.invoice_generator.generate_invoice(order)\n        self.database_manager.update_inventory(order)\n        self.activity_logger.log_activity(order, \"Order added\")\n\n    def update_order_status(self, order_id, new_status):\n        # Update order status logic here\n        pass\n\n# Example usage:\norder_manager = OrderManager()\norder_data = {\n    'id': 1,\n    'customer': {'name': 'John Doe', 'email': 'john.doe@example.com'},\n    'items': [{'product_id': 101, 'quantity': 2}],\n    'total_amount': 150.0\n}\norder_manager.add_order(order_data)"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Order",
                    "DatabaseManager",
                    "EmailService",
                    "InvoiceGenerator",
                    "OrderValidator",
                    "ActivityLogger",
                    "OrderManager"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Order:\n    def __init__(self, order_data):\n        self.data = order_data\n\n",
                        "class DatabaseManager:\n    def initialize_database(self):\n        # Initialize database logic here\n        pass\n    \n    def save_order_to_database(self, order):\n        # Save order to database logic here\n        pass\n    \n    def update_order_in_database(self, order):\n        # Update order in database logic here\n        pass\n    \n    def get_customer_credit_limit(self, customer_id):\n        # Get customer credit limit logic here\n        pass\n    \n    def get_customer_outstanding_amount(self, customer_id):\n        # Get customer outstanding amount logic here\n        pass\n    \n    def update_inventory(self, order):\n        # Update inventory logic here\n        pass\n\n",
                        "class EmailService:\n    def send_email(self, to_email, subject, body):\n        # Send email logic here\n        pass\n    \n    def send_order_confirmation_email(self, order):\n        # Send order confirmation email logic here\n        pass\n    \n    def send_status_update_email(self, order):\n        # Send status update email logic here\n        pass\n\n",
                        "class InvoiceGenerator:\n    def generate_invoice(self, order):\n        # Generate invoice logic here\n        pass\n\n",
                        "class OrderValidator:\n    def validate_order(self, order):\n        # Validate order logic here\n        pass\n\n",
                        "class ActivityLogger:\n    def log_activity(self, order, activity):\n        # Log activity logic here\n        pass\n\n",
                        "class OrderManager:\n    def __init__(self):\n        self.database_manager = DatabaseManager()\n        self.email_service = EmailService()\n        self.invoice_generator = InvoiceGenerator()\n        self.order_validator = OrderValidator()\n        self.activity_logger = ActivityLogger()\n\n    def add_order(self, order_data):\n        order = Order(order_data)\n        if not self.order_validator.validate_order(order):\n            raise ValueError(\"Invalid order\")\n        \n        self.database_manager.save_order_to_database(order)\n        self.email_service.send_order_confirmation_email(order)\n        self.invoice_generator.generate_invoice(order)\n        self.database_manager.update_inventory(order)\n        self.activity_logger.log_activity(order, \"Order added\")\n\n    def update_order_status(self, order_id, new_status):\n        # Update order status logic here\n        pass\n\n# Example usage:\norder_manager = OrderManager()\norder_data = {\n    'id': 1,\n    'customer': {'name': 'John Doe', 'email': 'john.doe@example.com'},\n    'items': [{'product_id': 101, 'quantity': 2}],\n    'total_amount': 150.0\n}\norder_manager.add_order(order_data)"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, order_data)",
                        "def initialize_database(self)",
                        "def save_order_to_database(self, order)",
                        "def update_order_in_database(self, order)",
                        "def get_customer_credit_limit(self, customer_id)",
                        "def get_customer_outstanding_amount(self, customer_id)",
                        "def update_inventory(self, order)",
                        "def send_email(self, to_email, subject, body)",
                        "def send_order_confirmation_email(self, order)",
                        "def send_status_update_email(self, order)",
                        "def generate_invoice(self, order)",
                        "def validate_order(self, order)",
                        "def log_activity(self, order, activity)",
                        "def __init__(self)",
                        "def add_order(self, order_data)",
                        "def update_order_status(self, order_id, new_status)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class DatabaseManager",
                        "class EmailService",
                        "class OrderManager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 3496,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3275,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3651,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "import logging\n\nlogging.basicConfig(filename='event_system.log', level=logging.INFO)\n\ndef process_payment(self, user_email: str, amount: float) -> bool:\n    try:\n        print(f\"Processing payment of ${amount} for user {user_email}\")\n        return self.random.random() > 0.1\n    except Exception as e:\n        logging.error(f\"Payment processing failed for user {user_email}: {str(e)}\")\n        return False",
                  "import bcrypt\n\ndef hash_password(self, password: str) -> bytes:\n    salt = bcrypt.gensalt()\n    hashed_password = bcrypt.hashpw(password.encode('utf-8'), salt)\n    return hashed_password\n\ndef authenticate_user(self, email: str, password: str) -> bool:\n    user = self.registered_users.get(email)\n    if user is None:\n        logging.warning(f\"Authentication failed for unknown user {email}\")\n        return False\n    try:\n        return bcrypt.checkpw(password.encode('utf-8'), user.password_hash)\n    except Exception as e:\n        logging.error(f\"Error during authentication for user {email}: {str(e)}\")\n        return False"
                ]
              },
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3557,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 594,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "class Employee(private val name: String, private val baseSalary: Double, private val yearsOfService: Int) {\n    \n    fun calculateSalary(): Double {\n        return baseSalary + (yearsOfService * 1000)\n    }\n}\n\nclass PaySlipPrinter(private val employee: Employee) {\n    \n    fun printPaySlip() {\n        println(\"Pay slip for ${employee.name}: $${employee.calculateSalary()}\")\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Employee",
                      ""
                    ],
                    [
                      "PaySlipPrinter",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Employee(private val name: String, private val baseSalary: Double, private val yearsOfService: Int) {\n    \n    fun calculateSalary(): Double {\n        return baseSalary + (yearsOfService * 1000)\n    }\n}\n\n",
                        "class PaySlipPrinter(private val employee: Employee) {\n    \n    fun printPaySlip() {\n        println(\"Pay slip for ${employee.name}: $${employee.calculateSalary()}\")\n    }\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1244,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "class Book(private val title: String, private val author: String, private val content: String) {\n    // Only responsible for holding data about the book\n}\n\nclass BookPrinter(private val book: Book) {\n    fun printBook() {\n        println(\"Title: ${book.title}\")\n        println(\"Author: ${book.author}\")\n        println(\"Content: ${book.content}\")\n    }\n}\n\nclass BookSaver(private val book: Book) {\n    fun saveToFile(filename: String) {\n        println(\"Saving book to $filename\")\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Book",
                      ""
                    ],
                    [
                      "BookPrinter",
                      ""
                    ],
                    [
                      "BookSaver",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Book(private val title: String, private val author: String, private val content: String) {\n    // Only responsible for holding data about the book\n}\n\n",
                        "class BookPrinter(private val book: Book) {\n    fun printBook() {\n        println(\"Title: ${book.title}\")\n        println(\"Author: ${book.author}\")\n        println(\"Content: ${book.content}\")\n    }\n}\n\n",
                        "class BookSaver(private val book: Book) {\n    fun saveToFile(filename: String) {\n        println(\"Saving book to $filename\")\n    }\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1237,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "class Product(private val name: String, private val price: Double) {\n    fun applyDiscount(percentage: Double): Double {\n        return price * (1 - percentage / 100)\n    }\n}\n\nclass ProductDisplay(private val product: Product) {\n    fun displayProduct() {\n        println(\"Product: ${product.name}, Price: \\$${product.price}\")\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Product",
                      ""
                    ],
                    [
                      "ProductDisplay",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Product(private val name: String, private val price: Double) {\n    fun applyDiscount(percentage: Double): Double {\n        return price * (1 - percentage / 100)\n    }\n}\n\n",
                        "class ProductDisplay(private val product: Product) {\n    fun displayProduct() {\n        println(\"Product: ${product.name}, Price: \\$${product.price}\")\n    }\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 984,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "import java.util.*\n\ndata class SalesData(\n    val productName: String,\n    val amount: Double,\n    val date: Date\n)\n\ninterface DataSource {\n    fun getSalesDataForMonth(month: String): List<SalesData>\n}\n\ninterface EmailService {\n    fun sendEmail(to: String, subject: String, body: String)\n}\n\nclass ReportGenerator(private val dataSource: DataSource) {\n\n    fun generateMonthlyReport(month: String): String {\n        val salesData = dataSource.getSalesDataForMonth(month)\n\n        val report = StringBuilder().apply {\n            append(\"Monthly Sales Report - $month\\n\")\n            append(\"================================\\n\\n\")\n        }\n\n        var totalSales = 0.0\n        val productSales = mutableMapOf<String, Double>()\n\n        salesData.forEach { data ->\n            totalSales += data.amount\n            productSales[data.productName] = productSales.getOrDefault(data.productName, 0.0) + data.amount\n        }\n\n        report.apply {\n            append(\"Total Sales: $${String.format(\"%.2f\", totalSales)}\\n\\n\")\n            append(\"Sales by Product:\\n\")\n            append(\"-----------------\\n\")\n        }\n\n        productSales.forEach { (product, amount) ->\n            report.append(\"$product: $${String.format(\"%.2f\", amount)}\\n\")\n        }\n\n        report.apply {\n            append(\"\\nTop Performing Products:\\n\")\n            append(\"------------------------\\n\")\n        }\n\n        productSales.entries\n            .sortedByDescending { it.value }\n            .take(5)\n            .forEach { (product, amount) ->\n                report.append(\"$product: $${String.format(\"%.2f\", amount)}\\n\")\n            }\n\n        return report.toString()\n    }\n}\n\nclass ReportSender(private val emailService: EmailService) {\n\n    fun sendReport(recipientEmail: String, month: String, reportContent: String) {\n        val subject = \"Monthly Sales Report - $month\"\n        val body = \"Please find attached the monthly sales report.\\n\\n$reportContent\"\n\n        emailService.sendEmail(recipientEmail, subject, body)\n\n        println(\"Report sent successfully to $recipientEmail\")\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "DataSource",
                    "EmailService"
                  ],
                  "classes": [
                    [
                      "SalesData",
                      ""
                    ],
                    [
                      "ReportGenerator",
                      ""
                    ],
                    [
                      "ReportSender",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class SalesData(\n    val productName: String,\n    val amount: Double,\n    val date: Date\n)\n\ninterface DataSource {\n    fun getSalesDataForMonth(month: String): List<SalesData>\n}\n\ninterface EmailService {\n    fun sendEmail(to: String, subject: String, body: String)\n}\n\n",
                        "class ReportGenerator(private val dataSource: DataSource) {\n\n    fun generateMonthlyReport(month: String): String {\n        val salesData = dataSource.getSalesDataForMonth(month)\n\n        val report = StringBuilder().apply {\n            append(\"Monthly Sales Report - $month\\n\")\n            append(\"================================\\n\\n\")\n        }\n\n        var totalSales = 0.0\n        val productSales = mutableMapOf<String, Double>()\n\n        salesData.forEach { data ->\n            totalSales += data.amount\n            productSales[data.productName] = productSales.getOrDefault(data.productName, 0.0) + data.amount\n        }\n\n        report.apply {\n            append(\"Total Sales: $${String.format(\"%.2f\", totalSales)}\\n\\n\")\n            append(\"Sales by Product:\\n\")\n            append(\"-----------------\\n\")\n        }\n\n        productSales.forEach { (product, amount) ->\n            report.append(\"$product: $${String.format(\"%.2f\", amount)}\\n\")\n        }\n\n        report.apply {\n            append(\"\\nTop Performing Products:\\n\")\n            append(\"------------------------\\n\")\n        }\n\n        productSales.entries\n            .sortedByDescending { it.value }\n            .take(5)\n            .forEach { (product, amount) ->\n                report.append(\"$product: $${String.format(\"%.2f\", amount)}\\n\")\n            }\n\n        return report.toString()\n    }\n}\n\n",
                        "class ReportSender(private val emailService: EmailService) {\n\n    fun sendReport(recipientEmail: String, month: String, reportContent: String) {\n        val subject = \"Monthly Sales Report - $month\"\n        val body = \"Please find attached the monthly sales report.\\n\\n$reportContent\"\n\n        emailService.sendEmail(recipientEmail, subject, body)\n\n        println(\"Report sent successfully to $recipientEmail\")\n    }\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 3038,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "class UserManager {\n    private val users = mutableMapOf<String, User>()\n    \n    fun createUser(username: String, password: String, email: String) {\n        // existing code...\n    }\n    \n    fun updateUserEmail(username: String, newEmail: String) {\n        // existing code...\n    }\n    \n    fun getAllUsers(): List<User> {\n        return users.values.toList()\n    }\n\n    private fun isValidEmail(email: String): Boolean {\n        // existing code...\n    }\n    \n    private fun hashPassword(password: String): String {\n        // existing code...\n    }\n}\n\nclass SessionManager(private val userManager: UserManager) {\n    private val sessions = mutableMapOf<String, String>()\n    private val random = SecureRandom()\n    \n    fun login(username: String, password: String): String {\n        // existing code...\n    }\n    \n    fun logout(sessionToken: String) {\n        // existing code...\n    }\n    \n    fun isLoggedIn(sessionToken: String): Boolean {\n        return sessions.containsKey(sessionToken)\n    }\n    \n    fun getUserBySession(sessionToken: String): User? {\n        val username = sessions[sessionToken] ?: return null\n        return userManager.users[username]\n    }\n\n    private fun verifyPassword(password: String, hash: String): Boolean {\n        // existing code...\n    }\n    \n    private fun generateSessionToken(): String {\n        // existing code...\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "UserManager",
                      ""
                    ],
                    [
                      "SessionManager",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class UserManager {\n    private val users = mutableMapOf<String, User>()\n    \n    fun createUser(username: String, password: String, email: String) {\n        // existing code...\n    }\n    \n    fun updateUserEmail(username: String, newEmail: String) {\n        // existing code...\n    }\n    \n    fun getAllUsers(): List<User> {\n        return users.values.toList()\n    }\n\n    private fun isValidEmail(email: String): Boolean {\n        // existing code...\n    }\n    \n    private fun hashPassword(password: String): String {\n        // existing code...\n    }\n}\n\n",
                        "class SessionManager(private val userManager: UserManager) {\n    private val sessions = mutableMapOf<String, String>()\n    private val random = SecureRandom()\n    \n    fun login(username: String, password: String): String {\n        // existing code...\n    }\n    \n    fun logout(sessionToken: String) {\n        // existing code...\n    }\n    \n    fun isLoggedIn(sessionToken: String): Boolean {\n        return sessions.containsKey(sessionToken)\n    }\n    \n    fun getUserBySession(sessionToken: String): User? {\n        val username = sessions[sessionToken] ?: return null\n        return userManager.users[username]\n    }\n\n    private fun verifyPassword(password: String, hash: String): Boolean {\n        // existing code...\n    }\n    \n    private fun generateSessionToken(): String {\n        // existing code...\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserManager",
                        "class SessionManager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 2440,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1121,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "import java.util.*\nimport java.util.regex.Pattern\n\nclass CustomerService {\n    private val customers = mutableMapOf<String, Customer>()\n    private val blacklistedEmails = listOf(\"spam@test.com\", \"fake@test.com\")\n    private val notificationService = NotificationService()\n\n    fun registerCustomer(name: String, email: String, phone: String) {\n        if (customers.containsKey(email)) {\n            throw IllegalArgumentException(\"Customer already exists\")\n        }\n\n        if (blacklistedEmails.contains(email)) {\n            throw IllegalArgumentException(\"Email is blacklisted\")\n        }\n\n        if (!email.matches(Regex(\"^[A-Za-z0-9+_.-]+@(.+)$\"))) {\n            throw IllegalArgumentException(\"Invalid email format\")\n        }\n\n        val customer = Customer(UUID.randomUUID().toString(), name, email, phone)\n        customers[email] = customer\n\n        notificationService.sendWelcomeNotification(customer)\n\n        println(\"Customer registered: $name\")\n    }\n\n    fun updateCustomerInfo(email: String, newPhone: String) {\n        val customer = customers[email]\n            ?: throw IllegalArgumentException(\"Customer not found\")\n\n        val oldPhone = customer.phone\n        customer.phone = newPhone\n\n        notificationService.sendUpdateNotification(customer, oldPhone, newPhone)\n\n        println(\"Customer info updated: $email\")\n    }\n\n    fun findByEmail(email: String): Customer? {\n        return customers[email]\n    }\n\n    fun getAllCustomers(): List<Customer> {\n        return customers.values.toList()\n    }\n}\n\nclass NotificationService {\n\n    private fun sendEmail(customer: Customer, subject: String, message: String) {\n        println(\"Sending email to: ${customer.email}\")\n        println(\"Subject: $subject\")\n        println(\"Message: $message\")\n    }\n\n    private fun sendSMS(phone: String, message: String) {\n        println(\"Sending SMS to: $phone\")\n        println(\"SMS: $message\")\n    }\n\n    fun sendWelcomeNotification(customer: Customer) {\n        val subject = \"Welcome to Our Service!\"\n        val emailMessage = \"\"\"Dear ${customer.name},\n\nThank you for registering with us.\nYour customer ID is: ${customer.id}\n\nBest regards,\nThe Team\"\"\"\n\n        val smsMessage = \"Welcome ${customer.name}! Your ID: ${customer.id}\"\n\n        sendEmail(customer, subject, emailMessage)\n        sendSMS(customer.phone, smsMessage)\n    }\n\n    fun sendUpdateNotification(customer: Customer, oldPhone: String, newPhone: String) {\n        val subject = \"Your Information Has Been Updated\"\n        val message = \"\"\"Dear ${customer.name},\n\nYour phone number has been updated from $oldPhone to $newPhone.\n\nIf you didn't make this change, please contact us.\n\nBest regards,\nThe Team\"\"\"\n\n        sendEmail(customer, subject, message)\n    }\n}\n\ndata class Customer(\n    val id: String,\n    val name: String,\n    val email: String,\n    var phone: String\n)"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "CustomerService",
                      ""
                    ],
                    [
                      "NotificationService",
                      ""
                    ],
                    [
                      "Customer",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class CustomerService {\n    private val customers = mutableMapOf<String, Customer>()\n    private val blacklistedEmails = listOf(\"spam@test.com\", \"fake@test.com\")\n    private val notificationService = NotificationService()\n\n    fun registerCustomer(name: String, email: String, phone: String) {\n        if (customers.containsKey(email)) {\n            throw IllegalArgumentException(\"Customer already exists\")\n        }\n\n        if (blacklistedEmails.contains(email)) {\n            throw IllegalArgumentException(\"Email is blacklisted\")\n        }\n\n        if (!email.matches(Regex(\"^[A-Za-z0-9+_.-]+@(.+)$\"))) {\n            throw IllegalArgumentException(\"Invalid email format\")\n        }\n\n        val customer = Customer(UUID.randomUUID().toString(), name, email, phone)\n        customers[email] = customer\n\n        notificationService.sendWelcomeNotification(customer)\n\n        println(\"Customer registered: $name\")\n    }\n\n    fun updateCustomerInfo(email: String, newPhone: String) {\n        val customer = customers[email]\n            ?: throw IllegalArgumentException(\"Customer not found\")\n\n        val oldPhone = customer.phone\n        customer.phone = newPhone\n\n        notificationService.sendUpdateNotification(customer, oldPhone, newPhone)\n\n        println(\"Customer info updated: $email\")\n    }\n\n    fun findByEmail(email: String): Customer? {\n        return customers[email]\n    }\n\n    fun getAllCustomers(): List<Customer> {\n        return customers.values.toList()\n    }\n}\n\n",
                        "class NotificationService {\n\n    private fun sendEmail(customer: Customer, subject: String, message: String) {\n        println(\"Sending email to: ${customer.email}\")\n        println(\"Subject: $subject\")\n        println(\"Message: $message\")\n    }\n\n    private fun sendSMS(phone: String, message: String) {\n        println(\"Sending SMS to: $phone\")\n        println(\"SMS: $message\")\n    }\n\n    fun sendWelcomeNotification(customer: Customer) {\n        val subject = \"Welcome to Our Service!\"\n        val emailMessage = \"\"\"Dear ${customer.name},\n\nThank you for registering with us.\nYour customer ID is: ${customer.id}\n\nBest regards,\nThe Team\"\"\"\n\n        val smsMessage = \"Welcome ${customer.name}! Your ID: ${customer.id}\"\n\n        sendEmail(customer, subject, emailMessage)\n        sendSMS(customer.phone, smsMessage)\n    }\n\n    fun sendUpdateNotification(customer: Customer, oldPhone: String, newPhone: String) {\n        val subject = \"Your Information Has Been Updated\"\n        val message = \"\"\"Dear ${customer.name},\n\nYour phone number has been updated from $oldPhone to $newPhone.\n\nIf you didn't make this change, please contact us.\n\nBest regards,\nThe Team\"\"\"\n\n        sendEmail(customer, subject, message)\n    }\n}\n\ndata ",
                        "class Customer(\n    val id: String,\n    val name: String,\n    val email: String,\n    var phone: String\n)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class CustomerService",
                        "class NotificationService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 3826,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 870,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 6942,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 5379,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4713,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "public class User\n{\n    private string name;\n    private string email;\n\n    public User(string name, string email)\n    {\n        this.name = name;\n        this.email = email;\n    }\n\n    // Other user-related methods and properties can go here.\n}\n\npublic class UserService\n{\n    public void SaveToDatabase(User user)\n    {\n        Console.WriteLine($\"Saving user {user.name} to database\");\n    }\n}\n\npublic class EmailService\n{\n    public void SendWelcomeEmail(User user)\n    {\n        Console.WriteLine($\"Sending welcome email to {user.email}\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [],
                  "classes": [
                    [
                      "User",
                      ""
                    ],
                    [
                      "UserService",
                      ""
                    ],
                    [
                      "EmailService",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class User\n{\n    private string name;\n    private string email;\n\n    public User(string name, string email)\n    {\n        this.name = name;\n        this.email = email;\n    }\n\n    // Other user-related methods and properties can go here.\n}\n\npublic ",
                        "class UserService\n{\n    public void SaveToDatabase(User user)\n    {\n        Console.WriteLine($\"Saving user {user.name} to database\");\n    }\n}\n\npublic ",
                        "class EmailService\n{\n    public void SendWelcomeEmail(User user)\n    {\n        Console.WriteLine($\"Sending welcome email to {user.email}\");\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public User(string name, string email)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserService",
                        "class EmailService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1248,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "public class Employee\n{\n    private string name;\n    private double baseSalary;\n    private int yearsOfService;\n\n    public Employee(string name, double baseSalary, int yearsOfService)\n    {\n        this.name = name;\n        this.baseSalary = baseSalary;\n        this.yearsOfService = yearsOfService;\n    }\n\n    public double CalculateSalary()\n    {\n        return baseSalary + (yearsOfService * 1000);\n    }\n}\n\npublic class PaySlipPrinter\n{\n    private Employee employee;\n\n    public PaySlipPrinter(Employee employee)\n    {\n        this.employee = employee;\n    }\n\n    public void PrintPaySlip()\n    {\n        Console.WriteLine($\"Pay slip for {employee.name}: ${employee.CalculateSalary()}\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Employee",
                      ""
                    ],
                    [
                      "PaySlipPrinter",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Employee\n{\n    private string name;\n    private double baseSalary;\n    private int yearsOfService;\n\n    public Employee(string name, double baseSalary, int yearsOfService)\n    {\n        this.name = name;\n        this.baseSalary = baseSalary;\n        this.yearsOfService = yearsOfService;\n    }\n\n    public double CalculateSalary()\n    {\n        return baseSalary + (yearsOfService * 1000);\n    }\n}\n\npublic ",
                        "class PaySlipPrinter\n{\n    private Employee employee;\n\n    public PaySlipPrinter(Employee employee)\n    {\n        this.employee = employee;\n    }\n\n    public void PrintPaySlip()\n    {\n        Console.WriteLine($\"Pay slip for {employee.name}: ${employee.CalculateSalary()}\");\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public Employee(string name, double baseSalary, int yearsOfService)",
                        "public PaySlipPrinter(Employee employee)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1421,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "public class Book\n{\n    public string Title { get; }\n    public string Author { get; }\n    public string Content { get; }\n\n    public Book(string title, string author, string content)\n    {\n        Title = title;\n        Author = author;\n        Content = content;\n    }\n}\n\npublic class BookPrinter\n{\n    public void PrintBook(Book book)\n    {\n        Console.WriteLine($\"Title: {book.Title}\");\n        Console.WriteLine($\"Author: {book.Author}\");\n        Console.WriteLine($\"Content: {book.Content}\");\n    }\n}\n\npublic class BookSaver\n{\n    public void SaveToFile(Book book, string filename)\n    {\n        Console.WriteLine($\"Saving book to {filename}\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Book",
                      ""
                    ],
                    [
                      "BookPrinter",
                      ""
                    ],
                    [
                      "BookSaver",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Book\n{\n    public string Title { get; }\n    public string Author { get; }\n    public string Content { get; }\n\n    public Book(string title, string author, string content)\n    {\n        Title = title;\n        Author = author;\n        Content = content;\n    }\n}\n\npublic ",
                        "class BookPrinter\n{\n    public void PrintBook(Book book)\n    {\n        Console.WriteLine($\"Title: {book.Title}\");\n        Console.WriteLine($\"Author: {book.Author}\");\n        Console.WriteLine($\"Content: {book.Content}\");\n    }\n}\n\npublic ",
                        "class BookSaver\n{\n    public void SaveToFile(Book book, string filename)\n    {\n        Console.WriteLine($\"Saving book to {filename}\");\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public Book(string title, string author, string content)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1514,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 695,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "public class ReportContentGenerator\n{\n    public string GenerateMonthlyReport(string month, List<SalesData> salesData)\n    {\n        var report = new StringBuilder();\n        report.AppendLine($\"Monthly Sales Report - {month}\");\n        report.AppendLine(\"================================\\n\");\n\n        double totalSales = 0;\n        var productSales = new Dictionary<string, double>();\n\n        foreach (var data in salesData)\n        {\n            totalSales += data.Amount;\n            if (productSales.ContainsKey(data.ProductName))\n            {\n                productSales[data.ProductName] += data.Amount;\n            }\n            else\n            {\n                productSales[data.ProductName] = data.Amount;\n            }\n        }\n\n        report.AppendLine($\"Total Sales: ${totalSales:F2}\\n\");\n        report.AppendLine(\"Sales by Product:\");\n        report.AppendLine(\"-----------------\");\n\n        foreach (var entry in productSales)\n        {\n            report.AppendLine($\"{entry.Key}: ${entry.Value:F2}\");\n        }\n\n        report.AppendLine(\"\\nTop Performing Products:\");\n        report.AppendLine(\"------------------------\");\n\n        var topProducts = productSales\n            .OrderByDescending(x => x.Value)\n            .Take(5);\n\n        foreach (var entry in topProducts)\n        {\n            report.AppendLine($\"{entry.Key}: ${entry.Value:F2}\");\n        }\n\n        return report.ToString();\n    }\n}",
                  "public class ReportGenerator\n{\n    private readonly IDataSource _dataSource;\n    private readonly IEmailService _emailService;\n    private readonly ReportContentGenerator _reportContentGenerator;\n\n    public ReportGenerator(IDataSource dataSource, IEmailService emailService)\n    {\n        _dataSource = dataSource;\n        _emailService = emailService;\n        _reportContentGenerator = new ReportContentGenerator();\n    }\n\n    public void GenerateAndSendMonthlyReport(string month, string recipientEmail)\n    {\n        var salesData = _dataSource.GetSalesDataForMonth(month);\n        string reportContent = _reportContentGenerator.GenerateMonthlyReport(month, salesData);\n\n        string subject = $\"Monthly Sales Report - {month}\";\n        string body = $\"Please find attached the monthly sales report.\\n\\n{reportContent}\";\n\n        _emailService.SendEmail(recipientEmail, subject, body);\n\n        Console.WriteLine($\"Report sent successfully to {recipientEmail}\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [],
                  "classes": [
                    [
                      "ReportContentGenerator",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class ReportContentGenerator\n{\n    public string GenerateMonthlyReport(string month, List<SalesData> salesData)\n    {\n        var report = new StringBuilder();\n        report.AppendLine($\"Monthly Sales Report - {month}\");\n        report.AppendLine(\"================================\\n\");\n\n        double totalSales = 0;\n        var productSales = new Dictionary<string, double>();\n\n        foreach (var data in salesData)\n        {\n            totalSales += data.Amount;\n            if (productSales.ContainsKey(data.ProductName))\n            {\n                productSales[data.ProductName] += data.Amount;\n            }\n            else\n            {\n                productSales[data.ProductName] = data.Amount;\n            }\n        }\n\n        report.AppendLine($\"Total Sales: ${totalSales:F2}\\n\");\n        report.AppendLine(\"Sales by Product:\");\n        report.AppendLine(\"-----------------\");\n\n        foreach (var entry in productSales)\n        {\n            report.AppendLine($\"{entry.Key}: ${entry.Value:F2}\");\n        }\n\n        report.AppendLine(\"\\nTop Performing Products:\");\n        report.AppendLine(\"------------------------\");\n\n        var topProducts = productSales\n            .OrderByDescending(x => x.Value)\n            .Take(5);\n\n        foreach (var entry in topProducts)\n        {\n            report.AppendLine($\"{entry.Key}: ${entry.Value:F2}\");\n        }\n\n        return report.ToString();\n    }\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 3106,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1499,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1064,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 781,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1219,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3458,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4334,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4229,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 32,
            "fail": 16,
            "error": 0,
            "accuracy": 0.6666666666666666
          }
        }
      },
      "overall_stats": {
        "total_pass": 32,
        "total_fail": 16,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "srp--qwen2.5-coder32b-temp0-latest--ensemble": {
    "ensemble": {
      "model": "srp--qwen2.5-coder32b-temp0-latest--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "srp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1512,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1540,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1607,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1427,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1738,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1685,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1810,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1779,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2091,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2166,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1883,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2075,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1396,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1609,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1680,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1633,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1632,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1600,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1808,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1548,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2110,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1895,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2223,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1936,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1582,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1454,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1513,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1664,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1693,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1696,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1581,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1859,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2012,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2073,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1981,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1934,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1508,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1699,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1493,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1435,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1769,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1719,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1637,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1671,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2091,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2032,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1937,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2024,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 48,
            "fail": 0,
            "error": 0,
            "accuracy": 1.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 48,
        "total_fail": 0,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "srp--codellama70b-temp0-latest--smell": {
    "smell": {
      "model": "srp--codellama70b-temp0-latest--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "srp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1003,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 868,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 546,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 777,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 906,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1245,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 561,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1363,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1634,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1358,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1389,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1638,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 168,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1132,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2395,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 162,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1594,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 133,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1150,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 540,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 326,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 25,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 25,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 146,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 932,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 491,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 843,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1378,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 461,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1338,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 540,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 986,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1712,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1970,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3640,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2608,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1185,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1786,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 568,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1303,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 550,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1145,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1838,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 503,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2902,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1042,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3962,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3096,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 1,
            "fail": 47,
            "error": 0,
            "accuracy": 0.020833333333333332
          }
        }
      },
      "overall_stats": {
        "total_pass": 1,
        "total_fail": 47,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "srp--codellama70b-temp0-latest--ensemble": {
    "ensemble": {
      "model": "srp--codellama70b-temp0-latest--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "srp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1601,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public interface SalaryCalculator {\n    double calculateSalary();\n}\n\npublic class FullTimeEmployee implements SalaryCalculator {\n    private String name;\n    private double baseSalary;\n    private int yearsOfService;\n    \n    public FullTimeEmployee(String name, double baseSalary, int yearsOfService) {\n        this.name = name;\n        this.baseSalary = baseSalary;\n        this.yearsOfService = yearsOfService;\n    }\n    \n    @Override\n    public double calculateSalary() {\n        return baseSalary + (yearsOfService * 1000);\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "SalaryCalculator"
                  ],
                  "classes": [
                    [
                      "FullTimeEmployee",
                      "SalaryCalculator"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "high",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "@Override"
                      ]
                    },
                    {
                      "pattern": "interface_implementation",
                      "matches": [
                        "implements SalaryCalculator"
                      ]
                    }
                  ]
                }
              },
              "response_length": 2671,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2055,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1729,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1840,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1462,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2014,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1855,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1848,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1683,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1650,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1624,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1648,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2445,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1647,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1772,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1924,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1887,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1623,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2725,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 976,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 876,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 985,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1620,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1275,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1902,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1406,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1822,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1718,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1814,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1920,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1948,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1918,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1645,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1678,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1761,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1735,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1684,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1464,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1995,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1942,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1941,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1922,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2044,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1888,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1650,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1751,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1563,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 11,
            "fail": 37,
            "error": 0,
            "accuracy": 0.22916666666666666
          }
        }
      },
      "overall_stats": {
        "total_pass": 11,
        "total_fail": 37,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "srp--codellama70b-temp0-latest--default": {
    "default": {
      "model": "srp--codellama70b-temp0-latest--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "srp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 266,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 232,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 228,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 250,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 514,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1139,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 264,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 359,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1690,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 775,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2073,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1768,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 401,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 255,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 275,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 242,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 267,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 470,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 824,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 879,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3270,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4694,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 25,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 146,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 243,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 236,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 209,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 271,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 365,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 247,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 304,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 287,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2437,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2137,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3640,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2125,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 233,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 272,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 209,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 238,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 520,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1414,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 919,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 898,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1105,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1040,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1974,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3677,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 19,
            "fail": 29,
            "error": 0,
            "accuracy": 0.3958333333333333
          }
        }
      },
      "overall_stats": {
        "total_pass": 19,
        "total_fail": 29,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "srp--deepseek33b-temp0-latest--default": {
    "default": {
      "model": "srp--deepseek33b-temp0-latest--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "srp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "public class User {\n    private String name;\n    private String email;\n    \n    public User(String name, String email)  {\n        this.name = name;\n        this.email = email;\n    }\n    \n    // getters and setters for name and email\n}",
                  "public class UserRepository {\n    public void saveToDatabase(User user)  {\n        System.out.println(\"Saving user \" + user.getName() + \" to database\");\n    }\n}\n\npublic class EmailService {\n    public void sendWelcomeEmail(String email)  {\n        System.out.println(\"Sending welcome email to \" + email);\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "User",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class User {\n    private String name;\n    private String email;\n    \n    public User(String name, String email)  {\n        this.name = name;\n        this.email = email;\n    }\n    \n    // getters and setters for name and email\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public User(String name, String email)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1167,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1537,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "public class Book {\n    private String title;\n    private String author;\n    private String content;\n    \n    public Book(String title, String author, String content) {\n        this.title = title;\n        this.author = author;\n        this.content = content;\n    }\n    \n    // getters and setters for title, author, and content...\n}\n\npublic class Printer {\n    public void printBook(Book book) {\n        System.out.println(\"Title: \" + book.getTitle());\n        System.out.println(\"Author: \" + book.getAuthor());\n        System.out.println(\"Content: \" + book.getContent());\n    }\n}\n\npublic class FileManager {\n    public void saveToFile(Book book, String filename) {\n        System.out.println(\"Saving book to \" + filename);\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Book",
                      ""
                    ],
                    [
                      "Printer",
                      ""
                    ],
                    [
                      "FileManager",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Book {\n    private String title;\n    private String author;\n    private String content;\n    \n    public Book(String title, String author, String content) {\n        this.title = title;\n        this.author = author;\n        this.content = content;\n    }\n    \n    // getters and setters for title, author, and content...\n}\n\npublic ",
                        "class Printer {\n    public void printBook(Book book) {\n        System.out.println(\"Title: \" + book.getTitle());\n        System.out.println(\"Author: \" + book.getAuthor());\n        System.out.println(\"Content: \" + book.getContent());\n    }\n}\n\npublic ",
                        "class FileManager {\n    public void saveToFile(Book book, String filename) {\n        System.out.println(\"Saving book to \" + filename);\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public Book(String title, String author, String content)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class FileManager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1654,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1100,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 856,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 444,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2398,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 364,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3534,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3549,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 791,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2215,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "class User:\n    def __init__(self, name, email):\n        self.name = name\n        self.email = email\n    \nclass DatabaseHandler:\n    @staticmethod\n    def save_to_database(user):\n        print(f\"Saving user {user.name} to database\")\n        \nclass EmailHandler:\n    @staticmethod\n    def send_welcome_email(user):\n        print(f\"Sending welcome email to {user.email}\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "User",
                    "DatabaseHandler",
                    "EmailHandler"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class User:\n    def __init__(self, name, email):\n        self.name = name\n        self.email = email\n    \n",
                        "class DatabaseHandler:\n    @staticmethod\n    def save_to_database(user):\n        print(f\"Saving user {user.name} to database\")\n        \n",
                        "class EmailHandler:\n    @staticmethod\n    def send_welcome_email(user):\n        print(f\"Sending welcome email to {user.email}\")"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, name, email)",
                        "def save_to_database(user)",
                        "def send_welcome_email(user)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class DatabaseHandler",
                        "class EmailHandler"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1001,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1212,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "class Book:\n    def __init__(self, title, author, content):\n        self.title = title\n        self.author = author\n        self.content = content\n    \n    def print_book(self):\n        print(f\"Title: {self.title}\")\n        print(f\"Author: {self.author}\")\n        print(f\"Content: {self.content}\")\n\nclass FileManager:\n    @staticmethod\n    def save_to_file(book, filename):\n        print(f\"Saving book to {filename}\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Book",
                    "FileManager"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Book:\n    def __init__(self, title, author, content):\n        self.title = title\n        self.author = author\n        self.content = content\n    \n    def print_book(self):\n        print(f\"Title: {self.title}\")\n        print(f\"Author: {self.author}\")\n        print(f\"Content: {self.content}\")\n\n",
                        "class FileManager:\n    @staticmethod\n    def save_to_file(book, filename):\n        print(f\"Saving book to {filename}\")"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, title, author, content)",
                        "def print_book(self)",
                        "def save_to_file(book, filename)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class FileManager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1240,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "class ProductData:\n    def __init__(self, name, price):\n        self.name = name\n        self.price = price\n    \n    def display_product(self):\n        print(f\"Product: {self.name}, Price: ${self.price}\")\n\nclass ProductOperations:\n    @staticmethod\n    def apply_discount(product, percentage):\n        return product.price * (1 - percentage / 100)"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "ProductData",
                    "ProductOperations"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class ProductData:\n    def __init__(self, name, price):\n        self.name = name\n        self.price = price\n    \n    def display_product(self):\n        print(f\"Product: {self.name}, Price: ${self.price}\")\n\n",
                        "class ProductOperations:\n    @staticmethod\n    def apply_discount(product, percentage):\n        return product.price * (1 - percentage / 100)"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, name, price)",
                        "def display_product(self)",
                        "def apply_discount(product, percentage)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1106,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1589,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1150,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1244,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2460,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3930,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2032,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4586,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2246,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 346,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1067,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "class Book(private val title: String, private val author: String, private val content: String) {\n    fun printBook() {\n        println(\"Title: $title\")\n        println(\"Author: $author\")\n        println(\"Content: $content\")\n    }\n}\n\nclass BookSaver(private val book: Book) {\n    fun saveToFile(filename: String) {\n        println(\"Saving book to $filename\")\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Book",
                      ""
                    ],
                    [
                      "BookSaver",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Book(private val title: String, private val author: String, private val content: String) {\n    fun printBook() {\n        println(\"Title: $title\")\n        println(\"Author: $author\")\n        println(\"Content: $content\")\n    }\n}\n\n",
                        "class BookSaver(private val book: Book) {\n    fun saveToFile(filename: String) {\n        println(\"Saving book to $filename\")\n    }\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1007,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1267,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1628,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1869,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1450,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1299,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2446,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 564,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1266,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2446,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 210,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1351,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "public class Book\n{\n    public string Title { get; set; }\n    public string Author { get; set; }\n    public string Content { get; set; }\n    \n    public Book(string title, string author, string content)\n    {\n        this.Title = title;\n        this.Author = author;\n        this.Content = content;\n    }\n}\n\npublic class BookPrinter\n{\n    private readonly Book book;\n\n    public BookPrinter(Book book)\n    {\n        this.book = book;\n    }\n    \n    public void Print()\n    {\n        Console.WriteLine($\"Title:  {book.Title}\");\n        Console.WriteLine($\"Author: {book.Author}\");\n        Console.WriteLine($\"Content:{book.Content}\");\n    }\n}\n\npublic class BookSaver\n{\n    private readonly Book book;\n    \n    public BookSaver(Book book)\n    {\n        this.book = book;\n    }\n    \n    public void SaveToFile(string filename)\n    {\n        Console.WriteLine($\"Saving book to {filename}\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Book",
                      ""
                    ],
                    [
                      "BookPrinter",
                      ""
                    ],
                    [
                      "BookSaver",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Book\n{\n    public string Title { get; set; }\n    public string Author { get; set; }\n    public string Content { get; set; }\n    \n    public Book(string title, string author, string content)\n    {\n        this.Title = title;\n        this.Author = author;\n        this.Content = content;\n    }\n}\n\npublic ",
                        "class BookPrinter\n{\n    private readonly Book book;\n\n    public BookPrinter(Book book)\n    {\n        this.book = book;\n    }\n    \n    public void Print()\n    {\n        Console.WriteLine($\"Title:  {book.Title}\");\n        Console.WriteLine($\"Author: {book.Author}\");\n        Console.WriteLine($\"Content:{book.Content}\");\n    }\n}\n\npublic ",
                        "class BookSaver\n{\n    private readonly Book book;\n    \n    public BookSaver(Book book)\n    {\n        this.book = book;\n    }\n    \n    public void SaveToFile(string filename)\n    {\n        Console.WriteLine($\"Saving book to {filename}\");\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public Book(string title, string author, string content)",
                        "public BookPrinter(Book book)",
                        "public BookSaver(Book book)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1636,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1692,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 687,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1883,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1229,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1446,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1217,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2047,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2387,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1339,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 15,
            "fail": 33,
            "error": 0,
            "accuracy": 0.3125
          }
        }
      },
      "overall_stats": {
        "total_pass": 15,
        "total_fail": 33,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "srp--gpt-4o-mini--default": {
    "default": {
      "model": "srp--gpt-4o-mini--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "srp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1043,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1039,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1006,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 995,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 959,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1234,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1116,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1653,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1304,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1425,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1608,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1615,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 720,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 925,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 791,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 734,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 787,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1199,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1009,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1016,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1111,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1199,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1148,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1632,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 844,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 860,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 802,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 601,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 813,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1228,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1280,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1295,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1082,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1499,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1195,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1574,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 877,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1010,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 947,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 842,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1015,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1278,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1300,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1217,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1060,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1491,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1794,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1268,
              "model": "gpt-4o-mini",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 47,
            "fail": 1,
            "error": 0,
            "accuracy": 0.9791666666666666
          }
        }
      },
      "overall_stats": {
        "total_pass": 47,
        "total_fail": 1,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "srp--gpt-4o-mini--ensemble": {
    "ensemble": {
      "model": "srp--gpt-4o-mini--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "srp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1497,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1390,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1527,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1300,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1556,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1491,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1286,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1618,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1725,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1832,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1497,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1768,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1462,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1295,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1490,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1466,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1635,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1568,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1308,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1443,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2196,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1558,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1458,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1749,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1480,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1336,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1592,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1314,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1544,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1578,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1449,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1456,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1695,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1589,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1657,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1779,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1408,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1267,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1597,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1613,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1521,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1496,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1339,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1417,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1867,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1656,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1665,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1642,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 47,
            "fail": 1,
            "error": 0,
            "accuracy": 0.9791666666666666
          }
        }
      },
      "overall_stats": {
        "total_pass": 47,
        "total_fail": 1,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "srp--deepseek33b-temp0-latest--ensemble": {
    "ensemble": {
      "model": "srp--deepseek33b-temp0-latest--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "srp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 25,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 25,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 25,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 25,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1946,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1511,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 989,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1600,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1347,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1410,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1488,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1353,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1497,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1596,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1377,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1174,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1680,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1748,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1644,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1670,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1370,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1321,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1359,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1458,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1376,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1772,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1482,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1044,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1783,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1730,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1865,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1649,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1728,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1483,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1584,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1703,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1537,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1801,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "OCP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2090,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1122,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1437,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1942,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1150,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1689,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1466,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1492,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1428,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1497,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 0,
            "fail": 48,
            "error": 0,
            "accuracy": 0.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 0,
        "total_fail": 48,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "srp--deepseek33b-temp0-latest--example": {
    "example": {
      "model": "srp--deepseek33b-temp0-latest--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "srp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 353,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 670,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 379,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 345,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 699,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 682,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 712,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 364,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3534,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3442,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 791,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1384,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "class User:\n    def __init__(self, name, email):\n        self.name = name\n        self.email = email\n    \n    def save_to_database(self):\n        print(f\"Saving user {self.name} to database\")\n\nclass EmailService:\n    def send_welcome_email(user):\n        print(f\"Sending welcome email to {user.email}\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "User",
                    "EmailService"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class User:\n    def __init__(self, name, email):\n        self.name = name\n        self.email = email\n    \n    def save_to_database(self):\n        print(f\"Saving user {self.name} to database\")\n\n",
                        "class EmailService:\n    def send_welcome_email(user):\n        print(f\"Sending welcome email to {user.email}\")"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, name, email)",
                        "def save_to_database(self)",
                        "def send_welcome_email(user)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class EmailService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 861,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 311,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 526,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 347,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 429,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 456,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 654,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 712,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4254,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2537,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2968,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2289,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 278,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "class Employee(private val name: String, private val baseSalary: Double, private val yearsOfService: Int) {\n    fun calculateSalary(): Double {\n        return baseSalary + (yearsOfService * 1000)\n    }\n}\n\nclass PaySlipPrinter(private val employee: Employee) {\n    fun printPaySlip() {\n        println(\"Pay slip for ${employee.name}: $${employee.calculateSalary()}\")\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Employee",
                      ""
                    ],
                    [
                      "PaySlipPrinter",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Employee(private val name: String, private val baseSalary: Double, private val yearsOfService: Int) {\n    fun calculateSalary(): Double {\n        return baseSalary + (yearsOfService * 1000)\n    }\n}\n\n",
                        "class PaySlipPrinter(private val employee: Employee) {\n    fun printPaySlip() {\n        println(\"Pay slip for ${employee.name}: $${employee.calculateSalary()}\")\n    }\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 964,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 573,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 358,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 781,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1045,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 711,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 847,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1554,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 604,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1207,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2393,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 355,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "public class Employee\n{\n    public string Name { get; set; }\n    public double BaseSalary { get; set; }\n    public int YearsOfService { get; set; }\n    \n    public Employee(string name, double baseSalary, int yearsOfService)\n    {\n        this.Name = name;\n        this.BaseSalary = baseSalary;\n        this.YearsOfService = yearsOfService;\n    }\n    \n    public double CalculateSalary()\n    {\n        return BaseSalary + (YearsOfService * 1000);\n    }\n}\n\npublic class PaySlip\n{\n    private Employee employee;\n    \n    public PaySlip(Employee employee)\n    {\n        this.employee = employee;\n    }\n    \n    public void PrintPaySlip()\n    {\n        Console.WriteLine($\"Pay slip for {employee.Name}: ${employee.CalculateSalary()}\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Employee",
                      ""
                    ],
                    [
                      "PaySlip",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Employee\n{\n    public string Name { get; set; }\n    public double BaseSalary { get; set; }\n    public int YearsOfService { get; set; }\n    \n    public Employee(string name, double baseSalary, int yearsOfService)\n    {\n        this.Name = name;\n        this.BaseSalary = baseSalary;\n        this.YearsOfService = yearsOfService;\n    }\n    \n    public double CalculateSalary()\n    {\n        return BaseSalary + (YearsOfService * 1000);\n    }\n}\n\npublic ",
                        "class PaySlip\n{\n    private Employee employee;\n    \n    public PaySlip(Employee employee)\n    {\n        this.employee = employee;\n    }\n    \n    public void PrintPaySlip()\n    {\n        Console.WriteLine($\"Pay slip for {employee.Name}: ${employee.CalculateSalary()}\");\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public Employee(string name, double baseSalary, int yearsOfService)",
                        "public PaySlip(Employee employee)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1387,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 343,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 355,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 694,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1039,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 743,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 829,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1272,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2823,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2429,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1053,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 31,
            "fail": 17,
            "error": 0,
            "accuracy": 0.6458333333333334
          }
        }
      },
      "overall_stats": {
        "total_pass": 31,
        "total_fail": 17,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "srp--qwen2.5-coder32b-temp0-latest--example": {
    "example": {
      "model": "srp--qwen2.5-coder32b-temp0-latest--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "srp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 221,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 253,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 294,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 436,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 261,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 213,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 230,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 254,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 305,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4080,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3702,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4303,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 220,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 208,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 249,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 355,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 257,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 254,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 288,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 237,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 305,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3275,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3651,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3557,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 221,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 345,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 250,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 272,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 233,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 421,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 230,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 237,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 5390,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 6942,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 5379,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4713,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 221,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 208,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 369,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 316,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 227,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 226,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 235,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 238,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 11183,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3458,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4334,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4229,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 34,
            "fail": 14,
            "error": 0,
            "accuracy": 0.7083333333333334
          }
        }
      },
      "overall_stats": {
        "total_pass": 34,
        "total_fail": 14,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "srp--codellama70b-temp0-latest--example": {
    "example": {
      "model": "srp--codellama70b-temp0-latest--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "srp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "public class User {\n    private String name;\n    private String email;\n    \n    public User(String name, String email) {\n        this.name = name;\n        this.email = email;\n    }\n}\n\npublic class DatabaseService {\n    public void saveUserToDatabase(User user) {\n        System.out.println(\"Saving user \" + user.getName() + \" to database\");\n    }\n}\n\npublic class EmailService {\n    public void sendWelcomeEmail(User user) {\n        System.out.println(\"Sending welcome email to \" + user.getEmail());\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "User",
                      ""
                    ],
                    [
                      "DatabaseService",
                      ""
                    ],
                    [
                      "EmailService",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class User {\n    private String name;\n    private String email;\n    \n    public User(String name, String email) {\n        this.name = name;\n        this.email = email;\n    }\n}\n\npublic ",
                        "class DatabaseService {\n    public void saveUserToDatabase(User user) {\n        System.out.println(\"Saving user \" + user.getName() + \" to database\");\n    }\n}\n\npublic ",
                        "class EmailService {\n    public void sendWelcomeEmail(User user) {\n        System.out.println(\"Sending welcome email to \" + user.getEmail());\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public User(String name, String email)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class DatabaseService",
                        "class EmailService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1217,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 508,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 451,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 423,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1897,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 133,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1265,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1172,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1547,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1174,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1428,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1752,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 273,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 157,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 492,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 444,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 834,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 181,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1135,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 190,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 991,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 25,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 159,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 146,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 683,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 456,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "class Book(private val title: String, private val author: String, private val content: String) {\n    fun getTitle() = title\n    fun getAuthor() = author\n    fun getContent() = content\n}\n\nfun printBook(book: Book) {\n    println(\"Title: ${book.getTitle()}\")\n    println(\"Author: ${book.getAuthor()}\")\n    println(\"Content: ${book.getContent()}\")\n}\n\nfun saveToFile(filename: String, book: Book) {\n    // Save the book to a file\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Book",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Book(private val title: String, private val author: String, private val content: String) {\n    fun getTitle() = title\n    fun getAuthor() = author\n    fun getContent() = content\n}\n\nfun printBook(book: Book) {\n    println(\"Title: ${book.getTitle()}\")\n    println(\"Author: ${book.getAuthor()}\")\n    println(\"Content: ${book.getContent()}\")\n}\n\nfun saveToFile(filename: String, book: Book) {\n    // Save the book to a file\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1360,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 270,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 475,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1076,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 932,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1154,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2281,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2353,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1017,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 12265,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 634,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 477,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1238,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 432,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 302,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 752,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1055,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1136,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1123,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1022,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 30917,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3066,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 6,
            "fail": 42,
            "error": 0,
            "accuracy": 0.125
          }
        }
      },
      "overall_stats": {
        "total_pass": 6,
        "total_fail": 42,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "srp--gpt-4o-mini--smell": {
    "smell": {
      "model": "srp--gpt-4o-mini--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "srp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 184,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 820,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 156,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 163,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 884,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1075,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1196,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1003,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1379,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1313,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1330,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1340,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 804,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 153,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 837,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 165,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1114,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 968,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1068,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1260,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1237,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1502,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1321,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1450,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 160,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 594,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 563,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 163,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 644,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1017,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 899,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1034,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 896,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1343,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1364,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1253,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 804,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 800,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 156,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 165,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 995,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1074,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 861,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 998,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 957,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1280,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1131,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1397,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 12,
            "fail": 36,
            "error": 0,
            "accuracy": 0.25
          }
        }
      },
      "overall_stats": {
        "total_pass": 12,
        "total_fail": 36,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "srp--deepseek33b-temp0-latest--smell": {
    "smell": {
      "model": "srp--deepseek33b-temp0-latest--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "srp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 331,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 319,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 249,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 364,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 504,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 272,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 290,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 301,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3534,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3457,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 791,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2236,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 626,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 325,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 696,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 587,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 259,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 469,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 277,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 300,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4426,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1880,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2968,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1747,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 8,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 268,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 8,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 550,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 373,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 288,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 256,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 448,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1518,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 564,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1266,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2393,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 269,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 262,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 676,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 364,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 245,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 461,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 256,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1183,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1217,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2823,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 980,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2135,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 30,
            "fail": 18,
            "error": 0,
            "accuracy": 0.625
          }
        }
      },
      "overall_stats": {
        "total_pass": 30,
        "total_fail": 18,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "srp--qwen2.5-coder32b-temp0-latest--smell": {
    "smell": {
      "model": "srp--qwen2.5-coder32b-temp0-latest--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "srp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 997,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1231,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 164,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 890,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2930,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 461,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 186,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 295,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 623,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4080,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3702,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4303,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 206,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "class UserManager:\n    def __init__(self, db_connection):\n        self.db_connection = db_connection\n\n    def add_user(self, user_data):\n        # Database operation to add a user\n        pass\n\n    def remove_user(self, user_id):\n        # Database operation to remove a user\n        pass\n\n    def update_user(self, user_id, new_data):\n        # Database operation to update a user\n        pass\n\n    def calculate_discount(self, user_id):\n        # Business logic to calculate discount\n        pass\n\n    def display_user_info(self, user_id):\n        # User interface method to display user info\n        pass"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "UserManager"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class UserManager:\n    def __init__(self, db_connection):\n        self.db_connection = db_connection\n\n    def add_user(self, user_data):\n        # Database operation to add a user\n        pass\n\n    def remove_user(self, user_id):\n        # Database operation to remove a user\n        pass\n\n    def update_user(self, user_id, new_data):\n        # Database operation to update a user\n        pass\n\n    def calculate_discount(self, user_id):\n        # Business logic to calculate discount\n        pass\n\n    def display_user_info(self, user_id):\n        # User interface method to display user info\n        pass"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, db_connection)",
                        "def add_user(self, user_data)",
                        "def remove_user(self, user_id)",
                        "def update_user(self, user_id, new_data)",
                        "def calculate_discount(self, user_id)",
                        "def display_user_info(self, user_id)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserManager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1039,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "class UserManager:\n    def __init__(self, db_connection):\n        self.db_connection = db_connection\n\n    def add_user(self, user_data):\n        # Code to add a user to the database\n        pass\n\n    def remove_user(self, user_id):\n        # Code to remove a user from the database\n        pass\n\n    def calculate_discount(self, user_id):\n        # Code to calculate discount based on user's purchase history\n        pass\n\n    def send_email(self, user_id, message):\n        # Code to send an email to the user\n        pass\n\n    def validate_user_data(self, user_data):\n        # Code to validate user data\n        pass"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "UserManager"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class UserManager:\n    def __init__(self, db_connection):\n        self.db_connection = db_connection\n\n    def add_user(self, user_data):\n        # Code to add a user to the database\n        pass\n\n    def remove_user(self, user_id):\n        # Code to remove a user from the database\n        pass\n\n    def calculate_discount(self, user_id):\n        # Code to calculate discount based on user's purchase history\n        pass\n\n    def send_email(self, user_id, message):\n        # Code to send an email to the user\n        pass\n\n    def validate_user_data(self, user_data):\n        # Code to validate user data\n        pass"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, db_connection)",
                        "def add_user(self, user_data)",
                        "def remove_user(self, user_id)",
                        "def calculate_discount(self, user_id)",
                        "def send_email(self, user_id, message)",
                        "def validate_user_data(self, user_data)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserManager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1075,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "class OrderProcessor:\n    def __init__(self, db_connection):\n        self.db_connection = db_connection\n\n    def calculate_total(self, order_items):\n        total = 0\n        for item in order_items:\n            total += item['price'] * item['quantity']\n        return total\n\n    def save_order_to_db(self, order_data):\n        cursor = self.db_connection.cursor()\n        cursor.execute(\"INSERT INTO orders (customer_id, total) VALUES (%s, %s)\", \n                       (order_data['customer_id'], order_data['total']))\n        self.db_connection.commit()\n\n    def notify_customer(self, customer_email, order_details):\n        print(f\"Sending email to {customer_email} with details: {order_details}\")\n\n    def process_order(self, order_items, customer_id):\n        total = self.calculate_total(order_items)\n        order_data = {'customer_id': customer_id, 'total': total}\n        self.save_order_to_db(order_data)\n        self.notify_customer('customer@example.com', order_data)\n\n    def get_order_history(self, customer_id):\n        cursor = self.db_connection.cursor()\n        cursor.execute(\"SELECT * FROM orders WHERE customer_id = %s\", (customer_id,))\n        return cursor.fetchall()\n\n    def update_order_status(self, order_id, new_status):\n        cursor = self.db_connection.cursor()\n        cursor.execute(\"UPDATE orders SET status = %s WHERE id = %s\", (new_status, order_id))\n        self.db_connection.commit()"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "OrderProcessor"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class OrderProcessor:\n    def __init__(self, db_connection):\n        self.db_connection = db_connection\n\n    def calculate_total(self, order_items):\n        total = 0\n        for item in order_items:\n            total += item['price'] * item['quantity']\n        return total\n\n    def save_order_to_db(self, order_data):\n        cursor = self.db_connection.cursor()\n        cursor.execute(\"INSERT INTO orders (customer_id, total) VALUES (%s, %s)\", \n                       (order_data['customer_id'], order_data['total']))\n        self.db_connection.commit()\n\n    def notify_customer(self, customer_email, order_details):\n        print(f\"Sending email to {customer_email} with details: {order_details}\")\n\n    def process_order(self, order_items, customer_id):\n        total = self.calculate_total(order_items)\n        order_data = {'customer_id': customer_id, 'total': total}\n        self.save_order_to_db(order_data)\n        self.notify_customer('customer@example.com', order_data)\n\n    def get_order_history(self, customer_id):\n        cursor = self.db_connection.cursor()\n        cursor.execute(\"SELECT * FROM orders WHERE customer_id = %s\", (customer_id,))\n        return cursor.fetchall()\n\n    def update_order_status(self, order_id, new_status):\n        cursor = self.db_connection.cursor()\n        cursor.execute(\"UPDATE orders SET status = %s WHERE id = %s\", (new_status, order_id))\n        self.db_connection.commit()"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, db_connection)",
                        "def calculate_total(self, order_items)",
                        "def save_order_to_db(self, order_data)",
                        "def notify_customer(self, customer_email, order_details)",
                        "def process_order(self, order_items, customer_id)",
                        "def get_order_history(self, customer_id)",
                        "def update_order_status(self, order_id, new_status)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1853,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 150,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 557,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 226,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 265,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 305,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3275,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3651,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3557,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1339,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1428,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 961,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "class OrderProcessor(private val database: Database) {\n\n    fun processOrder(orderId: Int): Boolean {\n        val order = database.getOrderById(orderId)\n        if (order == null || !validateOrder(order)) {\n            return false\n        }\n        updateInventory(order.items)\n        sendConfirmationEmail(order.customerEmail)\n        logTransaction(order)\n        return true\n    }\n\n    private fun validateOrder(order: Order): Boolean {\n        // validation logic\n        return true\n    }\n\n    private fun updateInventory(items: List<OrderItem>) {\n        // inventory update logic\n    }\n\n    private fun sendConfirmationEmail(email: String) {\n        // email sending logic\n    }\n\n    private fun logTransaction(order: Order) {\n        // logging logic\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "OrderProcessor",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class OrderProcessor(private val database: Database) {\n\n    fun processOrder(orderId: Int): Boolean {\n        val order = database.getOrderById(orderId)\n        if (order == null || !validateOrder(order)) {\n            return false\n        }\n        updateInventory(order.items)\n        sendConfirmationEmail(order.customerEmail)\n        logTransaction(order)\n        return true\n    }\n\n    private fun validateOrder(order: Order): Boolean {\n        // validation logic\n        return true\n    }\n\n    private fun updateInventory(items: List<OrderItem>) {\n        // inventory update logic\n    }\n\n    private fun sendConfirmationEmail(email: String) {\n        // email sending logic\n    }\n\n    private fun logTransaction(order: Order) {\n        // logging logic\n    }\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1158,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 147,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 266,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 179,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 509,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 623,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 6942,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 5379,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4713,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 829,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1214,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1000,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1475,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 147,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 465,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 393,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 226,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 293,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3458,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4334,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4229,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 27,
            "fail": 21,
            "error": 0,
            "accuracy": 0.5625
          }
        }
      },
      "overall_stats": {
        "total_pass": 27,
        "total_fail": 21,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "srp--gpt-4o-mini--example": {
    "example": {
      "model": "srp--gpt-4o-mini--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "srp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 184,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 153,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 156,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 165,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 157,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 181,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 209,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 192,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 244,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 260,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 238,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 267,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 182,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 151,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 154,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 163,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 196,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 234,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 177,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 203,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 242,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 235,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 339,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 244,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 182,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 157,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 164,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 165,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 196,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 325,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 270,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 216,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 232,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 228,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 263,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 258,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 182,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 153,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 156,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 165,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 174,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 308,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 278,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 222,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 244,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 273,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 242,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "SRP",
              "detected_violation": "SRP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 254,
              "model": "gpt-4o-mini",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 48,
            "fail": 0,
            "error": 0,
            "accuracy": 1.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 48,
        "total_fail": 0,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "ocp--qwen2.5-coder32b-temp0-latest--example": {
    "example": {
      "model": "ocp--qwen2.5-coder32b-temp0-latest--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "ocp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "public abstract class Shape {\n    public abstract double calculateArea();\n}\n\npublic class Rectangle extends Shape {\n    private double width;\n    private double height;\n\n    public Rectangle(double width, double height) {\n        this.width = width;\n        this.height = height;\n    }\n\n    @Override\n    public double calculateArea() {\n        return width * height;\n    }\n}\n\npublic class Circle extends Shape {\n    private double radius;\n\n    public Circle(double radius) {\n        this.radius = radius;\n    }\n\n    @Override\n    public double calculateArea() {\n        return Math.PI * radius * radius;\n    }\n}\n\npublic class AreaCalculator {\n    public double calculateArea(Shape shape) {\n        return shape.calculateArea();\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Shape",
                      ""
                    ],
                    [
                      "Rectangle",
                      ""
                    ],
                    [
                      "Circle",
                      ""
                    ],
                    [
                      "AreaCalculator",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "@Override",
                        "@Override"
                      ]
                    },
                    {
                      "pattern": "abstract_methods",
                      "matches": [
                        "abstract double calculateArea("
                      ]
                    }
                  ]
                }
              },
              "response_length": 1022,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 397,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 306,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 375,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 433,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 396,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 290,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 389,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3617,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3226,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3952,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4342,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 290,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 370,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 280,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 382,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 407,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 277,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 350,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 277,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4172,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3463,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3996,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 538,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 248,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 237,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 242,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 253,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 351,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 546,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 548,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 349,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4172,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2683,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 5521,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 442,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 266,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 370,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 297,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "class Vehicle\n{\n    public virtual double CalculateMaxSpeed()\n    {\n        return 0;\n    }\n}\n\nclass Car : Vehicle\n{\n    private int horsePower;\n\n    public Car(int horsePower)\n    {\n        this.horsePower = horsePower;\n    }\n\n    public override double CalculateMaxSpeed()\n    {\n        return horsePower * 0.4;\n    }\n}\n\nclass Bicycle : Vehicle\n{\n    private int gearCount;\n\n    public Bicycle(int gearCount)\n    {\n        this.gearCount = gearCount;\n    }\n\n    public override double CalculateMaxSpeed()\n    {\n        return gearCount * 5.0;\n    }\n}\n\nclass SpeedCalculator\n{\n    public double CalculateMaxSpeed(Vehicle vehicle)\n    {\n        return vehicle.CalculateMaxSpeed();\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Vehicle",
                      ""
                    ],
                    [
                      "Car",
                      "Vehicle"
                    ],
                    [
                      "Bicycle",
                      "Vehicle"
                    ],
                    [
                      "SpeedCalculator",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "override ",
                        "override "
                      ]
                    }
                  ]
                }
              },
              "response_length": 1045,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 341,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 277,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 632,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 447,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3339,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2811,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3345,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 8122,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 34,
            "fail": 14,
            "error": 0,
            "accuracy": 0.7083333333333334
          }
        }
      },
      "overall_stats": {
        "total_pass": 34,
        "total_fail": 14,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "ocp--qwen2.5-coder32b-temp0-latest--smell": {
    "smell": {
      "model": "ocp--qwen2.5-coder32b-temp0-latest--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "ocp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public class UserManager {\n    private List<User> users;\n\n    public UserManager() {\n        this.users = new ArrayList<>();\n    }\n\n    public void addUser(User user) {\n        users.add(user);\n        saveUserToDatabase(user);\n    }\n\n    public void removeUser(User user) {\n        users.remove(user);\n        deleteUserFromDatabase(user);\n    }\n\n    private void saveUserToDatabase(User user) {\n        // Database saving logic\n    }\n\n    private void deleteUserFromDatabase(User user) {\n        // Database deletion logic\n    }\n\n    public User findUserById(int id) {\n        for (User user : users) {\n            if (user.getId() == id) {\n                return user;\n            }\n        }\n        return null;\n    }\n\n    public List<User> getAllUsers() {\n        return new ArrayList<>(users);\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "UserManager",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class UserManager {\n    private List<User> users;\n\n    public UserManager() {\n        this.users = new ArrayList<>();\n    }\n\n    public void addUser(User user) {\n        users.add(user);\n        saveUserToDatabase(user);\n    }\n\n    public void removeUser(User user) {\n        users.remove(user);\n        deleteUserFromDatabase(user);\n    }\n\n    private void saveUserToDatabase(User user) {\n        // Database saving logic\n    }\n\n    private void deleteUserFromDatabase(User user) {\n        // Database deletion logic\n    }\n\n    public User findUserById(int id) {\n        for (User user : users) {\n            if (user.getId() == id) {\n                return user;\n            }\n        }\n        return null;\n    }\n\n    public List<User> getAllUsers() {\n        return new ArrayList<>(users);\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public UserManager()"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserManager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1160,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1194,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public class UserManager {\n    private List<User> users;\n\n    public UserManager() {\n        this.users = new ArrayList<>();\n    }\n\n    public void addUser(User user) {\n        users.add(user);\n        saveToDatabase(user);\n    }\n\n    public void removeUser(User user) {\n        users.remove(user);\n        deleteFromDatabase(user);\n    }\n\n    public User findUserById(int id) {\n        for (User user : users) {\n            if (user.getId() == id) {\n                return user;\n            }\n        }\n        return null;\n    }\n\n    private void saveToDatabase(User user) {\n        // Database saving logic\n    }\n\n    private void deleteFromDatabase(User user) {\n        // Database deletion logic\n    }\n\n    public void sendEmailToUser(User user, String message) {\n        // Email sending logic\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "UserManager",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class UserManager {\n    private List<User> users;\n\n    public UserManager() {\n        this.users = new ArrayList<>();\n    }\n\n    public void addUser(User user) {\n        users.add(user);\n        saveToDatabase(user);\n    }\n\n    public void removeUser(User user) {\n        users.remove(user);\n        deleteFromDatabase(user);\n    }\n\n    public User findUserById(int id) {\n        for (User user : users) {\n            if (user.getId() == id) {\n                return user;\n            }\n        }\n        return null;\n    }\n\n    private void saveToDatabase(User user) {\n        // Database saving logic\n    }\n\n    private void deleteFromDatabase(User user) {\n        // Database deletion logic\n    }\n\n    public void sendEmailToUser(User user, String message) {\n        // Email sending logic\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public UserManager()"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserManager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1205,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public class UserManager {\n    private String username;\n    private String password;\n    private String email;\n\n    public UserManager(String username, String password, String email) {\n        this.username = username;\n        this.password = password;\n        this.email = email;\n    }\n\n    public void saveUser() {\n        // Code to save user to the database\n    }\n\n    public boolean validatePassword(String inputPassword) {\n        return this.password.equals(inputPassword);\n    }\n\n    public String getUsername() {\n        return username;\n    }\n\n    public void setUsername(String username) {\n        this.username = username;\n    }\n\n    public String getEmail() {\n        return email;\n    }\n\n    public void setEmail(String email) {\n        this.email = email;\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "UserManager",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class UserManager {\n    private String username;\n    private String password;\n    private String email;\n\n    public UserManager(String username, String password, String email) {\n        this.username = username;\n        this.password = password;\n        this.email = email;\n    }\n\n    public void saveUser() {\n        // Code to save user to the database\n    }\n\n    public boolean validatePassword(String inputPassword) {\n        return this.password.equals(inputPassword);\n    }\n\n    public String getUsername() {\n        return username;\n    }\n\n    public void setUsername(String username) {\n        this.username = username;\n    }\n\n    public String getEmail() {\n        return email;\n    }\n\n    public void setEmail(String email) {\n        this.email = email;\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public UserManager(String username, String password, String email)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserManager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1130,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 219,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 527,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 220,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 174,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3617,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3226,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3952,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 6225,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1241,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class Game:\n    def __init__(self):\n        self.players = []\n        self.scoreboard = {}\n    \n    def add_player(self, player):\n        self.players.append(player)\n        self.scoreboard[player.name] = 0\n    \n    def remove_player(self, player_name):\n        for player in self.players:\n            if player.name == player_name:\n                self.players.remove(player)\n                del self.scoreboard[player_name]\n                break\n    \n    def update_score(self, player_name, points):\n        if player_name in self.scoreboard:\n            self.scoreboard[player_name] += points\n    \n    def get_player_count(self):\n        return len(self.players)\n    \n    def get_top_players(self, n):\n        sorted_players = sorted(self.scoreboard.items(), key=lambda x: x[1], reverse=True)\n        return sorted_players[:n]\n    \n    def start_game(self):\n        print(\"Game started!\")\n    \n    def end_game(self):\n        print(\"Game ended!\")\n    \n    def handle_player_movement(self, player_name, direction):\n        # Logic to handle player movement\n        pass\n    \n    def handle_player_attack(self, attacker_name, target_name):\n        # Logic to handle player attack\n        pass"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Game"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Game:\n    def __init__(self):\n        self.players = []\n        self.scoreboard = {}\n    \n    def add_player(self, player):\n        self.players.append(player)\n        self.scoreboard[player.name] = 0\n    \n    def remove_player(self, player_name):\n        for player in self.players:\n            if player.name == player_name:\n                self.players.remove(player)\n                del self.scoreboard[player_name]\n                break\n    \n    def update_score(self, player_name, points):\n        if player_name in self.scoreboard:\n            self.scoreboard[player_name] += points\n    \n    def get_player_count(self):\n        return len(self.players)\n    \n    def get_top_players(self, n):\n        sorted_players = sorted(self.scoreboard.items(), key=lambda x: x[1], reverse=True)\n        return sorted_players[:n]\n    \n    def start_game(self):\n        print(\"Game started!\")\n    \n    def end_game(self):\n        print(\"Game ended!\")\n    \n    def handle_player_movement(self, player_name, direction):\n        # Logic to handle player movement\n        pass\n    \n    def handle_player_attack(self, attacker_name, target_name):\n        # Logic to handle player attack\n        pass"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self)",
                        "def add_player(self, player)",
                        "def remove_player(self, player_name)",
                        "def update_score(self, player_name, points)",
                        "def get_player_count(self)",
                        "def get_top_players(self, n)",
                        "def start_game(self)",
                        "def end_game(self)",
                        "def handle_player_movement(self, player_name, direction)",
                        "def handle_player_attack(self, attacker_name, target_name)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1590,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class User:\n    def __init__(self, username, email, age):\n        self.username = username\n        self.email = email\n        self.age = age\n\n    def validate_email(self):\n        if \"@\" not in self.email or \".\" not in self.email:\n            raise ValueError(\"Invalid email address\")\n\n    def is_adult(self):\n        return self.age >= 18\n\n    def save_to_database(self):\n        # Simulate database operation\n        print(f\"Saving user {self.username} to the database\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "User"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class User:\n    def __init__(self, username, email, age):\n        self.username = username\n        self.email = email\n        self.age = age\n\n    def validate_email(self):\n        if \"@\" not in self.email or \".\" not in self.email:\n            raise ValueError(\"Invalid email address\")\n\n    def is_adult(self):\n        return self.age >= 18\n\n    def save_to_database(self):\n        # Simulate database operation\n        print(f\"Saving user {self.username} to the database\")"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, username, email, age)",
                        "def validate_email(self)",
                        "def is_adult(self)",
                        "def save_to_database(self)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 863,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class UserManager:\n    def __init__(self):\n        self.users = {}\n\n    def add_user(self, user_id, user_data):\n        self.users[user_id] = user_data\n\n    def remove_user(self, user_id):\n        if user_id in self.users:\n            del self.users[user_id]\n\n    def get_user(self, user_id):\n        return self.users.get(user_id)\n\n    def save_to_db(self):\n        # Simulate saving to a database\n        print(\"Saving users to database...\")\n\n    def load_from_db(self):\n        # Simulate loading from a database\n        print(\"Loading users from database...\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "UserManager"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class UserManager:\n    def __init__(self):\n        self.users = {}\n\n    def add_user(self, user_id, user_data):\n        self.users[user_id] = user_data\n\n    def remove_user(self, user_id):\n        if user_id in self.users:\n            del self.users[user_id]\n\n    def get_user(self, user_id):\n        return self.users.get(user_id)\n\n    def save_to_db(self):\n        # Simulate saving to a database\n        print(\"Saving users to database...\")\n\n    def load_from_db(self):\n        # Simulate loading from a database\n        print(\"Loading users from database...\")"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self)",
                        "def add_user(self, user_id, user_data)",
                        "def remove_user(self, user_id)",
                        "def get_user(self, user_id)",
                        "def save_to_db(self)",
                        "def load_from_db(self)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserManager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 963,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1449,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 335,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 171,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 168,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4172,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3463,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3996,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 205,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 629,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "class GameEngine {\n    private var players: MutableList<Player> = mutableListOf()\n    private var enemies: MutableList<Enemy> = mutableListOf()\n    private var level: Int = 1\n\n    fun addPlayer(player: Player) {\n        players.add(player)\n    }\n\n    fun removePlayer(player: Player) {\n        players.remove(player)\n    }\n\n    fun addEnemy(enemy: Enemy) {\n        enemies.add(enemy)\n    }\n\n    fun removeEnemy(enemy: Enemy) {\n        enemies.remove(enemy)\n    }\n\n    fun updateLevel(newLevel: Int) {\n        level = newLevel\n    }\n\n    fun startGame() {\n        // Game starting logic\n    }\n\n    fun endGame() {\n        // Game ending logic\n    }\n\n    fun processPlayerInput(input: String) {\n        // Process player input logic\n    }\n\n    fun updateGameState() {\n        // Update game state logic\n    }\n\n    fun renderGraphics() {\n        // Render graphics logic\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "GameEngine",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class GameEngine {\n    private var players: MutableList<Player> = mutableListOf()\n    private var enemies: MutableList<Enemy> = mutableListOf()\n    private var level: Int = 1\n\n    fun addPlayer(player: Player) {\n        players.add(player)\n    }\n\n    fun removePlayer(player: Player) {\n        players.remove(player)\n    }\n\n    fun addEnemy(enemy: Enemy) {\n        enemies.add(enemy)\n    }\n\n    fun removeEnemy(enemy: Enemy) {\n        enemies.remove(enemy)\n    }\n\n    fun updateLevel(newLevel: Int) {\n        level = newLevel\n    }\n\n    fun startGame() {\n        // Game starting logic\n    }\n\n    fun endGame() {\n        // Game ending logic\n    }\n\n    fun processPlayerInput(input: String) {\n        // Process player input logic\n    }\n\n    fun updateGameState() {\n        // Update game state logic\n    }\n\n    fun renderGraphics() {\n        // Render graphics logic\n    }\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 996,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 796,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 943,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1633,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 177,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 537,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2157,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4172,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2683,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 5521,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 382,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3286,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "csharp": [
                  "class GameEngine\n{\n    private List<Character> characters;\n    private bool isGameOver;\n\n    public GameEngine()\n    {\n        characters = new List<Character>();\n        isGameOver = false;\n    }\n\n    public void AddCharacter(Character character)\n    {\n        characters.Add(character);\n    }\n\n    public void RemoveCharacter(Character character)\n    {\n        characters.Remove(character);\n    }\n\n    public void UpdateGameState()\n    {\n        // Logic to update game state\n    }\n\n    public void HandleUserInput(string input)\n    {\n        // Logic to handle user input\n    }\n\n    public bool IsGameOver()\n    {\n        return isGameOver;\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [],
                  "classes": [
                    [
                      "GameEngine",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class GameEngine\n{\n    private List<Character> characters;\n    private bool isGameOver;\n\n    public GameEngine()\n    {\n        characters = new List<Character>();\n        isGameOver = false;\n    }\n\n    public void AddCharacter(Character character)\n    {\n        characters.Add(character);\n    }\n\n    public void RemoveCharacter(Character character)\n    {\n        characters.Remove(character);\n    }\n\n    public void UpdateGameState()\n    {\n        // Logic to update game state\n    }\n\n    public void HandleUserInput(string input)\n    {\n        // Logic to handle user input\n    }\n\n    public bool IsGameOver()\n    {\n        return isGameOver;\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public GameEngine()"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1020,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 7447,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "csharp": [
                  "public class UserManager\n{\n    private string connectionString = \"Server=myServerAddress;Database=myDataBase;User Id=myUsername;Password=myPassword;\";\n\n    public void AddUser(string username, string password)\n    {\n        using (SqlConnection connection = new SqlConnection(connectionString))\n        {\n            SqlCommand command = new SqlCommand(\"INSERT INTO Users (Username, Password) VALUES (@username, @password)\", connection);\n            command.Parameters.AddWithValue(\"@username\", username);\n            command.Parameters.AddWithValue(\"@password\", password);\n\n            connection.Open();\n            command.ExecuteNonQuery();\n        }\n    }\n\n    public void UpdateUser(int userId, string username, string password)\n    {\n        using (SqlConnection connection = new SqlConnection(connectionString))\n        {\n            SqlCommand command = new SqlCommand(\"UPDATE Users SET Username=@username, Password=@password WHERE Id=@id\", connection);\n            command.Parameters.AddWithValue(\"@id\", userId);\n            command.Parameters.AddWithValue(\"@username\", username);\n            command.Parameters.AddWithValue(\"@password\", password);\n\n            connection.Open();\n            command.ExecuteNonQuery();\n        }\n    }\n\n    public void DeleteUser(int userId)\n    {\n        using (SqlConnection connection = new SqlConnection(connectionString))\n        {\n            SqlCommand command = new SqlCommand(\"DELETE FROM Users WHERE Id=@id\", connection);\n            command.Parameters.AddWithValue(\"@id\", userId);\n\n            connection.Open();\n            command.ExecuteNonQuery();\n        }\n    }\n\n    public User GetUserById(int userId)\n    {\n        using (SqlConnection connection = new SqlConnection(connectionString))\n        {\n            SqlCommand command = new SqlCommand(\"SELECT * FROM Users WHERE Id=@id\", connection);\n            command.Parameters.AddWithValue(\"@id\", userId);\n\n            connection.Open();\n            SqlDataReader reader = command.ExecuteReader();\n\n            if (reader.Read())\n            {\n                return new User\n                {\n                    Id = (int)reader[\"Id\"],\n                    Username = (string)reader[\"Username\"],\n                    Password = (string)reader[\"Password\"]\n                };\n            }\n        }\n\n        return null;\n    }\n\n    public List<User> GetAllUsers()\n    {\n        using (SqlConnection connection = new SqlConnection(connectionString))\n        {\n            SqlCommand command = new SqlCommand(\"SELECT * FROM Users\", connection);\n\n            connection.Open();\n            SqlDataReader reader = command.ExecuteReader();\n\n            List<User> users = new List<User>();\n            while (reader.Read())\n            {\n                users.Add(new User\n                {\n                    Id = (int)reader[\"Id\"],\n                    Username = (string)reader[\"Username\"],\n                    Password = (string)reader[\"Password\"]\n                });\n            }\n\n            return users;\n        }\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [],
                  "classes": [
                    [
                      "UserManager",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class UserManager\n{\n    private string connectionString = \"Server=myServerAddress;Database=myDataBase;User Id=myUsername;Password=myPassword;\";\n\n    public void AddUser(string username, string password)\n    {\n        using (SqlConnection connection = new SqlConnection(connectionString))\n        {\n            SqlCommand command = new SqlCommand(\"INSERT INTO Users (Username, Password) VALUES (@username, @password)\", connection);\n            command.Parameters.AddWithValue(\"@username\", username);\n            command.Parameters.AddWithValue(\"@password\", password);\n\n            connection.Open();\n            command.ExecuteNonQuery();\n        }\n    }\n\n    public void UpdateUser(int userId, string username, string password)\n    {\n        using (SqlConnection connection = new SqlConnection(connectionString))\n        {\n            SqlCommand command = new SqlCommand(\"UPDATE Users SET Username=@username, Password=@password WHERE Id=@id\", connection);\n            command.Parameters.AddWithValue(\"@id\", userId);\n            command.Parameters.AddWithValue(\"@username\", username);\n            command.Parameters.AddWithValue(\"@password\", password);\n\n            connection.Open();\n            command.ExecuteNonQuery();\n        }\n    }\n\n    public void DeleteUser(int userId)\n    {\n        using (SqlConnection connection = new SqlConnection(connectionString))\n        {\n            SqlCommand command = new SqlCommand(\"DELETE FROM Users WHERE Id=@id\", connection);\n            command.Parameters.AddWithValue(\"@id\", userId);\n\n            connection.Open();\n            command.ExecuteNonQuery();\n        }\n    }\n\n    public User GetUserById(int userId)\n    {\n        using (SqlConnection connection = new SqlConnection(connectionString))\n        {\n            SqlCommand command = new SqlCommand(\"SELECT * FROM Users WHERE Id=@id\", connection);\n            command.Parameters.AddWithValue(\"@id\", userId);\n\n            connection.Open();\n            SqlDataReader reader = command.ExecuteReader();\n\n            if (reader.Read())\n            {\n                return new User\n                {\n                    Id = (int)reader[\"Id\"],\n                    Username = (string)reader[\"Username\"],\n                    Password = (string)reader[\"Password\"]\n                };\n            }\n        }\n\n        return null;\n    }\n\n    public List<User> GetAllUsers()\n    {\n        using (SqlConnection connection = new SqlConnection(connectionString))\n        {\n            SqlCommand command = new SqlCommand(\"SELECT * FROM Users\", connection);\n\n            connection.Open();\n            SqlDataReader reader = command.ExecuteReader();\n\n            List<User> users = new List<User>();\n            while (reader.Read())\n            {\n                users.Add(new User\n                {\n                    Id = (int)reader[\"Id\"],\n                    Username = (string)reader[\"Username\"],\n                    Password = (string)reader[\"Password\"]\n                });\n            }\n\n            return users;\n        }\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class UserManager"
                      ]
                    }
                  ]
                }
              },
              "response_length": 3388,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1813,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 375,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 194,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 196,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3339,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2811,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3345,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 5590,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 0,
            "fail": 48,
            "error": 0,
            "accuracy": 0.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 0,
        "total_fail": 48,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "ocp--codellama70b-temp0-latest--example": {
    "example": {
      "model": "ocp--codellama70b-temp0-latest--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "ocp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1632,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 580,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1499,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 998,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 912,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 809,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 340,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 975,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3553,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1219,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 921,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1117,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 168,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 733,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 900,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 168,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 168,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 157,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 168,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 168,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1324,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 7813,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 747,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 178,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "abstract class Shape {\n    abstract fun calculateArea(): Double\n}\n\nclass Rectangle(private val width: Double, private val height: Double) : Shape() {\n    override fun calculateArea(): Double {\n        return width * height\n    }\n}\n\nclass Circle(private val radius: Double) : Shape() {\n    override fun calculateArea(): Double {\n        return Math.PI * radius * radius\n    }\n}\n\nclass AreaCalculator {\n    fun calculateArea(shape: Shape): Double {\n        return shape.calculateArea()\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Shape",
                      ""
                    ],
                    [
                      "Rectangle",
                      ""
                    ],
                    [
                      "Circle",
                      ""
                    ],
                    [
                      "AreaCalculator",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "override ",
                        "override "
                      ]
                    },
                    {
                      "pattern": "abstract_methods",
                      "matches": [
                        "abstract fun calculateArea("
                      ]
                    }
                  ]
                }
              },
              "response_length": 1334,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 851,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 625,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1458,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1372,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1137,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 297,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 612,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 453,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4283,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1170,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 166,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1336,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 512,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1029,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 960,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 866,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 356,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1138,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1025,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 653,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1773,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 854,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 726,
              "model": "codellama70b-temp0:latest",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 4,
            "fail": 44,
            "error": 0,
            "accuracy": 0.08333333333333333
          }
        }
      },
      "overall_stats": {
        "total_pass": 4,
        "total_fail": 44,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "ocp--deepseek33b-temp0-latest--smell": {
    "smell": {
      "model": "ocp--deepseek33b-temp0-latest--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "ocp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 367,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 373,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 323,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 360,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 347,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 305,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 294,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 651,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2144,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 826,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2306,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1772,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2297,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 433,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 247,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 333,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 395,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 408,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 323,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 362,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1581,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1614,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 584,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1907,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 338,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 521,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 396,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 350,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 347,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 638,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 443,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 696,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4138,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 970,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1940,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 753,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 414,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 417,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 323,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 353,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 486,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 228,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 317,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 321,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2149,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 885,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1632,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3264,
              "model": "deepseek33b-temp0:latest",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 1,
            "fail": 47,
            "error": 0,
            "accuracy": 0.020833333333333332
          }
        }
      },
      "overall_stats": {
        "total_pass": 1,
        "total_fail": 47,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "ocp--codellama70b-temp0-latest--default": {
    "default": {
      "model": "ocp--codellama70b-temp0-latest--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "ocp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 490,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 373,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 263,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public class Vehicle {\n    private String type;\n    \n    public Vehicle(String type) {\n        this.type = type;\n    }\n    \n    public String getType() {\n        return type;\n    }\n}\n\npublic class Car extends Vehicle {\n    private int horsePower;\n    \n    public Car(int horsePower) {\n        super(\"car\");\n        this.horsePower = horsePower;\n    }\n    \n    public double calculateMaxSpeed() {\n        return horsePower * 0.4;\n    }\n}\n\npublic class Bicycle extends Vehicle {\n    private int gearCount;\n    \n    public Bicycle(int gearCount) {\n        super(\"bicycle\");\n        this.gearCount = gearCount;\n    }\n    \n    public double calculateMaxSpeed() {\n        return gearCount * 5.0;\n    }\n}\n\npublic class SpeedCalculator {\n    public double calculateMaxSpeed(Vehicle vehicle) {\n        return vehicle.calculateMaxSpeed();\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Vehicle",
                      ""
                    ],
                    [
                      "Car",
                      ""
                    ],
                    [
                      "Bicycle",
                      ""
                    ],
                    [
                      "SpeedCalculator",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "proper_inheritance",
                      "matches": [
                        "class Car extends Vehicle",
                        "class Bicycle extends Vehicle"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1623,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 385,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 295,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 302,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 377,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2051,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1219,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 853,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1117,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 501,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 484,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 238,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 440,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 539,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 168,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 168,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 168,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3270,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 25,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 747,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 200,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 499,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "interface Character {\n    fun getType(): String\n}\n\nclass Warrior(private val strength: Int) : Character {\n    override fun getType() = \"warrior\"\n    fun getStrength() = strength\n}\n\nclass Mage(private val mana: Int) : Character {\n    override fun getType() = \"mage\"\n    fun getMana() = mana\n}\n\ninterface DamageCalculator {\n    fun calculateDamage(): Int\n}\n\nclass WarriorDamageCalculator(val warrior: Warrior) : DamageCalculator {\n    override fun calculateDamage() = warrior.getStrength() * 2\n}\n\nclass MageDamageCalculator(val mage: Mage) : DamageCalculator {\n    override fun calculateDamage() = mage.getMana() * 3\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "Character",
                    "DamageCalculator"
                  ],
                  "classes": [
                    [
                      "Warrior",
                      ""
                    ],
                    [
                      "Mage",
                      ""
                    ],
                    [
                      "WarriorDamageCalculator",
                      ""
                    ],
                    [
                      "MageDamageCalculator",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "override ",
                        "override ",
                        "override ",
                        "override "
                      ]
                    }
                  ]
                }
              },
              "response_length": 1543,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 236,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 687,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 655,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 324,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 340,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 281,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 454,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 909,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1218,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 166,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 444,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "class Character\n{\n    private string type;\n\n    public Character(string type)\n    {\n        this.type = type;\n    }\n\n    public virtual int CalculateDamage()\n    {\n        return 0;\n    }\n}\n\nclass Warrior : Character\n{\n    private int strength;\n\n    public Warrior(int strength) : base(\"warrior\")\n    {\n        this.strength = strength;\n    }\n\n    public override int CalculateDamage()\n    {\n        return strength * 2;\n    }\n}\n\nclass Mage : Character\n{\n    private int mana;\n\n    public Mage(int mana) : base(\"mage\")\n    {\n        this.mana = mana;\n    }\n\n    public override int CalculateDamage()\n    {\n        return mana * 3;\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Character",
                      ""
                    ],
                    [
                      "Warrior",
                      "Character"
                    ],
                    [
                      "Mage",
                      "Character"
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "override ",
                        "override "
                      ]
                    }
                  ]
                }
              },
              "response_length": 1309,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 412,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 635,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 918,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 437,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1052,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 292,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 939,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3230,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 854,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 665,
              "model": "codellama70b-temp0:latest",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 6,
            "fail": 42,
            "error": 0,
            "accuracy": 0.125
          }
        }
      },
      "overall_stats": {
        "total_pass": 6,
        "total_fail": 42,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "ocp--deepseek33b-temp0-latest--example": {
    "example": {
      "model": "ocp--deepseek33b-temp0-latest--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "ocp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 361,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 784,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 654,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 390,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 741,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public class CustomerValidator {\n    private CustomerRepository repository;\n    \n    public CustomerValidator(CustomerRepository repository) {\n        this.repository = repository;\n    }\n    \n    public void validateCustomerData(String name, String email) {\n        // validation logic here...\n    }\n}\n\npublic class WelcomeEmailSender {\n    private EmailService emailService;\n    \n    public WelcomeEmailSender(EmailService emailService) {\n        this.emailService = emailService;\n    }\n    \n    public void sendWelcomeEmail(Customer customer, String customerType) {\n        // welcome email creation and sending logic here...\n    }\n}\n\npublic class CustomerService {\n    private CustomerRepository repository;\n    private WelcomeEmailSender welcomeEmailSender;\n    private CustomerValidator validator;\n    \n    public CustomerService(CustomerRepository repository, WelcomeEmailSender welcomeEmailSender, CustomerValidator validator) {\n        this.repository = repository;\n        this.welcomeEmailSender = welcomeEmailSender;\n        this.validator = validator;\n    }\n    \n    public Customer registerCustomer(String name, String email, String customerType) {\n        validator.validateCustomerData(name, email);\n        \n        Customer customer = new Customer(name, email);\n        repository.save(customer);\n        \n        welcomeEmailSender.sendWelcomeEmail(customer, customerType);\n        \n        return customer;\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "CustomerValidator",
                      ""
                    ],
                    [
                      "WelcomeEmailSender",
                      ""
                    ],
                    [
                      "CustomerService",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class CustomerValidator {\n    private CustomerRepository repository;\n    \n    public CustomerValidator(CustomerRepository repository) {\n        this.repository = repository;\n    }\n    \n    public void validateCustomerData(String name, String email) {\n        // validation logic here...\n    }\n}\n\npublic ",
                        "class WelcomeEmailSender {\n    private EmailService emailService;\n    \n    public WelcomeEmailSender(EmailService emailService) {\n        this.emailService = emailService;\n    }\n    \n    public void sendWelcomeEmail(Customer customer, String customerType) {\n        // welcome email creation and sending logic here...\n    }\n}\n\npublic ",
                        "class CustomerService {\n    private CustomerRepository repository;\n    private WelcomeEmailSender welcomeEmailSender;\n    private CustomerValidator validator;\n    \n    public CustomerService(CustomerRepository repository, WelcomeEmailSender welcomeEmailSender, CustomerValidator validator) {\n        this.repository = repository;\n        this.welcomeEmailSender = welcomeEmailSender;\n        this.validator = validator;\n    }\n    \n    public Customer registerCustomer(String name, String email, String customerType) {\n        validator.validateCustomerData(name, email);\n        \n        Customer customer = new Customer(name, email);\n        repository.save(customer);\n        \n        welcomeEmailSender.sendWelcomeEmail(customer, customerType);\n        \n        return customer;\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public CustomerValidator(CustomerRepository repository)",
                        "public WelcomeEmailSender(EmailService emailService)",
                        "public CustomerService(CustomerRepository repository, WelcomeEmailSender welcomeEmailSender, CustomerValidator validator)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class CustomerService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 2210,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 471,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 724,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2144,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 834,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1732,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1847,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 248,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class Character:\n    def __init__(self, type):\n        self.__type = type\n    \n    def get_type(self):\n        return self.__type\n\nclass Warrior(Character):\n    def __init__(self, strength):\n        super().__init__(\"warrior\")\n        self.__strength = strength\n    \n    def get_strength(self):\n        return self.__strength\n\nclass Mage(Character):\n    def __init__(self, mana):\n        super().__init__(\"mage\")\n        self.__mana = mana\n    \n    def get_mana(self):\n        return self.__mana\n\nclass DamageCalculator:\n    @staticmethod\n    def calculate_damage(character):\n        if isinstance(character, Warrior):\n            return character.get_strength() * 2\n        elif isinstance(character, Mage):\n            return character.get_mana() * 3\n        else:\n            return 0"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Character",
                    "Warrior",
                    "Mage",
                    "DamageCalculator"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Character:\n    def __init__(self, type):\n        self.__type = type\n    \n    def get_type(self):\n        return self.__type\n\n",
                        "class Warrior(Character):\n    def __init__(self, strength):\n        super().__init__(\"warrior\")\n        self.__strength = strength\n    \n    def get_strength(self):\n        return self.__strength\n\n",
                        "class Mage(Character):\n    def __init__(self, mana):\n        super().__init__(\"mage\")\n        self.__mana = mana\n    \n    def get_mana(self):\n        return self.__mana\n\n",
                        "class DamageCalculator:\n    @staticmethod\n    def calculate_damage(character):\n        if isinstance(character, Warrior):\n            return character.get_strength() * 2\n        elif isinstance(character, Mage):\n            return character.get_mana() * 3\n        else:\n            return 0"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, type)",
                        "def get_type(self)",
                        "def __init__(self, strength)",
                        "def get_strength(self)",
                        "def __init__(self, mana)",
                        "def get_mana(self)",
                        "def calculate_damage(character)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1627,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 433,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 366,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 362,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 517,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 389,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 609,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1581,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1614,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 584,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1907,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 470,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "abstract class Character {\n    abstract fun calculateDamage(): Int\n}\n\nclass Warrior(private val strength: Int) : Character() {\n    override fun calculateDamage(): Int = strength * 2\n}\n\nclass Mage(private val mana: Int) : Character() {\n    override fun calculateDamage(): Int = mana * 3\n}\n\nclass DamageCalculator {\n    fun calculateDamage(character: Character): Int = character.calculateDamage()\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Character",
                      ""
                    ],
                    [
                      "Warrior",
                      ""
                    ],
                    [
                      "Mage",
                      ""
                    ],
                    [
                      "DamageCalculator",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "override ",
                        "override "
                      ]
                    },
                    {
                      "pattern": "abstract_methods",
                      "matches": [
                        "abstract fun calculateDamage("
                      ]
                    }
                  ]
                }
              },
              "response_length": 1144,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "interface Animal {\n    fun makeSound(): String\n}\n\nclass Dog : Animal {\n    override fun makeSound() = \"Woof!\"\n}\n\nclass Cat : Animal {\n    override fun makeSound() = \"Meow!\"\n}\n\nclass SoundMaker(private val animal: Animal) {\n    fun makeSound(): String {\n        return animal.makeSound()\n    }\n}\n\nobject AnimalFactory {\n    fun createAnimal(type: String): Animal? {\n        return when (type) {\n            \"dog\" -> Dog()\n            \"cat\" -> Cat()\n            else -> null\n        }\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "Animal"
                  ],
                  "classes": [
                    [
                      "Dog",
                      "Animal"
                    ],
                    [
                      "Cat",
                      "Animal"
                    ],
                    [
                      "SoundMaker",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Dog : Animal {\n    override fun makeSound() = \"Woof!\"\n}\n\n",
                        "class Cat : Animal {\n    override fun makeSound() = \"Meow!\"\n}\n\n",
                        "class SoundMaker(private val animal: Animal) {\n    fun makeSound(): String {\n        return animal.makeSound()\n    }\n}\n\nobject AnimalFactory {\n    fun createAnimal(type: String): Animal? {\n        return when (type) {\n            \"dog\" -> Dog()\n            \"cat\" -> Cat()\n            else -> null\n        }\n    }\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1260,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 378,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 748,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 399,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1083,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 725,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4164,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 970,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1940,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 753,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 364,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 437,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "abstract class Animal\n{\n    public abstract string MakeSound();\n}\n\nclass Dog : Animal\n{\n    public override string MakeSound()\n    {\n        return \"Woof!\";\n    }\n}\n\nclass Cat : Animal\n{\n    public override string MakeSound()\n    {\n        return \"Meow!\";\n    }\n}\n\nclass SoundMaker\n{\n    public string MakeSound(Animal animal)\n    {\n        return animal.MakeSound();\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Animal",
                      ""
                    ],
                    [
                      "Dog",
                      "Animal"
                    ],
                    [
                      "Cat",
                      "Animal"
                    ],
                    [
                      "SoundMaker",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "override ",
                        "override "
                      ]
                    },
                    {
                      "pattern": "abstract_methods",
                      "matches": [
                        "abstract string MakeSound("
                      ]
                    }
                  ]
                }
              },
              "response_length": 1162,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "csharp": [
                  "abstract class Vehicle\n{\n    private string type;\n\n    public Vehicle(string type)\n    {\n        this.type = type;\n    }\n\n    public string GetType()\n    {\n        return type;\n    }\n}\n\nclass Car : Vehicle\n{\n    private int horsePower;\n\n    public Car(int horsePower) : base(\"car\")\n    {\n        this.horsePower = horsePower;\n    }\n\n    public int GetHorsePower()\n    {\n        return horsePower;\n    }\n}\n\nclass Bicycle : Vehicle\n{\n    private int gearCount;\n\n    public Bicycle(int gearCount) : base(\"bicycle\")\n    {\n        this.gearCount = gearCount;\n    }\n\n    public int GetGearCount()\n    {\n        return gearCount;\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Vehicle",
                      ""
                    ],
                    [
                      "Car",
                      "Vehicle"
                    ],
                    [
                      "Bicycle",
                      "Vehicle"
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Vehicle\n{\n    private string type;\n\n    public Vehicle(string type)\n    {\n        this.type = type;\n    }\n\n    public string GetType()\n    {\n        return type;\n    }\n}\n\n",
                        "class Car : Vehicle\n{\n    private int horsePower;\n\n    public Car(int horsePower) : base(\"car\")\n    {\n        this.horsePower = horsePower;\n    }\n\n    public int GetHorsePower()\n    {\n        return horsePower;\n    }\n}\n\n",
                        "class Bicycle : Vehicle\n{\n    private int gearCount;\n\n    public Bicycle(int gearCount) : base(\"bicycle\")\n    {\n        this.gearCount = gearCount;\n    }\n\n    public int GetGearCount()\n    {\n        return gearCount;\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public Vehicle(string type)",
                        "public Car(int horsePower)",
                        "public Bicycle(int gearCount)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1198,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 890,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1029,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 688,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 623,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2149,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 728,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1632,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3685,
              "model": "deepseek33b-temp0:latest",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 4,
            "fail": 44,
            "error": 0,
            "accuracy": 0.08333333333333333
          }
        }
      },
      "overall_stats": {
        "total_pass": 4,
        "total_fail": 44,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "ocp--qwen2.5-coder32b-temp0-latest--ensemble": {
    "ensemble": {
      "model": "ocp--qwen2.5-coder32b-temp0-latest--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "ocp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1810,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1758,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1777,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1504,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1614,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1765,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1822,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1592,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1792,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1697,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2089,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2081,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1876,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1708,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1583,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1803,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1704,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1900,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2175,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1611,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1977,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1876,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1876,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2025,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1659,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1665,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1816,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1590,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1580,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1906,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2099,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1474,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1714,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2116,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1743,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2195,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1609,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1569,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1610,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1675,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1578,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1861,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1906,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1516,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1583,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1551,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1924,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1959,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 27,
            "fail": 21,
            "error": 0,
            "accuracy": 0.5625
          }
        }
      },
      "overall_stats": {
        "total_pass": 27,
        "total_fail": 21,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "ocp--deepseek33b-temp0-latest--ensemble": {
    "ensemble": {
      "model": "ocp--deepseek33b-temp0-latest--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "ocp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1675,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1309,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1260,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1505,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1549,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1547,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2395,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1655,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1257,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1615,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1344,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1423,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1667,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2036,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1244,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1493,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1379,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1094,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1833,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1693,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1369,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1518,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1464,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1159,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1411,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1355,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1619,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1266,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1535,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1727,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1872,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1608,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1312,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1395,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1570,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1520,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1478,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1706,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1183,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1249,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1439,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1568,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "ISP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1458,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1630,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1322,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1251,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1091,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "NONE",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1527,
              "model": "deepseek33b-temp0:latest",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 16,
            "fail": 32,
            "error": 0,
            "accuracy": 0.3333333333333333
          }
        }
      },
      "overall_stats": {
        "total_pass": 16,
        "total_fail": 32,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "ocp--gpt-4o-mini--example": {
    "example": {
      "model": "ocp--gpt-4o-mini--example",
      "prompt_type": "example",
      "total_items": 48,
      "violation_results": {
        "ocp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 188,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 192,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 241,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 194,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 233,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 191,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 214,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 191,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 206,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 250,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 10,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 219,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 11,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 188,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 209,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 215,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 211,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 212,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 188,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 17,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 191,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 18,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 218,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 19,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 189,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 20,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 209,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 21,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 205,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 22,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 221,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 23,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 193,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 239,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 254,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 282,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 287,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 233,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 29,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 188,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 30,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 205,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 191,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 237,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 33,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 202,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 34,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 187,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 35,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 203,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 216,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 208,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 219,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 218,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 233,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 41,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 191,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 42,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 214,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 191,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 44,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 183,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 45,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 206,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 46,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 189,
              "model": "gpt-4o-mini",
              "strategy": "example"
            },
            {
              "id": 47,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 193,
              "model": "gpt-4o-mini",
              "strategy": "example"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 47,
            "fail": 1,
            "error": 0,
            "accuracy": 0.9791666666666666
          }
        }
      },
      "overall_stats": {
        "total_pass": 47,
        "total_fail": 1,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "ocp--gpt-4o-mini--ensemble": {
    "ensemble": {
      "model": "ocp--gpt-4o-mini--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "ocp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1598,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1541,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1481,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1450,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1675,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1587,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1655,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1401,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1757,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1701,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1798,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1611,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1580,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1503,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1332,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1611,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1477,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1587,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1543,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1401,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1623,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1749,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1869,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1535,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1588,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1506,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1343,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1546,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1568,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1560,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1767,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1340,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1525,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1867,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1824,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1514,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1530,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1717,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1336,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1687,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1483,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1502,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1571,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1599,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1637,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1923,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1410,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1601,
              "model": "gpt-4o-mini",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 41,
            "fail": 7,
            "error": 0,
            "accuracy": 0.8541666666666666
          }
        }
      },
      "overall_stats": {
        "total_pass": 41,
        "total_fail": 7,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "ocp--codellama70b-temp0-latest--smell": {
    "smell": {
      "model": "ocp--codellama70b-temp0-latest--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "ocp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 435,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 416,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 537,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 410,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2285,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 571,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1004,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 527,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1893,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1577,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1305,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1272,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 946,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1061,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 977,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 538,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 133,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1072,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 168,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 168,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2850,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 25,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 747,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 200,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 814,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 538,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 657,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 539,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2311,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 543,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1647,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 952,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 830,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 5641,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1028,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 166,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 752,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 568,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1059,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 795,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 857,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 496,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1608,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 428,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 657,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1461,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 854,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 682,
              "model": "codellama70b-temp0:latest",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 0,
            "fail": 48,
            "error": 0,
            "accuracy": 0.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 0,
        "total_fail": 48,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "ocp--gpt-4o-mini--default": {
    "default": {
      "model": "ocp--gpt-4o-mini--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "ocp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1021,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1068,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 962,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 856,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1079,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1204,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1434,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1324,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1278,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1300,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1474,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1432,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1061,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1089,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 872,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 845,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1022,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1143,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 932,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1057,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1301,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1069,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1333,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1238,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 945,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1094,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 794,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1001,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 861,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1054,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1107,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1046,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1134,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1123,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1208,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1008,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 934,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 884,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 939,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 962,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 926,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1172,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1084,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1000,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1444,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 976,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1668,
              "model": "gpt-4o-mini",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1263,
              "model": "gpt-4o-mini",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 9,
            "fail": 39,
            "error": 0,
            "accuracy": 0.1875
          }
        }
      },
      "overall_stats": {
        "total_pass": 9,
        "total_fail": 39,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "ocp--codellama70b-temp0-latest--ensemble": {
    "ensemble": {
      "model": "ocp--codellama70b-temp0-latest--ensemble",
      "prompt_type": "ensemble",
      "total_items": 48,
      "violation_results": {
        "ocp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2092,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1383,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1194,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1735,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1512,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 5,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2289,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 6,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2085,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 7,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2062,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 8,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1613,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 9,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1744,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 10,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1621,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1799,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1801,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1511,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1391,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1803,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1175,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 17,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2168,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1807,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 19,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2172,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 20,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1969,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1736,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 22,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1659,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 23,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1218,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2053,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1878,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2090,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1383,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1430,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 29,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2411,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1515,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2042,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 32,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1939,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1898,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 34,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1805,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1803,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1657,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1614,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1750,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1473,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1535,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2148,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2090,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2245,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 44,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2104,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1899,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 46,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1754,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "LSP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2288,
              "model": "codellama70b-temp0:latest",
              "strategy": "ensemble"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 32,
            "fail": 16,
            "error": 0,
            "accuracy": 0.6666666666666666
          }
        }
      },
      "overall_stats": {
        "total_pass": 32,
        "total_fail": 16,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "ocp--qwen2.5-coder32b-temp0-latest--default": {
    "default": {
      "model": "ocp--qwen2.5-coder32b-temp0-latest--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "ocp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1594,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2008,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1611,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "java": [
                  "public abstract class Vehicle {\n    private String type;\n    \n    public Vehicle(String type) {\n        this.type = type;\n    }\n    \n    public String getType() {\n        return type;\n    }\n\n    // Abstract method to calculate max speed\n    public abstract double calculateMaxSpeed();\n}\n\npublic class Car extends Vehicle {\n    private int horsePower;\n    \n    public Car(int horsePower) {\n        super(\"car\");\n        this.horsePower = horsePower;\n    }\n    \n    public int getHorsePower() {\n        return horsePower;\n    }\n\n    @Override\n    public double calculateMaxSpeed() {\n        return horsePower * 0.4;\n    }\n}\n\npublic class Bicycle extends Vehicle {\n    private int gearCount;\n    \n    public Bicycle(int gearCount) {\n        super(\"bicycle\");\n        this.gearCount = gearCount;\n    }\n    \n    public int getGearCount() {\n        return gearCount;\n    }\n\n    @Override\n    public double calculateMaxSpeed() {\n        return gearCount * 5.0;\n    }\n}\n\npublic class SpeedCalculator {\n    public double calculateMaxSpeed(Vehicle vehicle) {\n        // Now, the method is open for extension but closed for modification.\n        return vehicle.calculateMaxSpeed();\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Vehicle",
                      ""
                    ],
                    [
                      "Car",
                      ""
                    ],
                    [
                      "Bicycle",
                      ""
                    ],
                    [
                      "SpeedCalculator",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "@Override",
                        "@Override"
                      ]
                    },
                    {
                      "pattern": "abstract_methods",
                      "matches": [
                        "abstract double calculateMaxSpeed("
                      ]
                    }
                  ]
                }
              },
              "response_length": 2234,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public interface PaymentProcessor {\n    void processPayment(double amount);\n}\n\npublic class CreditCardPaymentProcessor implements PaymentProcessor {\n    @Override\n    public void processPayment(double amount) {\n        System.out.println(\"Processing credit card payment of $\" + amount);\n        System.out.println(\"Validating credit card information\");\n        System.out.println(\"Charging credit card\");\n        System.out.println(\"Recording the credit card transaction\");\n    }\n}\n\npublic class PaypalPaymentProcessor implements PaymentProcessor {\n    @Override\n    public void processPayment(double amount) {\n        System.out.println(\"Processing PayPal payment of $\" + amount);\n        System.out.println(\"Redirecting user to PayPal\");\n        System.out.println(\"Confirming PayPal payment\");\n        System.out.println(\"Recording the PayPal transaction\");\n    }\n}\n\npublic class BankTransferPaymentProcessor implements PaymentProcessor {\n    @Override\n    public void processPayment(double amount) {\n        System.out.println(\"Processing bank transfer of $\" + amount);\n        System.out.println(\"Generating bank transfer instructions\");\n        System.out.println(\"Sending transfer confirmation email\");\n        System.out.println(\"Recording the bank transfer transaction\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "PaymentProcessor"
                  ],
                  "classes": [
                    [
                      "CreditCardPaymentProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "PaypalPaymentProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "BankTransferPaymentProcessor",
                      "PaymentProcessor"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class CreditCardPaymentProcessor implements PaymentProcessor {\n    @Override\n    public void processPayment(double amount) {\n        System.out.println(\"Processing credit card payment of $\" + amount);\n        System.out.println(\"Validating credit card information\");\n        System.out.println(\"Charging credit card\");\n        System.out.println(\"Recording the credit card transaction\");\n    }\n}\n\npublic ",
                        "class PaypalPaymentProcessor implements PaymentProcessor {\n    @Override\n    public void processPayment(double amount) {\n        System.out.println(\"Processing PayPal payment of $\" + amount);\n        System.out.println(\"Redirecting user to PayPal\");\n        System.out.println(\"Confirming PayPal payment\");\n        System.out.println(\"Recording the PayPal transaction\");\n    }\n}\n\npublic ",
                        "class BankTransferPaymentProcessor implements PaymentProcessor {\n    @Override\n    public void processPayment(double amount) {\n        System.out.println(\"Processing bank transfer of $\" + amount);\n        System.out.println(\"Generating bank transfer instructions\");\n        System.out.println(\"Sending transfer confirmation email\");\n        System.out.println(\"Recording the bank transfer transaction\");\n    }\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1993,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 986,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public class NotificationService {\n    private Logger logger;\n\n    public NotificationService(Logger logger) {\n        this.logger = logger;\n    }\n\n    public void notifyUser(Document document, User recipient, User sharedBy) {\n        String recipientContact = recipient.getContactInfo();\n        String message = \"Document '\" + document.getTitle() + \"' has been shared with you by \" + sharedBy.getUsername();\n\n        String contactType = recipient.getPreferredContactMethod();\n\n        switch (contactType) {\n            case \"email\":\n                sendEmail(recipientContact, \"Document Shared\", message);\n                break;\n            case \"sms\":\n                sendSMS(recipientContact, message);\n                break;\n            case \"push\":\n                sendPushNotification(recipientContact, \"Document Shared\", message);\n                break;\n            case \"slack\":\n                sendSlackMessage(recipientContact, message);\n                break;\n            default:\n                logger.log(\"Unknown contact method: \" + contactType);\n        }\n    }\n\n    private void sendEmail(String email, String subject, String message) {\n        System.out.println(\"Sending email to \" + email);\n        System.out.println(\"Subject: \" + subject);\n        System.out.println(\"Message: \" + message);\n    }\n\n    private void sendSMS(String phoneNumber, String message) {\n        System.out.println(\"Sending SMS to \" + phoneNumber);\n        System.out.println(\"Message: \" + message);\n    }\n\n    private void sendPushNotification(String deviceId, String title, String message) {\n        System.out.println(\"Sending push notification to device \" + deviceId);\n        System.out.println(\"Title: \" + title);\n        System.out.println(\"Message: \" + message);\n    }\n\n    private void sendSlackMessage(String slackUserId, String message) {\n        System.out.println(\"Sending Slack message to \" + slackUserId);\n        System.out.println(\"Message: \" + message);\n    }\n}",
                  "public class DocumentService {\n    private DocumentRepository repository;\n    private SecurityService securityService;\n    private Logger logger;\n    private NotificationService notificationService;\n\n    public DocumentService(DocumentRepository repository, SecurityService securityService, Logger logger) {\n        this.repository = repository;\n        this.securityService = securityService;\n        this.logger = logger;\n        this.notificationService = new NotificationService(logger);\n    }\n\n    // ... existing methods ...\n\n    public void shareDocument(Document document, User recipient, User sharedBy) {\n        validateSharingPermissions(document, sharedBy);\n        document.addSharedUser(recipient);\n        repository.update(document);\n        logger.log(\"Document \" + document.getId() + \" shared with \" + recipient.getUsername());\n        notificationService.notifyUser(document, recipient, sharedBy);\n    }\n\n    // ... existing methods ...\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "NotificationService",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class NotificationService {\n    private Logger logger;\n\n    public NotificationService(Logger logger) {\n        this.logger = logger;\n    }\n\n    public void notifyUser(Document document, User recipient, User sharedBy) {\n        String recipientContact = recipient.getContactInfo();\n        String message = \"Document '\" + document.getTitle() + \"' has been shared with you by \" + sharedBy.getUsername();\n\n        String contactType = recipient.getPreferredContactMethod();\n\n        switch (contactType) {\n            case \"email\":\n                sendEmail(recipientContact, \"Document Shared\", message);\n                break;\n            case \"sms\":\n                sendSMS(recipientContact, message);\n                break;\n            case \"push\":\n                sendPushNotification(recipientContact, \"Document Shared\", message);\n                break;\n            case \"slack\":\n                sendSlackMessage(recipientContact, message);\n                break;\n            default:\n                logger.log(\"Unknown contact method: \" + contactType);\n        }\n    }\n\n    private void sendEmail(String email, String subject, String message) {\n        System.out.println(\"Sending email to \" + email);\n        System.out.println(\"Subject: \" + subject);\n        System.out.println(\"Message: \" + message);\n    }\n\n    private void sendSMS(String phoneNumber, String message) {\n        System.out.println(\"Sending SMS to \" + phoneNumber);\n        System.out.println(\"Message: \" + message);\n    }\n\n    private void sendPushNotification(String deviceId, String title, String message) {\n        System.out.println(\"Sending push notification to device \" + deviceId);\n        System.out.println(\"Title: \" + title);\n        System.out.println(\"Message: \" + message);\n    }\n\n    private void sendSlackMessage(String slackUserId, String message) {\n        System.out.println(\"Sending Slack message to \" + slackUserId);\n        System.out.println(\"Message: \" + message);\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public NotificationService(Logger logger)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class NotificationService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 4168,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public interface ReportGenerator {\n    byte[] generate(ReportData data);\n}\n\npublic class PdfReportGenerator implements ReportGenerator {\n    @Override\n    public byte[] generate(ReportData data) {\n        PdfDocument document = new PdfDocument();\n        return document.generate();\n    }\n}\n\npublic class ExcelReportGenerator implements ReportGenerator {\n    @Override\n    public byte[] generate(ReportData data) {\n        ExcelDocument document = new ExcelDocument();\n        return document.generate();\n    }\n}\n\n// Similarly, implement HtmlReportGenerator and CsvReportGenerator\n\npublic class ReportExporter {\n    private DataSource dataSource;\n    private FileSystem fileSystem;\n    private Map<String, ReportGenerator> reportGenerators;\n\n    public ReportExporter(DataSource dataSource, FileSystem fileSystem) {\n        this.dataSource = dataSource;\n        this.fileSystem = fileSystem;\n        this.reportGenerators = new HashMap<>();\n        reportGenerators.put(\"pdf\", new PdfReportGenerator());\n        reportGenerators.put(\"excel\", new ExcelReportGenerator());\n        // Add other generators\n    }\n\n    public ExportResult exportReport(String reportId, String exportFormat, String destination) {\n        Report report = dataSource.getReport(reportId);\n        \n        if (report == null) {\n            return new ExportResult(false, \"Report not found\", null);\n        }\n        \n        byte[] reportData = generateReportData(report, exportFormat);\n        if (reportData == null) {\n            return new ExportResult(false, \"Failed to generate report\", null);\n        }\n        \n        String fileName = report.getTitle() + getFileExtension(exportFormat);\n        fileSystem.writeFile(destination + \"/\" + fileName, reportData);\n        return new ExportResult(true, \"Report exported successfully\", destination + \"/\" + fileName);\n    }\n\n    private byte[] generateReportData(Report report, String exportFormat) {\n        try {\n            ReportData data = dataSource.getReportData(report.getId());\n            ReportGenerator generator = reportGenerators.get(exportFormat.toLowerCase());\n            if (generator != null) {\n                return generator.generate(data);\n            }\n        } catch (Exception e) {\n            // Handle exception\n        }\n        return null;\n    }\n\n    private String getFileExtension(String format) {\n        switch (format.toLowerCase()) {\n            case \"pdf\":\n                return \".pdf\";\n            case \"excel\":\n                return \".xlsx\";\n            case \"html\":\n                return \".html\";\n            case \"csv\":\n                return \".csv\";\n            default:\n                return \".txt\";\n        }\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [
                    "ReportGenerator"
                  ],
                  "classes": [
                    [
                      "PdfReportGenerator",
                      "ReportGenerator"
                    ],
                    [
                      "ExcelReportGenerator",
                      "ReportGenerator"
                    ],
                    [
                      "ReportExporter",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class PdfReportGenerator implements ReportGenerator {\n    @Override\n    public byte[] generate(ReportData data) {\n        PdfDocument document = new PdfDocument();\n        return document.generate();\n    }\n}\n\npublic ",
                        "class ExcelReportGenerator implements ReportGenerator {\n    @Override\n    public byte[] generate(ReportData data) {\n        ExcelDocument document = new ExcelDocument();\n        return document.generate();\n    }\n}\n\n// Similarly, implement HtmlReportGenerator and CsvReportGenerator\n\npublic ",
                        "class ReportExporter {\n    private DataSource dataSource;\n    private FileSystem fileSystem;\n    private Map<String, ReportGenerator> reportGenerators;\n\n    public ReportExporter(DataSource dataSource, FileSystem fileSystem) {\n        this.dataSource = dataSource;\n        this.fileSystem = fileSystem;\n        this.reportGenerators = new HashMap<>();\n        reportGenerators.put(\"pdf\", new PdfReportGenerator());\n        reportGenerators.put(\"excel\", new ExcelReportGenerator());\n        // Add other generators\n    }\n\n    public ExportResult exportReport(String reportId, String exportFormat, String destination) {\n        Report report = dataSource.getReport(reportId);\n        \n        if (report == null) {\n            return new ExportResult(false, \"Report not found\", null);\n        }\n        \n        byte[] reportData = generateReportData(report, exportFormat);\n        if (reportData == null) {\n            return new ExportResult(false, \"Failed to generate report\", null);\n        }\n        \n        String fileName = report.getTitle() + getFileExtension(exportFormat);\n        fileSystem.writeFile(destination + \"/\" + fileName, reportData);\n        return new ExportResult(true, \"Report exported successfully\", destination + \"/\" + fileName);\n    }\n\n    private byte[] generateReportData(Report report, String exportFormat) {\n        try {\n            ReportData data = dataSource.getReportData(report.getId());\n            ReportGenerator generator = reportGenerators.get(exportFormat.toLowerCase());\n            if (generator != null) {\n                return generator.generate(data);\n            }\n        } catch (Exception e) {\n            // Handle exception\n        }\n        return null;\n    }\n\n    private String getFileExtension(String format) {\n        switch (format.toLowerCase()) {\n            case \"pdf\":\n                return \".pdf\";\n            case \"excel\":\n                return \".xlsx\";\n            case \"html\":\n                return \".html\";\n            case \"csv\":\n                return \".csv\";\n            default:\n                return \".txt\";\n        }\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public ReportExporter(DataSource dataSource, FileSystem fileSystem)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 3895,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3617,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3226,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3952,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public class ShippingService {\n    private final OrderValidationService orderValidationService;\n    private final InventoryManagementService inventoryManagementService;\n    private final ShipmentCreationService shipmentCreationService;\n    private final CostCalculationService costCalculationService;\n    private final LoggingService loggingService;\n\n    public ShippingService(OrderValidationService orderValidationService,\n                           InventoryManagementService inventoryManagementService,\n                           ShipmentCreationService shipmentCreationService,\n                           CostCalculationService costCalculationService,\n                           LoggingService loggingService) {\n        this.orderValidationService = orderValidationService;\n        this.inventoryManagementService = inventoryManagementService;\n        this.shipmentCreationService = shipmentCreationService;\n        this.costCalculationService = costCalculationService;\n        this.loggingService = loggingService;\n    }\n\n    public ShipmentResult processShipment(Order order) {\n        if (!orderValidationService.isValid(order)) {\n            loggingService.log(\"Order validation failed.\");\n            return new ShipmentResult(false, \"Invalid order.\", null);\n        }\n\n        if (!inventoryManagementService.reserveItems(order.getItems())) {\n            loggingService.log(\"Inventory reservation failed.\");\n            return new ShipmentResult(false, \"Not enough stock.\", null);\n        }\n\n        double cost = costCalculationService.calculateCost(order);\n        Shipment shipment = shipmentCreationService.createShipment(order.getId(), cost);\n\n        loggingService.log(\"Shipment processed successfully.\");\n        return new ShipmentResult(true, \"Shipment created.\", shipment);\n    }\n}\n\n// Example of one of the services\npublic class OrderValidationService {\n    public boolean isValid(Order order) {\n        // Validation logic here\n        return order.getStatus() == OrderStatus.PAID;\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "ShippingService",
                      ""
                    ],
                    [
                      "OrderValidationService",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class ShippingService {\n    private final OrderValidationService orderValidationService;\n    private final InventoryManagementService inventoryManagementService;\n    private final ShipmentCreationService shipmentCreationService;\n    private final CostCalculationService costCalculationService;\n    private final LoggingService loggingService;\n\n    public ShippingService(OrderValidationService orderValidationService,\n                           InventoryManagementService inventoryManagementService,\n                           ShipmentCreationService shipmentCreationService,\n                           CostCalculationService costCalculationService,\n                           LoggingService loggingService) {\n        this.orderValidationService = orderValidationService;\n        this.inventoryManagementService = inventoryManagementService;\n        this.shipmentCreationService = shipmentCreationService;\n        this.costCalculationService = costCalculationService;\n        this.loggingService = loggingService;\n    }\n\n    public ShipmentResult processShipment(Order order) {\n        if (!orderValidationService.isValid(order)) {\n            loggingService.log(\"Order validation failed.\");\n            return new ShipmentResult(false, \"Invalid order.\", null);\n        }\n\n        if (!inventoryManagementService.reserveItems(order.getItems())) {\n            loggingService.log(\"Inventory reservation failed.\");\n            return new ShipmentResult(false, \"Not enough stock.\", null);\n        }\n\n        double cost = costCalculationService.calculateCost(order);\n        Shipment shipment = shipmentCreationService.createShipment(order.getId(), cost);\n\n        loggingService.log(\"Shipment processed successfully.\");\n        return new ShipmentResult(true, \"Shipment created.\", shipment);\n    }\n}\n\n// Example of one of the services\npublic ",
                        "class OrderValidationService {\n    public boolean isValid(Order order) {\n        // Validation logic here\n        return order.getStatus() == OrderStatus.PAID;\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public ShippingService(OrderValidationService orderValidationService,\n                           InventoryManagementService inventoryManagementService,\n                           ShipmentCreationService shipmentCreationService,\n                           CostCalculationService costCalculationService,\n                           LoggingService loggingService)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class ShippingService",
                        "class OrderValidationService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 3555,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "import math\n\nclass Shape:\n    def get_type(self):\n        raise NotImplementedError(\"Subclasses must implement this method\")\n\n    def calculate_area(self):\n        raise NotImplementedError(\"Subclasses must implement this method\")\n\nclass Rectangle(Shape):\n    def __init__(self, width, height):\n        self.width = width\n        self.height = height\n        \n    def get_type(self):\n        return \"rectangle\"\n        \n    def get_width(self):\n        return self.width\n        \n    def get_height(self):\n        return self.height\n\n    def calculate_area(self):\n        return self.width * self.height\n\nclass Circle(Shape):\n    def __init__(self, radius):\n        self.radius = radius\n        \n    def get_type(self):\n        return \"circle\"\n        \n    def get_radius(self):\n        return self.radius\n\n    def calculate_area(self):\n        return math.pi * self.radius ** 2\n\nclass AreaCalculator:\n    def calculate_area(self, shape):\n        return shape.calculate_area()"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Shape",
                    "Rectangle",
                    "Circle",
                    "AreaCalculator"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 1833,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "class Character:\n    def __init__(self, type):\n        self.__type = type\n    \n    def get_type(self):\n        return self.__type\n\n    def calculate_damage(self):\n        raise NotImplementedError(\"Subclasses should implement this method\")\n\nclass Warrior(Character):\n    def __init__(self, strength):\n        super().__init__(\"warrior\")\n        self.__strength = strength\n    \n    def get_strength(self):\n        return self.__strength\n\n    def calculate_damage(self):\n        return self.get_strength() * 2\n\nclass Mage(Character):\n    def __init__(self, mana):\n        super().__init__(\"mage\")\n        self.__mana = mana\n    \n    def get_mana(self):\n        return self.__mana\n\n    def calculate_damage(self):\n        return self.get_mana() * 3\n\nclass DamageCalculator:\n    def calculate_damage(self, character):\n        return character.calculate_damage()"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Character",
                    "Warrior",
                    "Mage",
                    "DamageCalculator"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 1828,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "class Animal:\n    def __init__(self, type):\n        self.__type = type\n    \n    def get_type(self):\n        return self.__type\n\n    def make_sound(self):\n        raise NotImplementedError(\"Subclasses should implement this method\")\n\nclass Dog(Animal):\n    def __init__(self):\n        super().__init__(\"dog\")\n    \n    def make_sound(self):\n        return \"Woof!\"\n\nclass Cat(Animal):\n    def __init__(self):\n        super().__init__(\"cat\")\n    \n    def make_sound(self):\n        return \"Meow!\"\n\nclass SoundMaker:\n    def make_sound(self, animal):\n        return animal.make_sound()"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Animal",
                    "Dog",
                    "Cat",
                    "SoundMaker"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 1429,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "class SpeedCalculator:\n    def calculate_max_speed(self, vehicle):\n        if vehicle.get_type() == \"car\":\n            car = vehicle\n            return car.get_horse_power() * 0.4\n        elif vehicle.get_type() == \"bicycle\":\n            bicycle = vehicle\n            return bicycle.get_gear_count() * 5.0\n        return 0",
                  "class Vehicle:\n    def __init__(self, type):\n        self.__type = type\n    \n    def get_type(self):\n        return self.__type\n\n    def calculate_max_speed(self):\n        raise NotImplementedError(\"Subclasses should implement this method\")\n\nclass Car(Vehicle):\n    def __init__(self, horse_power):\n        super().__init__(\"car\")\n        self.__horse_power = horse_power\n    \n    def get_horse_power(self):\n        return self.__horse_power\n\n    def calculate_max_speed(self):\n        return self.get_horse_power() * 0.4\n\nclass Bicycle(Vehicle):\n    def __init__(self, gear_count):\n        super().__init__(\"bicycle\")\n        self.__gear_count = gear_count\n    \n    def get_gear_count(self):\n        return self.__gear_count\n\n    def calculate_max_speed(self):\n        return self.get_gear_count() * 5.0\n\nclass SpeedCalculator:\n    def calculate_max_speed(self, vehicle):\n        return vehicle.calculate_max_speed()"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "SpeedCalculator"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 2064,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "class CreditCardPaymentProcessor:\n    def process_payment(self, amount):\n        print(f\"Processing credit card payment of ${amount}\")\n        print(\"Validating credit card information\")\n        print(\"Charging credit card\")\n        print(\"Recording the credit card transaction\")\n\nclass PayPalPaymentProcessor:\n    def process_payment(self, amount):\n        print(f\"Processing PayPal payment of ${amount}\")\n        print(\"Redirecting user to PayPal\")\n        print(\"Confirming PayPal payment\")\n        print(\"Recording the PayPal transaction\")\n\nclass BankTransferPaymentProcessor:\n    def process_payment(self, amount):\n        print(f\"Processing bank transfer of ${amount}\")\n        print(\"Generating bank transfer instructions\")\n        print(\"Sending transfer confirmation email\")\n        print(\"Recording the bank transfer transaction\")\n\n# Usage\ndef process_payment(payment_type, amount):\n    if payment_type == \"credit_card\":\n        processor = CreditCardPaymentProcessor()\n    elif payment_type == \"paypal\":\n        processor = PayPalPaymentProcessor()\n    elif payment_type == \"bank_transfer\":\n        processor = BankTransferPaymentProcessor()\n    else:\n        raise ValueError(\"Unsupported payment type\")\n    \n    processor.process_payment(amount)"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "CreditCardPaymentProcessor",
                    "PayPalPaymentProcessor",
                    "BankTransferPaymentProcessor"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class CreditCardPaymentProcessor:\n    def process_payment(self, amount):\n        print(f\"Processing credit card payment of ${amount}\")\n        print(\"Validating credit card information\")\n        print(\"Charging credit card\")\n        print(\"Recording the credit card transaction\")\n\n",
                        "class PayPalPaymentProcessor:\n    def process_payment(self, amount):\n        print(f\"Processing PayPal payment of ${amount}\")\n        print(\"Redirecting user to PayPal\")\n        print(\"Confirming PayPal payment\")\n        print(\"Recording the PayPal transaction\")\n\n",
                        "class BankTransferPaymentProcessor:\n    def process_payment(self, amount):\n        print(f\"Processing bank transfer of ${amount}\")\n        print(\"Generating bank transfer instructions\")\n        print(\"Sending transfer confirmation email\")\n        print(\"Recording the bank transfer transaction\")\n\n# Usage\ndef process_payment(payment_type, amount):\n    if payment_type == \"credit_card\":\n        processor = CreditCardPaymentProcessor()\n    elif payment_type == \"paypal\":\n        processor = PayPalPaymentProcessor()\n    elif payment_type == \"bank_transfer\":\n        processor = BankTransferPaymentProcessor()\n    else:\n        raise ValueError(\"Unsupported payment type\")\n    \n    processor.process_payment(amount)"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def process_payment(self, amount)",
                        "def process_payment(self, amount)",
                        "def process_payment(self, amount)",
                        "def process_payment(payment_type, amount)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1979,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1139,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "python": [
                  "import uuid\nfrom typing import Set\n\nclass Document:\n    def __init__(self, title, content, creator):\n        self.id = str(uuid.uuid4())\n        self.title = title\n        self.content = content\n        self.creator = creator\n        self.shared_users = set()\n    \n    def get_id(self):\n        return self.id\n    \n    def get_title(self):\n        return self.title\n    \n    def get_content(self):\n        return self.content\n    \n    def get_creator(self):\n        return self.creator\n    \n    def get_shared_users(self):\n        return self.shared_users\n    \n    def add_shared_user(self, user):\n        self.shared_users.add(user)\n\nclass User:\n    def __init__(self, username, contact_info, preferred_contact_method):\n        self.id = str(uuid.uuid4())\n        self.username = username\n        self.contact_info = contact_info\n        self.preferred_contact_method = preferred_contact_method\n    \n    def get_id(self):\n        return self.id\n    \n    def get_username(self):\n        return self.username\n    \n    def get_contact_info(self):\n        return self.contact_info\n    \n    def get_preferred_contact_method(self):\n        return self.preferred_contact_method\n\nclass DocumentRepository:\n    def save(self, document):\n        pass\n    \n    def update(self, document):\n        pass\n    \n    def find_by_id(self, id):\n        pass\n\nclass SecurityService:\n    def can_share_document(self, document, user):\n        pass\n\nclass Logger:\n    def log(self, message):\n        pass\n\nclass NotificationService:\n    def __init__(self, logger):\n        self.logger = logger\n    \n    def notify_user(self, document, recipient, shared_by):\n        recipient_contact = recipient.get_contact_info()\n        message = f\"Document '{document.get_title()}' has been shared with you by {shared_by.get_username()}\"\n        \n        contact_type = recipient.get_preferred_contact_method()\n        \n        if contact_type == \"email\":\n            self.send_email(recipient_contact, \"Document Shared\", message)\n        elif contact_type == \"sms\":\n            self.send_sms(recipient_contact, message)\n        elif contact_type == \"push\":\n            self.send_push_notification(recipient_contact, \"Document Shared\", message)\n        elif contact_type == \"slack\":\n            self.send_slack_message(recipient_contact, message)\n        else:\n            self.logger.log(f\"Unknown contact method: {contact_type}\")\n    \n    def send_email(self, email, subject, message):\n        print(f\"Sending email to {email}\")\n        print(f\"Subject: {subject}\")\n        print(f\"Message: {message}\")\n    \n    def send_sms(self, phone_number, message):\n        print(f\"Sending SMS to {phone_number}\")\n        print(f\"Message: {message}\")\n    \n    def send_push_notification(self, device_id, title, message):\n        print(f\"Sending push notification to device {device_id}\")\n        print(f\"Title: {title}\")\n        print(f\"Message: {message}\")\n    \n    def send_slack_message(self, slack_user_id, message):\n        print(f\"Sending Slack message to {slack_user_id}\")\n        print(f\"Message: {message}\")\n\nclass SharingService:\n    def __init__(self, security_service, repository, logger):\n        self.security_service = security_service\n        self.repository = repository\n        self.logger = logger\n    \n    def share_document(self, document, recipient, shared_by):\n        self.validate_sharing_permissions(document, shared_by)\n        document.add_shared_user(recipient)\n        self.repository.update(document)\n        self.logger.log(f\"Document {document.get_id()} shared with {recipient.get_username()}\")\n    \n    def validate_sharing_permissions(self, document, user):\n        if not self.security_service.can_share_document(document, user):\n            raise SecurityError(\"User does not have permission to share this document\")\n\nclass DocumentService:\n    def __init__(self, repository, security_service, logger, notification_service, sharing_service):\n        self.repository = repository\n        self.security_service = security_service\n        self.logger = logger\n        self.notification_service = notification_service\n        self.sharing_service = sharing_service\n    \n    def create_document(self, title, content, creator):\n        document = Document(title, content, creator)\n        self.repository.save(document)\n        self.logger.log(f\"Document created: {document.get_id()}\")\n        return document\n    \n    def share_document(self, document, recipient, shared_by):\n        self.sharing_service.share_document(document, recipient, shared_by)\n        self.notification_service.notify_user(document, recipient, shared_by)\n\nclass SecurityError(Exception):\n    pass"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "Document",
                    "User",
                    "DocumentRepository",
                    "SecurityService",
                    "Logger",
                    "NotificationService",
                    "SharingService",
                    "DocumentService",
                    "SecurityError"
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class Document:\n    def __init__(self, title, content, creator):\n        self.id = str(uuid.uuid4())\n        self.title = title\n        self.content = content\n        self.creator = creator\n        self.shared_users = set()\n    \n    def get_id(self):\n        return self.id\n    \n    def get_title(self):\n        return self.title\n    \n    def get_content(self):\n        return self.content\n    \n    def get_creator(self):\n        return self.creator\n    \n    def get_shared_users(self):\n        return self.shared_users\n    \n    def add_shared_user(self, user):\n        self.shared_users.add(user)\n\n",
                        "class User:\n    def __init__(self, username, contact_info, preferred_contact_method):\n        self.id = str(uuid.uuid4())\n        self.username = username\n        self.contact_info = contact_info\n        self.preferred_contact_method = preferred_contact_method\n    \n    def get_id(self):\n        return self.id\n    \n    def get_username(self):\n        return self.username\n    \n    def get_contact_info(self):\n        return self.contact_info\n    \n    def get_preferred_contact_method(self):\n        return self.preferred_contact_method\n\n",
                        "class DocumentRepository:\n    def save(self, document):\n        pass\n    \n    def update(self, document):\n        pass\n    \n    def find_by_id(self, id):\n        pass\n\n",
                        "class SecurityService:\n    def can_share_document(self, document, user):\n        pass\n\n",
                        "class Logger:\n    def log(self, message):\n        pass\n\n",
                        "class NotificationService:\n    def __init__(self, logger):\n        self.logger = logger\n    \n    def notify_user(self, document, recipient, shared_by):\n        recipient_contact = recipient.get_contact_info()\n        message = f\"Document '{document.get_title()}' has been shared with you by {shared_by.get_username()}\"\n        \n        contact_type = recipient.get_preferred_contact_method()\n        \n        if contact_type == \"email\":\n            self.send_email(recipient_contact, \"Document Shared\", message)\n        elif contact_type == \"sms\":\n            self.send_sms(recipient_contact, message)\n        elif contact_type == \"push\":\n            self.send_push_notification(recipient_contact, \"Document Shared\", message)\n        elif contact_type == \"slack\":\n            self.send_slack_message(recipient_contact, message)\n        else:\n            self.logger.log(f\"Unknown contact method: {contact_type}\")\n    \n    def send_email(self, email, subject, message):\n        print(f\"Sending email to {email}\")\n        print(f\"Subject: {subject}\")\n        print(f\"Message: {message}\")\n    \n    def send_sms(self, phone_number, message):\n        print(f\"Sending SMS to {phone_number}\")\n        print(f\"Message: {message}\")\n    \n    def send_push_notification(self, device_id, title, message):\n        print(f\"Sending push notification to device {device_id}\")\n        print(f\"Title: {title}\")\n        print(f\"Message: {message}\")\n    \n    def send_slack_message(self, slack_user_id, message):\n        print(f\"Sending Slack message to {slack_user_id}\")\n        print(f\"Message: {message}\")\n\n",
                        "class SharingService:\n    def __init__(self, security_service, repository, logger):\n        self.security_service = security_service\n        self.repository = repository\n        self.logger = logger\n    \n    def share_document(self, document, recipient, shared_by):\n        self.validate_sharing_permissions(document, shared_by)\n        document.add_shared_user(recipient)\n        self.repository.update(document)\n        self.logger.log(f\"Document {document.get_id()} shared with {recipient.get_username()}\")\n    \n    def validate_sharing_permissions(self, document, user):\n        if not self.security_service.can_share_document(document, user):\n            raise SecurityError(\"User does not have permission to share this document\")\n\n",
                        "class DocumentService:\n    def __init__(self, repository, security_service, logger, notification_service, sharing_service):\n        self.repository = repository\n        self.security_service = security_service\n        self.logger = logger\n        self.notification_service = notification_service\n        self.sharing_service = sharing_service\n    \n    def create_document(self, title, content, creator):\n        document = Document(title, content, creator)\n        self.repository.save(document)\n        self.logger.log(f\"Document created: {document.get_id()}\")\n        return document\n    \n    def share_document(self, document, recipient, shared_by):\n        self.sharing_service.share_document(document, recipient, shared_by)\n        self.notification_service.notify_user(document, recipient, shared_by)\n\n",
                        "class SecurityError(Exception):\n    pass"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "def __init__(self, title, content, creator)",
                        "def get_id(self)",
                        "def get_title(self)",
                        "def get_content(self)",
                        "def get_creator(self)",
                        "def get_shared_users(self)",
                        "def add_shared_user(self, user)",
                        "def __init__(self, username, contact_info, preferred_contact_method)",
                        "def get_id(self)",
                        "def get_username(self)",
                        "def get_contact_info(self)",
                        "def get_preferred_contact_method(self)",
                        "def save(self, document)",
                        "def update(self, document)",
                        "def find_by_id(self, id)",
                        "def can_share_document(self, document, user)",
                        "def log(self, message)",
                        "def __init__(self, logger)",
                        "def notify_user(self, document, recipient, shared_by)",
                        "def send_email(self, email, subject, message)",
                        "def send_sms(self, phone_number, message)",
                        "def send_push_notification(self, device_id, title, message)",
                        "def send_slack_message(self, slack_user_id, message)",
                        "def __init__(self, security_service, repository, logger)",
                        "def share_document(self, document, recipient, shared_by)",
                        "def validate_sharing_permissions(self, document, user)",
                        "def __init__(self, repository, security_service, logger, notification_service, sharing_service)",
                        "def create_document(self, title, content, creator)",
                        "def share_document(self, document, recipient, shared_by)"
                      ]
                    },
                    {
                      "pattern": "responsibility_split",
                      "matches": [
                        "class SecurityService",
                        "class NotificationService",
                        "class SharingService",
                        "class DocumentService"
                      ]
                    }
                  ]
                }
              },
              "response_length": 5910,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3270,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4172,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3463,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3996,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2057,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "abstract class Shape {\n    abstract fun calculateArea(): Double\n}\n\nclass Rectangle(private val width: Double, private val height: Double) : Shape() {\n    override fun calculateArea(): Double {\n        return width * height\n    }\n}\n\nclass Circle(private val radius: Double) : Shape() {\n    override fun calculateArea(): Double {\n        return Math.PI * radius * radius\n    }\n}\n\nclass AreaCalculator {\n    fun calculateArea(shape: Shape): Double {\n        return shape.calculateArea()\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Shape",
                      ""
                    ],
                    [
                      "Rectangle",
                      ""
                    ],
                    [
                      "Circle",
                      ""
                    ],
                    [
                      "AreaCalculator",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "override ",
                        "override "
                      ]
                    },
                    {
                      "pattern": "abstract_methods",
                      "matches": [
                        "abstract fun calculateArea("
                      ]
                    }
                  ]
                }
              },
              "response_length": 1556,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "class Rogue(private val agility: Int) : Character(\"rogue\") {\n    fun getAgility(): Int {\n        return agility\n    }\n}",
                  "fun calculateDamage(character: Character): Int {\n    return when (character.getType()) {\n        \"warrior\" -> {\n            val warrior = character as Warrior\n            warrior.getStrength() * 2\n        }\n        \"mage\" -> {\n            val mage = character as Mage\n            mage.getMana() * 3\n        }\n        \"rogue\" -> { // New case for Rogue\n            val rogue = character as Rogue\n            rogue.getAgility() * 4\n        }\n        else -> 0\n    }\n}",
                  "abstract class Character(private val type: String) {\n    fun getType(): String {\n        return type\n    }\n\n    abstract fun calculateDamage(): Int\n}\n\nclass Warrior(private val strength: Int) : Character(\"warrior\") {\n    override fun calculateDamage(): Int {\n        return strength * 2\n    }\n}\n\nclass Mage(private val mana: Int) : Character(\"mage\") {\n    override fun calculateDamage(): Int {\n        return mana * 3\n    }\n}\n\n// New Rogue class with its own damage calculation\nclass Rogue(private val agility: Int) : Character(\"rogue\") {\n    override fun calculateDamage(): Int {\n        return agility * 4\n    }\n}\n\nclass DamageCalculator {\n    fun calculateDamage(character: Character): Int {\n        return character.calculateDamage()\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Rogue",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 2466,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1377,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "kotlin": [
                  "abstract class Vehicle(private val type: String) {\n    fun getType(): String {\n        return type\n    }\n\n    abstract fun calculateMaxSpeed(): Double\n}\n\nclass Car(private val horsePower: Int) : Vehicle(\"car\") {\n    override fun calculateMaxSpeed(): Double {\n        return horsePower * 0.4\n    }\n}\n\nclass Bicycle(private val gearCount: Int) : Vehicle(\"bicycle\") {\n    override fun calculateMaxSpeed(): Double {\n        return gearCount * 5.0\n    }\n}\n\nclass SpeedCalculator {\n    fun calculateMaxSpeed(vehicle: Vehicle): Double {\n        return vehicle.calculateMaxSpeed()\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Vehicle",
                      ""
                    ],
                    [
                      "Car",
                      ""
                    ],
                    [
                      "Bicycle",
                      ""
                    ],
                    [
                      "SpeedCalculator",
                      ""
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "override ",
                        "override "
                      ]
                    },
                    {
                      "pattern": "abstract_methods",
                      "matches": [
                        "abstract class Vehicle(",
                        "abstract fun calculateMaxSpeed("
                      ]
                    }
                  ]
                }
              },
              "response_length": 2187,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "kotlin": [
                  "interface PaymentProcessor {\n    fun processPayment(amount: Double)\n}\n\nclass CreditCardPaymentProcessor : PaymentProcessor {\n    override fun processPayment(amount: Double) {\n        println(\"Processing credit card payment of $${amount}\")\n        println(\"Validating credit card information\")\n        println(\"Charging credit card\")\n        println(\"Recording the credit card transaction\")\n    }\n}\n\nclass PaypalPaymentProcessor : PaymentProcessor {\n    override fun processPayment(amount: Double) {\n        println(\"Processing PayPal payment of $${amount}\")\n        println(\"Redirecting user to PayPal\")\n        println(\"Confirming PayPal payment\")\n        println(\"Recording the PayPal transaction\")\n    }\n}\n\nclass BankTransferPaymentProcessor : PaymentProcessor {\n    override fun processPayment(amount: Double) {\n        println(\"Processing bank transfer of $${amount}\")\n        println(\"Generating bank transfer instructions\")\n        println(\"Sending transfer confirmation email\")\n        println(\"Recording the bank transfer transaction\")\n    }\n}"
                ]
              },
              "language_analysis": {
                "kotlin": {
                  "interfaces": [
                    "PaymentProcessor"
                  ],
                  "classes": [
                    [
                      "CreditCardPaymentProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "PaypalPaymentProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "BankTransferPaymentProcessor",
                      "PaymentProcessor"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "kotlin": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class CreditCardPaymentProcessor : PaymentProcessor {\n    override fun processPayment(amount: Double) {\n        println(\"Processing credit card payment of $${amount}\")\n        println(\"Validating credit card information\")\n        println(\"Charging credit card\")\n        println(\"Recording the credit card transaction\")\n    }\n}\n\n",
                        "class PaypalPaymentProcessor : PaymentProcessor {\n    override fun processPayment(amount: Double) {\n        println(\"Processing PayPal payment of $${amount}\")\n        println(\"Redirecting user to PayPal\")\n        println(\"Confirming PayPal payment\")\n        println(\"Recording the PayPal transaction\")\n    }\n}\n\n",
                        "class BankTransferPaymentProcessor : PaymentProcessor {\n    override fun processPayment(amount: Double) {\n        println(\"Processing bank transfer of $${amount}\")\n        println(\"Generating bank transfer instructions\")\n        println(\"Sending transfer confirmation email\")\n        println(\"Recording the bank transfer transaction\")\n    }\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1875,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 722,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 845,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3560,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4172,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2683,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 5521,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2626,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1470,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1836,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1553,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "csharp": [
                  "abstract class Vehicle\n{\n    public abstract double CalculateMaxSpeed();\n}\n\nclass Car : Vehicle\n{\n    private int horsePower;\n\n    public Car(int horsePower)\n    {\n        this.horsePower = horsePower;\n    }\n\n    public override double CalculateMaxSpeed()\n    {\n        return horsePower * 0.4;\n    }\n}\n\nclass Bicycle : Vehicle\n{\n    private int gearCount;\n\n    public Bicycle(int gearCount)\n    {\n        this.gearCount = gearCount;\n    }\n\n    public override double CalculateMaxSpeed()\n    {\n        return gearCount * 5.0;\n    }\n}\n\nclass SpeedCalculator\n{\n    public double CalculateMaxSpeed(Vehicle vehicle)\n    {\n        return vehicle.CalculateMaxSpeed();\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [],
                  "classes": [
                    [
                      "Vehicle",
                      ""
                    ],
                    [
                      "Car",
                      "Vehicle"
                    ],
                    [
                      "Bicycle",
                      "Vehicle"
                    ],
                    [
                      "SpeedCalculator",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": false,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "polymorphism_usage",
                      "matches": [
                        "override ",
                        "override "
                      ]
                    },
                    {
                      "pattern": "abstract_methods",
                      "matches": [
                        "abstract double CalculateMaxSpeed("
                      ]
                    }
                  ]
                }
              },
              "response_length": 1597,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "csharp": [
                  "public interface IPaymentProcessor {\n    void ProcessPayment(double amount);\n}\n\npublic class CreditCardPaymentProcessor : IPaymentProcessor {\n    public void ProcessPayment(double amount) {\n        Console.WriteLine($\"Processing credit card payment of ${amount}\");\n        Console.WriteLine(\"Validating credit card information\");\n        Console.WriteLine(\"Charging credit card\");\n        Console.WriteLine(\"Recording the credit card transaction\");\n    }\n}\n\npublic class PaypalPaymentProcessor : IPaymentProcessor {\n    public void ProcessPayment(double amount) {\n        Console.WriteLine($\"Processing PayPal payment of ${amount}\");\n        Console.WriteLine(\"Redirecting user to PayPal\");\n        Console.WriteLine(\"Confirming PayPal payment\");\n        Console.WriteLine(\"Recording the PayPal transaction\");\n    }\n}\n\npublic class BankTransferPaymentProcessor : IPaymentProcessor {\n    public void ProcessPayment(double amount) {\n        Console.WriteLine($\"Processing bank transfer of ${amount}\");\n        Console.WriteLine(\"Generating bank transfer instructions\");\n        Console.WriteLine(\"Sending transfer confirmation email\");\n        Console.WriteLine(\"Recording the bank transfer transaction\");\n    }\n}"
                ]
              },
              "language_analysis": {
                "csharp": {
                  "interfaces": [
                    "PaymentProcessor"
                  ],
                  "classes": [
                    [
                      "CreditCardPaymentProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "PaypalPaymentProcessor",
                      "PaymentProcessor"
                    ],
                    [
                      "BankTransferPaymentProcessor",
                      "PaymentProcessor"
                    ]
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 3
                }
              },
              "violation_analysis": {
                "csharp": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class CreditCardPaymentProcessor : IPaymentProcessor {\n    public void ProcessPayment(double amount) {\n        Console.WriteLine($\"Processing credit card payment of ${amount}\");\n        Console.WriteLine(\"Validating credit card information\");\n        Console.WriteLine(\"Charging credit card\");\n        Console.WriteLine(\"Recording the credit card transaction\");\n    }\n}\n\npublic ",
                        "class PaypalPaymentProcessor : IPaymentProcessor {\n    public void ProcessPayment(double amount) {\n        Console.WriteLine($\"Processing PayPal payment of ${amount}\");\n        Console.WriteLine(\"Redirecting user to PayPal\");\n        Console.WriteLine(\"Confirming PayPal payment\");\n        Console.WriteLine(\"Recording the PayPal transaction\");\n    }\n}\n\npublic ",
                        "class BankTransferPaymentProcessor : IPaymentProcessor {\n    public void ProcessPayment(double amount) {\n        Console.WriteLine($\"Processing bank transfer of ${amount}\");\n        Console.WriteLine(\"Generating bank transfer instructions\");\n        Console.WriteLine(\"Sending transfer confirmation email\");\n        Console.WriteLine(\"Recording the bank transfer transaction\");\n    }\n}"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1975,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1107,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1017,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2693,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3339,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2811,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3345,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 3637,
              "model": "qwen2.5-coder32b-temp0:latest",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 10,
            "fail": 38,
            "error": 0,
            "accuracy": 0.20833333333333334
          }
        }
      },
      "overall_stats": {
        "total_pass": 10,
        "total_fail": 38,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "ocp--gpt-4o-mini--smell": {
    "smell": {
      "model": "ocp--gpt-4o-mini--smell",
      "prompt_type": "smell",
      "total_items": 48,
      "violation_results": {
        "ocp": {
          "items": [
            {
              "id": 0,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1246,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 1,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1299,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 2,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 768,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 3,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1441,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 4,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1055,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1021,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1041,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1167,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1226,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1352,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1329,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1231,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 12,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1276,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1319,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 14,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1236,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 15,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1280,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 16,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1051,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 897,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 785,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1186,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 652,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1295,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1524,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1100,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 24,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1271,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1396,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 26,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 209,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 27,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1202,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 28,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1033,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 925,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 999,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1198,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 956,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1101,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1120,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1041,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 36,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1280,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1313,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 38,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1270,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 39,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1341,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 40,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1098,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 999,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 806,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1255,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1388,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1195,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1197,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1034,
              "model": "gpt-4o-mini",
              "strategy": "smell"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 0,
            "fail": 48,
            "error": 0,
            "accuracy": 0.0
          }
        }
      },
      "overall_stats": {
        "total_pass": 0,
        "total_fail": 48,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  },
  "ocp--deepseek33b-temp0-latest--default": {
    "default": {
      "model": "ocp--deepseek33b-temp0-latest--default",
      "prompt_type": "default",
      "total_items": 48,
      "violation_results": {
        "ocp": {
          "items": [
            {
              "id": 0,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 296,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 1,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 342,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 2,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 294,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 3,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 337,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 4,
              "status": "PASS",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 490,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 5,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1205,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 6,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 960,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 7,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {
                "java": [
                  "public class ReportExporter {\n    private DataSource dataSource;\n    private FileWriter fileWriter;\n    \n    public ReportExporter(DataSource dataSource, FileWriter fileWriter) {\n        this.dataSource = dataSource;\n        this.fileWriter = fileWriter;\n    }\n    \n    // ... other methods ...\n}\n\npublic class ReportGenerator {\n    private DataSource dataSource;\n    \n    public ReportGenerator(DataSource dataSource) {\n        this.dataSource = dataSource;\n    }\n    \n    public byte[] generateReportData(Report report, String exportFormat) {\n        // ... code to generate report data ...\n    }\n}\n\npublic class FileWriter {\n    private FileSystem fileSystem;\n    \n    public FileWriter(FileSystem fileSystem) {\n        this.fileSystem = fileSystem;\n    }\n    \n    public void writeFile(String path, byte[] data) {\n        // ... code to write file ...\n    }\n}"
                ]
              },
              "language_analysis": {
                "java": {
                  "interfaces": [],
                  "classes": [
                    [
                      "ReportExporter",
                      ""
                    ],
                    [
                      "ReportGenerator",
                      ""
                    ],
                    [
                      "FileWriter",
                      ""
                    ]
                  ],
                  "has_dependency_injection": true,
                  "language_quality_score": 4
                }
              },
              "violation_analysis": {
                "java": {
                  "violation_addressed": true,
                  "refactoring_quality": "medium",
                  "specific_patterns": [
                    {
                      "pattern": "class_separation",
                      "matches": [
                        "class ReportExporter {\n    private DataSource dataSource;\n    private FileWriter fileWriter;\n    \n    public ReportExporter(DataSource dataSource, FileWriter fileWriter) {\n        this.dataSource = dataSource;\n        this.fileWriter = fileWriter;\n    }\n    \n    // ... other methods ...\n}\n\npublic ",
                        "class ReportGenerator {\n    private DataSource dataSource;\n    \n    public ReportGenerator(DataSource dataSource) {\n        this.dataSource = dataSource;\n    }\n    \n    public byte[] generateReportData(Report report, String exportFormat) {\n        // ... code to generate report data ...\n    }\n}\n\npublic ",
                        "class FileWriter {\n    private FileSystem fileSystem;\n    \n    public FileWriter(FileSystem fileSystem) {\n        this.fileSystem = fileSystem;\n    }\n    \n    public void writeFile(String path, byte[] data) {\n        // ... code to write file ...\n    }\n}"
                      ]
                    },
                    {
                      "pattern": "method_extraction",
                      "matches": [
                        "public ReportExporter(DataSource dataSource, FileWriter fileWriter)",
                        "public ReportGenerator(DataSource dataSource)",
                        "public FileWriter(FileSystem fileSystem)"
                      ]
                    }
                  ]
                }
              },
              "response_length": 1702,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 8,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2144,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 9,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2681,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 10,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2306,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 11,
              "status": "FAIL",
              "language": "JAVA",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1811,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 12,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 327,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 13,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 394,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 14,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 323,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 15,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 297,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 16,
              "status": "PASS",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {
                "python": [
                  "from abc import ABC, abstractmethod\n\nclass PaymentProcessor(ABC):\n    @abstractmethod\n    def process_payment(self, amount):\n        pass\n\nclass CreditCardPaymentProcessor(PaymentProcessor):\n    def process_payment(self, amount):\n        print(f\"Processing credit card payment of ${amount}\")\n        print(\"Validating credit card information\")\n        print(\"Charging credit card\")\n        print(\"Recording the credit card transaction\")\n\nclass PayPalPaymentProcessor(PaymentProcessor):\n    def process_payment(self, amount):\n        print(f\"Processing PayPal payment of ${amount}\")\n        print(\"Redirecting user to PayPal\")\n        print(\"Confirming PayPal payment\")\n        print(\"Recording the PayPal transaction\")\n\nclass BankTransferPaymentProcessor(PaymentProcessor):\n    def process_payment(self, amount):\n        print(f\"Processing bank transfer of ${amount}\")\n        print(\"Generating bank transfer instructions\")\n        print(\"Sending transfer confirmation email\")\n        print(\"Recording the bank transfer transaction\")"
                ]
              },
              "language_analysis": {
                "python": {
                  "interfaces": [],
                  "classes": [
                    "PaymentProcessor",
                    "CreditCardPaymentProcessor",
                    "PayPalPaymentProcessor",
                    "BankTransferPaymentProcessor"
                  ],
                  "has_dependency_injection": false,
                  "language_quality_score": 1
                }
              },
              "violation_analysis": {
                "python": {
                  "violation_addressed": false,
                  "refactoring_quality": "low",
                  "specific_patterns": []
                }
              },
              "response_length": 1633,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 17,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 322,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 18,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1271,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 19,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1042,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 20,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1581,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 21,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1614,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 22,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 584,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 23,
              "status": "FAIL",
              "language": "PYTHON",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1907,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 24,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 286,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 25,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 393,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 26,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 294,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 27,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 338,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 28,
              "status": "PASS",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 738,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 29,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": "SRP",
              "violation_match": false,
              "failure_reason": "WRONG_VIOLATION",
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 308,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 30,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1485,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 31,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1540,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 32,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 4138,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 33,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 970,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 34,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1940,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 35,
              "status": "FAIL",
              "language": "KOTLIN",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 753,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 36,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 329,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 37,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 394,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 38,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 294,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 39,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 338,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 40,
              "status": "PASS",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": "OCP",
              "violation_match": true,
              "failure_reason": null,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 712,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 41,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 811,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 42,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1221,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 43,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 458,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 44,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2470,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 45,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 750,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 46,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 1620,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            },
            {
              "id": 47,
              "status": "FAIL",
              "language": "CSHARP",
              "expected_violation": "OCP",
              "detected_violation": null,
              "failure_reason": "EXTRACTION_FAILED",
              "violation_match": false,
              "code_blocks": {},
              "language_analysis": {},
              "violation_analysis": {},
              "response_length": 2923,
              "model": "deepseek33b-temp0:latest",
              "strategy": "default"
            }
          ],
          "stats": {
            "total": 48,
            "pass": 17,
            "fail": 31,
            "error": 0,
            "accuracy": 0.3541666666666667
          }
        }
      },
      "overall_stats": {
        "total_pass": 17,
        "total_fail": 31,
        "total_error": 0,
        "languages": {
          "JAVA": 12,
          "PYTHON": 12,
          "KOTLIN": 12,
          "CSHARP": 12
        }
      }
    }
  }
}